{
  "instruction": [
    "Create a new SAP Cloud Integration project structure for an invoice request integration flow between OPSupplier and S4HANA Cloud Edition buyer system. Set up the Eclipse project configuration file with appropriate build specifications and project natures for Java development and SAP Integration Flow support.",
    "Create a build.properties file for the SAP Cloud Integration package that handles invoice request flows between OPSupplier and S/4HANA Cloud for eBuyer integration. Configure the build properties to include necessary META-INF files and exclude source files from the binary distribution while properly mapping the BPMN integration flow resources.",
    "Create a generic file component for the SAP Cloud Integration iFlow that generates and stores a cryptographic hash for invoice request files in the operational supplier to S/4HANA Cloud buyer integration scenario. The component should produce a secure hash that can be used for file integrity verification and audit trail purposes.",
    "Create a configuration properties group named 'GENERAL' for the supplier invoice integration iFlow that handles invoice requests from on-premise SAP systems to S/4HANA Cloud. Include all necessary metadata properties to identify this as an SAP-to-SAP integration scenario.",
    "Create a properties configuration file for the supplier-to-buyer invoice request integration flow that defines the metadata properties including description, SAP-to-SAP marker, source systems, and target system for the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package",
    "Configure a public certificate file in the SAP Cloud Integration iFlow for digital signature verification in the supplier-to-buyer invoice request integration scenario",
    "Create a properties group configuration for the OPSupplier integration scenario that handles invoice request messages from external suppliers to SAP S/4HANA Cloud for buyer procurement processes. Configure the sender channel properties to support both certificate-based authentication and basic authentication as fallback.",
    "Configure the S4CEBuyer receiver properties group for the SAP Operational Procurement to S4C E-Buyer invoice request integration flow with proper connectivity and message handling settings",
    "Create a properties group configuration for the SAP S/4HANA Cloud integration scenario to handle invoice request processing from Ariba Operational Procurement to S/4HANA Cloud as the buyer system. The configuration should include connection parameters for the S/4HANA system endpoint, timeout settings, and authentication credentials.",
    "Configure the HCP Integration Service Error handling properties group for the Operational Procurement supplier-to-S/4HANA Cloud buyer invoice request integration flow. Set up the authentication and SSL configuration parameters to disable security features for the error handling service endpoint.",
    "Configure the GENERAL properties group for the OpSupplier to S/4HANA Cloud Invoice Request integration iFlow with default system settings to minimize overhead and disable optional features during initial deployment phase.",
    "Create a configuration properties group for email notification settings in the SAP CPI integration flow that handles invoice request processing between OPSupplier and S/4HANA Cloud for Buyer. The properties group should contain all necessary email parameters for error handling notifications.",
    "Create a properties group configuration for error handling in the CPI invoice request integration flow between Operations Supplier and S/4HANA Cloud for Buyer systems. Configure the error handling parameters to ensure proper message processing and timeout management.",
    "Configure the properties group for IDoc to SOA transformation in the invoice request integration flow, specifically setting up the custom mapping path for INVOIC IDoc processing between operational supplier and S/4HANA Cloud for procurement.",
    "Create a comprehensive configuration properties file for an SAP Cloud Platform Integration (CPI) iFlow that handles invoice request processing between an OP Supplier system and S/4HANA Cloud for Buyer (S4CE). The configuration should include sender authentication, receiver connection settings, error handling with email notifications, and SOAP service parameters organized into logical property groups.",
    "Create a parameter definition for the error notification email sender address in the OPSupplier to S/4HANA Cloud invoice request integration flow",
    "Create a parameter definition for the invoice request integration flow that allows administrators to control logging behavior during runtime without requiring iFlow redeployment",
    "Create a parameter definition for the OPSupplier to S/4HANA invoice request integration flow to control basic authentication settings for the sender adapter",
    "Create a parameter definition for storing SAP S/4HANA system user credentials in the invoice request integration flow between OPSupplier and S/4HANA Cloud for Buyer scenario",
    "Create a parameter definition for the S4C E-Buyer receiver adapter configuration to control HTTP chunking behavior in the invoice request integration flow",
    "Create a parameter definition for the IDoc to SOA invoice mapping integration flow that will store the ninth address field mapping configuration for the supplier-to-buyer invoice request process",
    "Create a parameter definition for the S4C E-Buyer receiver authentication configuration in the invoice request integration flow. This parameter should be optional and allow for flexible authentication method specification.",
    "Create a parameter definition for the SAP S/4HANA Cloud receiver location identifier in the invoice request integration flow. This parameter should store the receiver's location ID for proper routing of invoice documents between the operational supplier and S/4HANA Cloud buyer systems.",
    "Create a parameter definition for email notification configuration in the SAP Cloud Integration iFlow that handles error scenarios during invoice request processing between OPSupplier and S/4HANA Cloud for Buyer systems.",
    "Create a parameter definition for email notification functionality in the SAP Cloud Integration iFlow that handles invoice request processing between OPSupplier and S/4HANA Cloud for Buyer systems.",
    "Create a parameter definition for the SMTP server configuration used in error handling notifications within the Operational Supplier to S/4HANA Cloud Invoice Request integration flow. The parameter should be optional and store the SMTP server endpoint for CPI error notifications.",
    "Create a parameter definition for the S4CE Buyer receiver proxy type configuration in the invoice request integration flow. This parameter should allow dynamic configuration of the proxy type for the third S4C Enterprise Buyer system receiver without making it mandatory.",
    "Create a parameter definition for error handling authentication in the invoice request integration flow between OPSupplier and S/4HANA Cloud for eBuyer. The parameter should store authentication error messages from the HCP Integration Service and be available for exception handling scenarios.",
    "Define an optional string parameter in the iFlow to capture SSL-related error messages from the HCP Integration Service for the invoice request process between Operations Supplier and S/4 Cloud E-Buyer systems",
    "Create a parameter definition for the S4C E-Buyer invoice request integration flow to control message compression at the receiver adapter level. This parameter should be configurable during deployment to optimize network performance based on environment requirements.",
    "Create a parameter definition for the invoice request integration flow that allows users to configure email notification settings. The parameter should be optional and accept string values to specify notification recipients or configuration.",
    "Create a parameter definition for email notification configuration in the invoice request integration flow that allows administrators to specify the recipient email address for CPI error notifications during the OPSupplier to S/4HANA Cloud buyer invoice processing.",
    "Create a parameter definition for the S4 HANA host URL in the OPSupplier to S4CE Buyer invoice request integration flow. This parameter should be configurable to support different SAP S4 HANA environments (DEV, QAS, PRD) without hardcoding the endpoint URLs in the iFlow logic.",
    "Add a parameter definition to the invoice request iFlow for capturing HTTP content type information during error handling scenarios in the supplier-to-buyer integration",
    "Define a parameter in the SAP Cloud Integration iFlow for handling the sender's X.509 certificate subject distinguished name in the OPSupplier to S/4HANA Cloud invoice request integration scenario",
    "Create a parameter definition for the invoice request iFlow to control attachment handling during error scenarios in the supplier-to-buyer integration",
    "Create a parameter definition for the SOAP adapter timeout configuration in the OPSupplier to S4C eBuyer invoice request integration flow. This parameter should allow runtime configuration of the timeout value for S/4HANA SOAP service calls.",
    "Create a parameter definition for the OPSupplier to S/4HANA Cloud Buyer invoice request integration flow to capture the sender's address information from the supplier system",
    "Create a parameter definition for the OPSupplier to S/4HANA Cloud invoice request integration flow to capture the sender's certificate issuer distinguished name for secure communication authentication",
    "Create a parameter definition for the invoice request integration flow to handle extension requirements between the operational supplier and S/4HANA Cloud for buyer systems",
    "Define a parameter for the invoice request iFlow to handle content encoding information during error processing scenarios between OPSupplier and S/4HANA Cloud for buyer operations",
    "Create a parameter definition for error handling timeout configuration in the OPSupplier to S/4HANA Cloud invoice request integration flow. The parameter should allow administrators to configure timeout values for error scenarios without making it mandatory.",
    "Create a parameter definition for email notification configuration in the OPSupplier to S/4HANA Cloud Buyer invoice request integration flow. The parameter should allow users to customize the email subject line when CPI processing errors occur during invoice transmission.",
    "Create a parameter definition for the S4C eBuyer receiver channel to control HTTP header cleanup behavior in the invoice request integration flow",
    "Create a parameter definitions file (propdef_overview) for the SAP Cloud Integration iFlow that handles invoice request integration between OP Supplier and S/4HANA Cloud for eBuyer. Configure all necessary parameters for authentication, error handling, logging, and system connectivity.",
    "Create a message mapping transformation for the OPSupplier to S4C eBuyer invoice request integration flow that handles the conversion between INVOIC.INVOIC02 EDI format from the supplier system and INVOICEREQUEST_IN format for the S4C buyer system",
    "Create a Groovy script function named 'processData' that implements conditional logging functionality for the invoice request integration flow between OP Supplier and S/4HANA Cloud for Buyer systems.",
    "Create a Groovy script for conditional payload logging in the invoice request integration flow. The script should check a configurable property to determine whether to log message payloads and add them as attachments to the message processing log for debugging purposes.",
    "Create a Groovy script function named 'processData' that handles S4HANA response logging for the invoice request integration flow between OP Supplier and S4C E-Buyer systems. The function should conditionally log response messages based on a configurable property and ensure proper message handling.",
    "Create a Groovy script for the OpSupplier to S4C eBuyer invoice request integration flow that conditionally logs the S4HANA response payload as an attachment to the message processing log for debugging and audit purposes.",
    "Create a Groovy function named 'splitText' in the invoice request iFlow to handle SAP S/4HANA field length limitations when processing supplier invoice text data from OP Supplier to S/4HANA Cloud for Procurement and Sourcing.",
    "Create a Groovy function named 'existsInArray' for the OpSupplier to S/4HANA eBuyer invoice request integration that validates if incoming supplier invoice line items contain valid purchase order references from the buyer system.",
    "Create a Groovy script function for the Invoice Request integration flow that performs array-based lookup operations to map supplier codes to S/4HANA vendor codes during invoice processing",
    "Create a Groovy script function for the SAP Cloud Integration iFlow that validates invoice line item descriptions against procurement pattern matching rules in the OPSupplier to S/4HANA Cloud integration scenario.",
    "Create a Groovy function in the SAP Cloud Integration iFlow to extract the object key for Customer Interaction (CUAN_INTER) related objects from invoice request data, filtering out other relationship object types and returning the first matching object key or empty space if none found.",
    "Create a Groovy script function for the invoice request integration flow that safely retrieves dynamic property values from the mapping context with fallback handling for missing properties.",
    "Create a Groovy script function for the OPSupplier to S/4HANA Cloud eBuyer invoice request integration that safely retrieves message headers with fallback handling. The function should be reusable across multiple message mapping transformations and handle cases where headers might be missing.",
    "Create a Groovy function in the SAP CPI iFlow for the OPSupplier to S/4HANA Cloud invoice request integration that generates a unique correlation ID for tracking invoice processing between systems. The function should produce a clean, uppercase UUID without hyphens that can be used as a business document identifier.",
    "Create a Groovy script function in the SAP CPI iFlow for the Operational Procurement supplier-to-S/4HANA buyer invoice request integration that extracts a substring from input data starting at a specified offset position to handle dynamic field parsing from incoming invoice messages.",
    "Create a Groovy script function for the Invoice Request integration flow that splits multiple text lines using a configurable delimiter and outputs all extracted values to the message processing pipeline for downstream S/4HANA processing.",
    "Create a Groovy script function for the SAP Cloud Integration invoice request iFlow that converts datetime strings between different time zones. The function should handle various timezone formats including UTC offset notation and standard timezone identifiers.",
    "Create a Groovy script for the SAP Cloud Integration iFlow that handles text processing for invoice request messages in the Operational Procurement Supplier to S/4HANA Cloud Buyer integration. The script should include functions to split long text fields into manageable chunks and validate field values against predefined arrays.",
    "Create a comprehensive Groovy script library for the SAP Cloud Integration iFlow handling invoice request transformations between OpSupplier and S4C eBuyer systems. The script must include utility functions for text processing, array operations, string manipulation, and data transformation commonly needed in B2B invoice processing scenarios.",
    "Create a WSDL definition for the INVOIC02 IDoc message type to support invoice data exchange between the operational supplier system and S/4HANA Cloud buyer system. The WSDL should define the schema structure for invoice/billing document processing without implementing service operations at this stage.",
    "Create a WSDL service definition for the Invoice Request interface in the SAP OP Supplier to S/4HANA Cloud Buyer integration package. Configure the service with dual SOAP binding support (SOAP 1.1 and SOAP 1.2) pointing to the SAP backend invoice processing endpoint.",
    "Create a WSDL port type definition for the Invoice Request inbound interface in the Operational Procurement supplier-to-S/4HANA Cloud buyer integration scenario. The port type should support asynchronous invoice processing with proper SAP documentation and policy references.",
    "Create a WSDL service definition for the EDI Invoice Request integration between OPSupplier and S4C eBuyer systems. The WSDL should define the service contract for processing invoice request messages in the buyer domain with proper namespace declarations and service structure.",
    "Create the main integration process for the Business Partner Relationship confirmation flow from SAP S/4HANA. Configure the process with appropriate timeout settings and ensure it handles the replication of business partner relationship confirmations without requiring transactional handling.",
    "Create a content enricher activity in the SAP CPI iFlow to set a monitoring ID header for tracking business partner relationship replication messages from SAP S/4HANA to downstream systems.",
    "Create a content enricher activity in the SAP Cloud Integration iFlow to transform and confirm Business Partner Relationship data from SAP S/4HANA using message mapping for bulk confirmation processing.",
    "Configure a SOAP sender adapter for the Business Partner Relationship replication iFlow from SAP S/4HANA. Set up the adapter to receive business partner confirmation messages with proper message size limits and address parameterization for different environments.",
    "Configure an HTTP adapter for the outbound message flow in the Business Partner Relationship replication iFlow to send confirmed relationship data from SAP S/4HANA to the target system. Set up the adapter with proper security configuration using private key authentication and ensure it handles the response appropriately.",
    "Create a sender endpoint participant for SAP S/4HANA system in the business partner relationship replication integration flow. Configure the endpoint to receive business partner relationship data from S/4HANA without basic authentication since we'll be using certificate-based authentication for this B2B integration scenario.",
    "Create an endpoint receiver component for the Cloud Notification Service (CNS) in the business partner relationship replication integration flow from SAP S/4HANA",
    "Create a start event handler for the business partner relationship confirmation iFlow that will trigger when receiving replication messages from SAP S/4HANA. The start event should be configured as a message-triggered event that can process incoming business partner relationship data and route it to the next processing step in the integration flow.",
    "Configure the final end event for the Business Partner Relationship replication confirmation flow from SAP S/4HANA. This end event should properly terminate the integration flow after successful processing of the confirmation message and ensure all resources are cleaned up appropriately.",
    "Create an Eclipse project configuration file (.project) for a new SAP Cloud Integration package that will handle business partner relationship confirmation flows from SAP S/4HANA to cloud systems",
    "Create a generic file component to generate and store a hash checksum for business partner relationship data validation in the SAP S/4HANA replication iFlow. The hash should be used to verify data integrity during the confirmation process.",
    "Create a properties group configuration for the Business Partner Relationship Replication confirmation iFlow that defines the general integration metadata including source and target systems, integration type classification, and flow description.",
    "Create a configuration properties file for the SAP Cloud Integration iFlow that handles Business Partner Relationship confirmation between SAP S/4HANA Cloud and SAP Sales/Service Cloud V2. Include all required metadata properties for SAP-to-SAP integration classification.",
    "Create a generic file resource in the SAP Cloud Integration iFlow to store the public signing certificate required for secure communication and digital signature verification in the business partner relationship replication process from SAP S/4HANA",
    "Create a GENERAL configuration properties group for the SAP S/4HANA Business Partner Relationship replication iFlow with SSL certificate authentication and connection timeout settings",
    "Create a sender configuration properties group for the Business Partner Relationship confirmation iFlow that handles inbound messages from SAP S/4HANA with role-based authentication",
    "Configure the CNS (Cloud Notification Service) authentication properties group for the business partner relationship replication iFlow from SAP S/4HANA. Set up the authentication method and credential reference according to the security requirements.",
    "Create an integration flow configuration properties file for the Business Partner Relationship Replication confirmation iFlow from SAP S/4HANA to SAP Sales Cloud. Configure the properties to handle inbound confirmation messages with proper authentication and connection settings.",
    "Create a parameter definition for the private key alias used in the business partner relationship replication iFlow from SAP S/4HANA. This parameter should be optional and allow configuration of the keystore alias for secure communication.",
    "Create a parameter definition for the business partner relationship replication iFlow to configure HTTP timeout settings for the SAP S/4HANA connection",
    "Create a parameter definition for the sender authentication method in the business partner relationship replication iFlow from SAP S/4HANA. The parameter should be configurable with predefined authentication options and not mandatory.",
    "Create a parameter definition for the business partner relationship replication iFlow to handle email notification subject lines when confirmation messages are sent to downstream systems",
    "Create a parameter definition for the CNS authentication method in the business partner relationship replication iFlow from SAP S/4HANA. The parameter should be configurable as a dropdown selection and allow for optional authentication configuration.",
    "Create a parameter definition for the CNS (Cloud Notification Service) credential in the business partner relationship replication iFlow from SAP S/4HANA. This parameter should be optional and store credential information as a string type.",
    "Create a parameter definition for the sender role identification in the business partner relationship replication iFlow. This parameter should allow dynamic configuration of the sender system role without being mandatory.",
    "Create a parameter definition for the sender address configuration in the business partner relationship replication iFlow. This parameter should allow administrators to optionally specify the sender address for the integration scenario.",
    "Create a parameter definition for the CNS-Host configuration in the business partner relationship replication iFlow. This parameter should allow dynamic configuration of the Cloud Notification Service host endpoint without making it mandatory for backward compatibility.",
    "Create a parameter definition for the business partner relationship replication iFlow to handle OAuth2 token issuer information for authentication with SAP S/4HANA system",
    "Create a parameter definitions file (propdef_overview) for the SAP S/4HANA Business Partner Relationship Replication integration flow with 10 configurable parameters to support various authentication methods, timeout settings, and system connectivity options.",
    "Create a JSON document configuration for an SAP iFlow component that handles business partner relationship confirmation messages from SAP S/4HANA to SAP CRM. The component should define the OpenAPI specification for the inbound data connector service endpoint that receives confirmation messages when business partner relationships are replicated from S/4HANA.",
    "Create a message mapping component for the Business Partner Relationship replication iFlow that will handle the transformation between S/4HANA confirmation messages and C4C inbound format without predefined source and target structures",
    "Create a Groovy function in the message mapping to extract and return the SAP message ID from the exchange headers for tracking business partner relationship confirmations during S/4HANA replication processing.",
    "Create a Groovy script mapping function library for the business partner relationship replication iFlow that extracts the SAP message ID from the exchange headers for tracking and correlation purposes across the integration landscape.",
    "Create a WSDL port type for the outbound confirmation interface that will handle business partner relationship replication confirmations from SAP S/4HANA Cloud to external systems. The port type should support bulk confirmation processing and include proper SAP policy references for security and governance.",
    "Create a WSDL definition file for the Business Partner Relationship Confirmation integration from SAP S/4HANA to external systems. The WSDL should define the port type for receiving business partner relationship confirmation messages but should not include service bindings as these will be configured separately in the iFlow.",
    "Create the main integration process for the Business Partner Relationship Replication to SAP S/4HANA package. Configure the process with appropriate timeout settings and ensure it follows SAP Cloud Integration best practices for transactional handling.",
    "Create a content enricher activity to set a monitoring ID header for tracking business partner relationship replication messages in the SAP S/4HANA integration flow",
    "Create a content enricher activity in the SAP Cloud Integration iFlow to transform and enrich business partner relationship confirmation messages before sending them to SAP S/4HANA system",
    "Configure an HTTPS sender adapter for the business partner relationship replication iFlow to receive confirmation messages from external systems and route them to SAP S/4HANA. Set up the message flow with appropriate size limits and error handling.",
    "Configure the SOAP adapter for the outbound message flow in the Business Partner Relationship Replication iFlow to SAP S/4HANA. Set up the adapter to clean headers, use parameterized private key alias for security, and establish proper namespace configuration for SAP integration.",
    "Create a sender endpoint configuration for the CNS (Central Notification Service) system in the business partner relationship replication integration flow that will receive confirmation messages from SAP S/4HANA without basic authentication",
    "Create an endpoint receiver participant in the SAP Cloud Integration iFlow for the business partner relationship replication scenario. The endpoint should be configured to receive confirmed business partner relationship data and forward it to the SAP S/4HANA system.",
    "Create a message-based start event for the business partner relationship replication iFlow that will trigger the confirmation process when relationship data changes are received from the source system",
    "Configure an End Event component in the SAP Cloud Integration iFlow for the business partner relationship confirmation process to S/4HANA. The End Event should properly terminate the integration flow after successful replication confirmation and include appropriate BPMN message event definition for downstream system notification.",
    "Create a generic file component for generating MD5 hash checksums of business partner relationship data payloads in the SAP S/4HANA replication iFlow to ensure data integrity during transmission",
    "Create a configuration properties group named 'GENERAL' for the Business Partner Relationship Replication confirmation iFlow that will handle data synchronization between SAP Sales Cloud/Service Cloud Version 2 and SAP S/4HANA Public Cloud. Include all necessary metadata properties to identify this as an SAP-to-SAP integration scenario.",
    "Create a configuration properties file for the Business Partner Relationship Replication integration flow that will handle confirmations from SAP Sales Cloud and SAP Service Cloud Version 2 to SAP S/4HANA Public Cloud. Include all necessary metadata properties to identify this as an SAP-to-SAP integration scenario.",
    "Create a generic file component in the SAP CPI iFlow to store the public signing certificate for secure message validation in the business partner relationship replication integration to SAP S/4HANA",
    "Configure the GENERAL properties group for the business partner relationship replication iFlow to SAP S/4HANA. Set up the authentication and timeout parameters required for secure communication with the target system.",
    "Create a sender configuration property group for the SAP Cloud for Customer to SAP S/4HANA business partner relationship confirmation integration flow. Configure the authentication method and endpoint address for receiving confirmation messages from the sender system.",
    "Create a properties group configuration for SAP S/4HANA integration in the Business Partner Relationship Replication confirmation iFlow. Configure the S4 connection parameters including authentication, endpoint URL, and proxy settings for the SUITE bulk replication service.",
    "Configure the properties file for the Business Partner Relationship Replication Confirmation iFlow to SAP S/4HANA. Set up authentication, connection parameters, and endpoint configurations for the integration scenario where C4C confirms successful business partner relationship replications back to S/4HANA.",
    "Create a parameter definition for the private key alias used in the business partner relationship replication iFlow to SAP S/4HANA. This parameter should be configurable to support different certificate aliases across environments without being mandatory.",
    "Create a parameter definition for the business partner relationship replication iFlow to handle HTTP adapter timeout configuration. The parameter should be optional and accept integer values to specify timeout duration in milliseconds.",
    "Create a parameter definition for sender authentication configuration in the business partner relationship replication iFlow that allows runtime selection of authentication methods through a dropdown interface",
    "Create a parameter definition for the subject field in the business partner relationship replication iFlow to SAP S/4HANA. This parameter should be configured as an optional string parameter that can be used for email notifications or message routing purposes.",
    "Create a parameter definition for the S4HANA Location ID in the business partner relationship replication iFlow that allows optional specification of the target S4HANA system location during runtime",
    "Create a parameter definition for the S4HANA proxy configuration in the business partner relationship replication iFlow. The parameter should allow users to select the proxy type from a dropdown list and should be optional with no validation constraints.",
    "Create a parameter definition for the business partner relationship replication iFlow that captures the user role information for authorization and audit purposes during the data synchronization process between source systems and SAP S/4HANA.",
    "Create a parameter definition for the business partner relationship replication iFlow to handle OAuth authentication issuer information. The parameter should be optional and store the issuer URL as a string value for token validation purposes.",
    "Create a parameter definition for the S4HANA credential reference in the business partner relationship replication iFlow. This parameter should be configurable at deployment time to support different environments (DEV/QAS/PRD) without hardcoding credential names.",
    "Create a parameter definition for the S4HANA Business Partner Relationship confirmation endpoint address in the iFlow for confirming business partner relationship replication to SAP S/4HANA",
    "Create a parameter definition for S4HANA authentication configuration in the business partner relationship replication iFlow. The parameter should be a dropdown selection type that allows integration administrators to choose from predefined authentication methods without making it mandatory.",
    "Create a parameter definition for the business partner relationship replication iFlow to handle CSRF token management. The parameter should be a boolean type that allows developers to enable or disable CSRF protection based on the target SAP S/4HANA system configuration.",
    "Create a parameter definition for the sender address in the business partner relationship replication iFlow that will be used to identify the source system sending the data to SAP S/4HANA",
    "Create a parameter definitions file for the SAP Cloud Integration iFlow that handles business partner relationship replication from SAP SuccessFactors to SAP S/4HANA. The file should define all configurable parameters needed for authentication, connectivity, and message processing in the integration scenario.",
    "Create an OpenAPI specification document for the SAP CRM to S/4HANA business partner relationship confirmation integration endpoint. The specification should define the REST API contract for confirming business partner relationship replications from SAP CRM (C4C) to SAP S/4HANA system.",
    "Create a message mapping component for the Business Partner Relationship replication confirmation flow that handles the transformation between JSON source format and WSDL target format without predefined source and target structures to allow for dynamic mapping configuration",
    "Create a Groovy function for the Business Partner Relationship replication iFlow that concatenates a header value with a property value for generating composite identifiers in S/4HANA integration scenarios.",
    "Create a Groovy function named 'custFunc2' for the business partner relationship replication iFlow that retrieves a header value and a property value from the message processing context and adds both values to the output for downstream mapping",
    "Create a Groovy function in the SAP Cloud Integration iFlow for business partner relationship replication that sets the SAP message ID header for SOAP message tracking and correlation purposes.",
    "Create a Groovy mapping utility script for the SAP S/4HANA Business Partner Relationship Replication integration flow that provides reusable functions for message header manipulation and SOAP message ID handling during the confirmation process.",
    "Create a WSDL service definition for the SAP S/4HANA Business Partner Relationship confirmation service endpoint in the iFlow integration package",
    "Create a WSDL port type for handling Business Partner Relationship bulk replication confirmations from SAP S/4HANA back to the source system in our Master Data Governance integration flow",
    "Create a WSDL definition for the Business Partner Relationship Replication confirmation service that will be used in the SAP S/4HANA integration iFlow. The WSDL should define the web service interface for confirming successful replication of business partner relationship data from MDG to S/4HANA system."
  ],
  "input": [
    "We need to establish a new integration package for processing invoice requests from OPSupplier to S4HANA Cloud Edition buyer system. The project should be named 'com.sap.OPSupplier.OPsupplier2S4CEbuyer.InvoiceRequest' and must support Java development capabilities along with SAP Integration Flow tooling. The project structure should include Eclipse JDT Java builder configuration and the following project natures: Java nature for standard Java development, SAP IDE Integration Flow project support nature for CPI development capabilities, and SAP IDE BSN (Business Service Network) nature for cloud integration features. This will serve as the foundation for developing message mapping, routing, and transformation logic for invoice document processing between the supplier and buyer systems.",
    "We need to set up the build configuration for the invoice request integration package (com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest) in our SAP CPI tenant. The package contains a new integration flow (new_file.bpmn) located in src/main/resources/scenarioflows/integrationflow/ that processes invoice requests from OPSupplier to S/4HANA Cloud eBuyer. The build should include all META-INF directory contents and the root directory, exclude all source files from the binary output, set the source path to the BPMN file location, and configure the output directory to 'bin/'. This is part of our procure-to-pay automation project connecting our supplier onboarding platform with the S/4HANA Cloud procurement module.",
    "We need to implement a file integrity mechanism for our invoice request processing flow between operational suppliers and S/4HANA Cloud. The requirement is to create a generic file component within the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package that generates a cryptographic hash for incoming invoice request files. This hash should be stored as a binary file and used later in the process for data integrity validation. The hash should be generated using a secure algorithm and the resulting file should be compact and suitable for storage in the integration flow's temporary file system. This component will be part of the larger invoice request processing pipeline and needs to handle various file sizes efficiently while maintaining security standards for financial document processing.",
    "We need to configure an integration flow for the Operational Procurement supplier-to-buyer invoice request scenario. The integration should support sending supplier invoices from both SAP ERP and S/4HANA on-premise systems back to the S/4HANA Cloud purchasing system. This is part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package. The configuration group should include: 1) A description explaining the business purpose, 2) A marker indicating this is SAP-to-SAP integration for optimization purposes, 3) Source system specification covering both ERP and S/4HANA on-premise, and 4) Target system specification for S/4HANA Cloud. This will be used by the Cloud Integration runtime to apply appropriate SAP-to-SAP optimizations and routing logic.",
    "We need to configure the metadata properties for our new iFlow that handles supplier invoice requests being sent back to the purchasing system. This is part of the Operational Procurement integration between supplier and S/4HANA Cloud buyer systems. The integration should be marked as SAP-to-SAP and needs to support multiple source systems including SAP ERP and SAP S/4HANA on-premise, with SAP S/4HANA Cloud as the target system. The description should clearly indicate this is for sending supplier invoices back to the purchasing system. Please ensure the properties file follows standard SAP CPI conventions with appropriate timestamps and metadata structure.",
    "We need to implement secure digital signature validation for the OPSupplier to S/4HANA Cloud E-Buyer invoice request integration flow. Please add the publicsign.crt certificate file as a generic file resource in the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package. This certificate is issued by DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA1 for SAP SE (Walldorf, Baden-Württemberg, Germany) and is valid from February 17, 2022 to February 17, 2023. The certificate will be used by the Message Security step in the iFlow to verify the authenticity of incoming invoice documents from supplier systems before processing them in the S/4HANA Cloud system. Ensure the certificate is properly encoded and accessible to the integration flow runtime for signature validation operations.",
    "We need to establish a secure communication channel for our OPSupplier integration (package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest) to receive INVOIC02 EDI messages from external suppliers. The configuration requirements are: 1) Set up certificate authentication with issuer DN containing the certificate issuer identifier (placeholder: <issuer>), 2) Configure subject DN with the certificate subject identifier (placeholder: <sub>), 3) Enable basic authentication as a fallback mechanism for suppliers who cannot use certificates, 4) Define the endpoint address as '/EDI/InvoiceRequest/INVOIC02' to handle incoming invoice request messages. This is part of our supplier-to-buyer procurement integration where external suppliers send electronic invoices that need to be processed and forwarded to our S/4HANA Cloud buyer system.",
    "We need to establish connectivity between our SAP Operational Procurement system and SAP S/4HANA Cloud E-Buyer for invoice request processing. The integration requirements are: 1) Use SAP Cloud Connector (sapcc) as the proxy type for secure on-premise connectivity, 2) Disable message compression to ensure compatibility with the target S/4HANA Cloud system, 3) Enable HTTP chunking for large invoice documents to prevent timeout issues, 4) Clean up HTTP headers to remove any sensitive or unnecessary header information before sending to S4C, 5) Implement Basic authentication for the receiver endpoint, 6) Leave LocationID empty as we're using the default cloud connector location. This configuration is part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package and must ensure reliable invoice data transmission between systems while maintaining security standards.",
    "We need to establish connectivity between Ariba Operational Procurement (supplier side) and S/4HANA Cloud Edition (buyer side) for invoice request processing. The integration requires: 1) S/4HANA system connection URL pointing to the invoicerequest_in service endpoint using SOAP protocol, 2) Timeout configuration set to 60 seconds for reliable processing of invoice requests, 3) User credential reference for secure authentication to S/4HANA system. This is part of the procurement-to-pay process where suppliers submit invoice requests that need to be processed in the buyer's S/4HANA system. The properties group should be named 'Configuration group: S4 with 3 properties' and follow the standard naming convention for the opsupplier2s4cebuyer package structure.",
    "We need to establish error handling configuration for the invoice request integration between Operational Procurement suppliers and S/4HANA Cloud buyers. The HCP Integration Service Error endpoint should be configured with no authentication mechanism and SSL encryption disabled for internal network communication. This is part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package implementation. The configuration group must contain exactly 2 properties: one for authentication method set to 'none' and another for SSL settings set to 'off'. This setup is required for the development environment where security constraints are relaxed for testing purposes.",
    "We are implementing the OpSupplier to S/4HANA Cloud Buyer Invoice Request integration (package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest) for our procurement process. For the initial go-live phase, we need to configure the GENERAL properties group with conservative settings: disable extension requirements since we're using standard mapping, turn off email notifications to avoid spam during testing phase, and disable verbose logging to optimize performance. This is a standard B2B invoice processing scenario where OpSupplier sends invoice requests to our S/4HANA Cloud system. The integration should be lightweight and focused on core functionality without additional monitoring or notification overhead.",
    "We need to configure email notifications for our invoice request integration flow between OPSupplier and S/4HANA Cloud Buyer system. When errors occur during processing, the system should automatically send email alerts. Requirements: 1) Sender email should be 'mailfrom@mail.com' 2) Recipient email should be 'mailto@mail.com' 3) Email subject should be 'SAP CPI process error' 4) Email body should contain the actual message payload from the integration flow 5) Group these 4 email properties under a configuration group named 'Mail' for the opsupplier2s4cebuyer.invoicerequest package 6) All properties should follow the naming convention with '_CPI_Error' suffix to indicate they are used for CPI error handling scenarios",
    "We need to implement error handling configuration for the invoice request iFlow in the Operations Supplier to S/4HANA Cloud Buyer integration package (com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest). The error handling should use plain text content type for error messages, set a 3-second timeout for error processing, use UTF-8 encoding for international character support, and disable attachment preservation during error scenarios to optimize performance. This configuration is part of the CPI error handling strategy and must be consistent with our enterprise integration standards for supplier invoice processing workflows.",
    "We need to establish the configuration properties for our supplier-to-buyer invoice integration scenario. The integration flow must handle INVOIC02 IDoc transformation to SOA format using a custom mapping. Requirements: 1) Create a properties group named 'Configuration group: IDoc2SOA with 1 properties' within the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package, 2) Configure the IDoc2SOA transformation address property to point to the custom mapping location '/EDI/INVOIC_INVOIC02_CustomMap' for processing INVOIC documents, 3) This property will be used by the integration flow to locate the appropriate message mapping for converting supplier invoice IDocs to the required SOA format for S/4HANA Cloud procurement processes.",
    "We need to implement an invoice request integration flow with the following requirements:\n\n1. **Sender Configuration (OP Supplier)**:\n   - Enable basic authentication for the sender system\n   - Configure issuer DN for certificate-based security: cn=<issuer>\n\n2. **Receiver Configuration (S4CE Buyer)**:\n   - Target S/4HANA system endpoint: http://<S4_Host>:<S4_Port>/sap/bc/srt/scs_ext/sap/invoicerequest_in\n   - Use SAP Cloud Connector proxy type (sapcc)\n   - Enable HTTP chunking for large payloads\n   - Disable message compression\n   - Clean up HTTP headers before sending\n   - Set SOAP timeout to 6000ms\n\n3. **Error Handling & Notifications**:\n   - Configure email notifications for CPI process errors\n   - Sender email: mailfrom@mail.com\n   - Subject: 'SAP CPI process error'\n   - Message body should contain the error details from ${in.body}\n   - Set email timeout to 3000ms\n   - Use UTF-8 encoding and text/plain content type\n   - Make email notifications optional (configurable on/off)\n\n4. **Integration Service Settings**:\n   - Disable SSL for HCP integration service error handling\n   - Set authentication to 'none' for error service\n   - Make extension functionality optional\n\n5. **General Settings**:\n   - Package structure: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest\n   - Organize properties into 10 logical groups for maintainability\n   - Total of 29 configuration properties\n   - Include timestamp for configuration tracking",
    "We need to add a configurable parameter for the 'From' email address that will be used when sending error notification emails from Cloud Platform Integration (CPI) during invoice request processing failures. This parameter should be named 'Mail_From_CPI_Error', have a string data type, and be optional (not required) so that error email functionality can be disabled if needed. The parameter will be used in the exception handling subprocess to notify business users when invoice request messages from OPSupplier to S/4HANA Cloud fail during processing. This is part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package for the procurement integration scenario.",
    "We need to add a configurable parameter to the OPSupplier to S/4HANA Cloud invoice request integration flow (package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest) that enables or disables detailed logging for troubleshooting purposes. The parameter should be named 'EnableLogging', must be of string type to accept values like 'true'/'false' or 'yes'/'no', and should be optional (not required) so that the integration can run with default logging settings if not explicitly configured. This will help operations teams toggle verbose logging on-demand during production issues without code changes.",
    "We need to add a configuration parameter for the OPSupplier invoice request iFlow that allows administrators to enable or disable basic authentication on the sender channel. The parameter should be named 'OPSupplier_Sender_enableBasicAuthentication_13' to align with our naming convention for sender adapter #13. This should be an optional string parameter that can be configured at deployment time to control whether basic authentication is required for incoming invoice requests from OPSupplier systems. The parameter will be used in conditional logic within the integration flow to determine authentication requirements based on the deployment environment (dev/test/prod).",
    "We need to configure a parameter in our OPSupplier to S/4HANA Cloud Buyer invoice request iFlow that will store the user credential name for authenticating with the target S/4HANA system. This parameter should be named 'S4_user_credential' and must be of string type. The parameter is optional (not required) as we may use different authentication methods in some scenarios like certificate-based authentication. No specific constraints or validation rules are needed for this parameter at this time. This credential parameter will be used by the integration flow to retrieve the actual username/password pair from the secure store when making API calls to S/4HANA Cloud for posting invoice documents.",
    "We need to add a boolean parameter for the S4C E-Buyer receiver adapter that allows integration administrators to enable or disable HTTP chunking when sending invoice request messages to the SAP S/4HANA Cloud for E-Buyer system. The parameter should be named 'S4CEBuyer_Receiver_allowChunking_5' to maintain consistency with our naming convention (the '5' indicates this is for receiver adapter instance 5). This parameter should be optional (not required) as chunking will be handled automatically by default, but we need the flexibility to disable it for specific network configurations or when dealing with proxy servers that don't support chunked transfer encoding. The parameter will be used in the HTTP receiver adapter configuration to set the 'Allow Chunking' property dynamically based on deployment requirements.",
    "We need to configure a parameter in our S/4HANA Cloud integration for the OPSupplier to S4CEBuyer invoice request flow. This parameter should handle the custom mapping logic for address field 9 in the IDoc to SOA transformation. The parameter name should be 'IDoc2SOA_InvoiceCustomMapping_iFlow_address_9', it should accept string values, and it should be optional since not all invoice scenarios will require address field 9 mapping. This will be used in our invoice request processing where suppliers send invoice data that needs to be transformed from IDoc format to SOA format before being consumed by the S/4HANA Cloud buyer system.",
    "We need to configure the SAP S4/HANA Cloud E-Buyer receiver endpoint authentication for our Operational Procurement to S4C E-Buyer invoice request integration. The parameter should be named 'S4CEBuyer_Receiver_authentication_6' to maintain consistency with our existing authentication parameter naming convention. This parameter will store the authentication method or credentials for the sixth receiver configuration variant. Make it a string type parameter that is not mandatory, as some deployment scenarios may use default authentication settings or alternative security configurations. The parameter should be part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package structure to align with our invoice processing integration flow.",
    "We need to configure a parameter for the invoice request iFlow in the operational supplier to S/4HANA Cloud buyer integration package. The parameter should be named 'S4CEBuyer_Receiver_LocationID' to identify the receiving location in the S/4HANA Cloud buyer system. This parameter will be used for invoice routing and should be of string type. Since not all invoice scenarios require a specific location ID (some may use default routing), this parameter should be optional (not required). The parameter doesn't need any specific constraints or validation rules at this time, as location validation will be handled by the S/4HANA Cloud system itself.",
    "We need to implement error handling for the invoice request integration flow in the OPSupplier to S/4HANA Cloud Buyer package. When processing failures occur, the system should send email notifications to designated users. Create an optional string parameter called 'MailUser_HCI_Error' that will store the email address of the user who should receive error notifications from the HCI (HANA Cloud Integration) platform. This parameter should be configurable at deployment time and not mandatory since some environments may use different error handling mechanisms.",
    "We need to implement error handling notifications for the invoice request integration flow. Create an optional string parameter that will store the email body content when CPI processing errors occur. This parameter should be named 'Mail_Body_CPI_Error' and must be configurable at runtime to allow different error message templates. The parameter will be used by the exception handling subprocess to send formatted error notifications to business users when invoice processing fails. Make it optional since not all error scenarios may require email notifications, and it should accept string values to accommodate various message formats including plain text and basic HTML content.",
    "We need to configure an optional SMTP server parameter for our Operational Supplier to S/4HANA Cloud Buyer invoice request integration package (com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest). This parameter will store the SMTP server address used by Cloud Platform Integration for sending error notifications when invoice processing fails. Requirements: Parameter name should be 'SMPT_Server_CPI_Error', data type must be string, and it should be optional since not all environments require email notifications. No specific constraints or validation rules are needed at this time.",
    "We need to add a configurable parameter for our multi-tenant invoice request scenario where we integrate with multiple S/4HANA Cloud for Enterprise Buyers systems. The parameter should be named 'S4CEBuyer_Receiver_proxyType_3' to handle the proxy type configuration for the third buyer system receiver endpoint. Requirements: Parameter type should be string to accommodate various proxy type values (Internet, OnPremise, etc.), make it optional since not all tenants will have a third buyer system configured, no specific constraints needed as proxy type validation will be handled at runtime by the adapter, no description required as this is an internal technical parameter for the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package.",
    "We need to define a parameter in our OPSupplier to S/4HANA Cloud eBuyer invoice request integration package that can capture authentication error messages from the HCP Integration Service. This parameter will be used in our error handling logic to store specific authentication failure details. Requirements: Parameter name should be 'HCP_Integration_Service_Error_auth_5', data type must be string to accommodate variable error message lengths, parameter should be optional (not required) since it only gets populated during error scenarios, no specific constraints or validation rules needed as this is for error message storage, and no additional metadata required for this internal error handling parameter.",
    "We need to implement error handling for SSL connection failures in our Operations Supplier to S/4 Cloud E-Buyer invoice request integration. Create a parameter definition that will store SSL error messages from the HCP Integration Service. The parameter should be named 'HCP_Integration_Service_Error_ssl_6', be of string type, and not be mandatory since it will only contain values when SSL errors occur. This parameter will be used in our error handling logic to provide detailed SSL error information for troubleshooting connectivity issues between the supplier and buyer systems during invoice processing.",
    "We need to add a configurable parameter for the SAP S/4HANA Cloud E-Buyer to Supplier invoice request integration scenario. The parameter should be named 'S4CEBuyer_Receiver_CompressMessage_7' and control whether outbound messages are compressed before transmission to the receiver system. Requirements: 1) Parameter type must be boolean to enable/disable compression, 2) Should be optional (not required) to maintain backward compatibility with existing deployments, 3) No specific validation constraints needed as it's a simple true/false flag, 4) This is for the receiver channel configuration in the opsupplier to S4C e-buyer invoice request flow, 5) Parameter will be used by operations team to optimize performance in different network environments",
    "We need to add a configurable parameter to our SAP Cloud Integration flow for the OPSupplier to S/4HANA Cloud Buyer invoice request process. The parameter should be named 'MailNotification' and will store email addresses or notification settings as a string value. This parameter must be optional (not required) since not all invoice processing scenarios require email notifications. The parameter will be used later in the flow to conditionally send email alerts to specified recipients when invoice requests are processed or encounter errors. Please implement this as a standard string parameter without any specific constraints or validation rules.",
    "We need to implement error handling for the OPSupplier to S/4HANA Cloud buyer invoice request integration flow (package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest). The business requirement is to send email notifications when CPI processing errors occur during invoice transmission. The parameter should be named 'Mail_To_CPI_Error' and must be configurable by administrators without requiring iFlow redeployment. This parameter should be optional (not mandatory) to allow flexibility in error handling approaches. The parameter will store a single email address as a string value that will be used by the exception handling subprocess to send error notifications to the appropriate support team or business users.",
    "We need to implement a flexible parameter for the SAP S4 HANA Cloud Edition host URL in our Operational Procurement Supplier to S4CE Buyer invoice request integration scenario. The parameter should be named 'S4_host_URL', defined as a string type, and should be optional (not required) to allow for default fallback configurations. This parameter will be used to dynamically construct the target endpoint URLs for invoice posting operations across different landscape environments. The parameter should not have any specific constraints or validation rules at this stage, as the URL format validation will be handled in the message mapping logic.",
    "We need to enhance our OPSupplier to S/4HANA Cloud buyer invoice request integration flow with better error tracking capabilities. Please create a parameter definition named 'CPI_Error_content_type_8' that will store the HTTP content type header value when processing errors in the 8th error handling branch of our integration scenario. The parameter should be of string type, optional (not required), and will be used by our error logging mechanism to capture technical details about failed invoice request messages. This parameter is part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package and should follow our standard error parameter naming convention.",
    "We need to create a parameter definition for the OPSupplier to S/4HANA Cloud Buyer invoice request integration package (com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest). The parameter should capture the sender's certificate subject DN for authentication purposes. Requirements: Parameter name should be 'OPSupplier_Sender_subjectDN', data type should be string, and it should be optional (not required) since not all scenarios may use certificate-based authentication. No specific constraints or validation rules are needed at this time. This parameter will be used in the security configuration to validate incoming requests from the OPSupplier system.",
    "We need to add a configuration parameter for the OPSupplier to S/4HANA Cloud E-Business buyer invoice request integration flow. The parameter should be named 'CPI_Error_keep_attachments_10' and must be a boolean type that controls whether attachments are retained when processing errors occur during invoice transmission. This parameter should be optional (not required) as we want to maintain backward compatibility with existing configurations. The parameter will be used by the error handling logic to determine if invoice attachments should be preserved in the message processing log when errors occur, helping with troubleshooting and reprocessing scenarios.",
    "We need to add a configurable timeout parameter for the SOAP adapter connecting to S/4HANA Cloud in our OPSupplier invoice request integration. The parameter should be named 'S4_SOAP_Timeout' to clearly identify its purpose. It should be defined as a string type to allow flexible timeout value formats (e.g., '30000', '30s', etc.). The parameter should be optional since we have a default timeout configured in the SOAP adapter itself. No specific validation constraints are needed as the SOAP adapter will handle invalid timeout values appropriately. This will allow operations teams to adjust timeout values based on network conditions and S/4HANA performance without modifying the integration flow design.",
    "We need to define an optional string parameter called 'OPSupplier_Sender_address' for our invoice request integration between OPSupplier and S/4HANA Cloud Buyer systems. This parameter should store the supplier's sender address information that will be used during invoice processing. The parameter should be of string type, not mandatory (since some suppliers may not provide this information), and should be part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package. No specific constraints or validation rules are required at this time, and no additional metadata needs to be stored.",
    "We need to implement a security parameter in our OPSupplier to S4C buyer invoice request iFlow that will store the issuer DN (Distinguished Name) of the sender's certificate for authentication purposes. This parameter should be named 'OPSupplier_Sender_issuerDN', be of string type, and should be optional since not all scenarios require certificate-based authentication. The parameter will be used during the message processing to validate the sender's identity against the configured certificate authority. This is part of our B2B integration security framework where suppliers send invoice requests through secure channels and we need to verify their certificate chain.",
    "We need to add a parameter called 'ExtensionRequired' to the opsupplier2s4cebuyer invoice request integration package. This parameter should be a string type that indicates whether invoice extensions are needed during processing. The parameter should be optional (not required) since not all invoice requests will need extensions. Leave the constraint, description, and additional metadata fields empty for now as they will be populated later during the configuration phase. This parameter will be used to control conditional logic in the message mapping when determining if extended invoice validation steps are necessary.",
    "We need to add an optional parameter to capture content encoding details when CPI encounters errors during invoice processing. This parameter should be named 'CPI_Error_content_encoding_9' and must be of string type. The parameter is not mandatory as it's only populated during specific error conditions. This is part of the OPSupplier to S/4HANA Cloud buyer invoice request integration flow and will be used for troubleshooting encoding-related issues in message processing. No specific validation constraints are required, and the parameter should be flexible enough to accommodate various encoding formats like UTF-8, ISO-8859-1, etc.",
    "We need to add a configurable timeout parameter for the CPI error handling mechanism in our OPSupplier to S/4HANA Cloud Buyer invoice request integration. The parameter should be named 'CPI_Error_timeout_11' to align with our error handling framework naming convention. Requirements: 1) Parameter type must be integer to store timeout values in seconds, 2) Should be optional (not required) so the integration can use default values when not configured, 3) No specific constraints needed as we'll handle validation in the flow logic, 4) This will be used in scenario 11 of our error handling matrix for invoice processing timeouts, 5) Parameter should be available for configuration in the Cloud Integration tenant without requiring code changes.",
    "We need to implement error handling notifications for the OPSupplier invoice request integration with S/4HANA Cloud. When the integration flow encounters processing errors, it should send email notifications to the support team. To make the error emails easily identifiable, we need a configurable parameter that allows administrators to set a custom subject line for these error notification emails. The parameter should be optional (not required) since we have a default subject line in the code, should accept string values, and should be named 'Mail_Subject_CPI_Error' to align with our existing naming conventions for email-related parameters. This parameter will be used in the exception handling branch of the integration flow to populate the email subject when sending error notifications.",
    "We need to add a configuration parameter for the SAP S/4HANA Cloud eBuyer receiver adapter in our supplier-to-buyer invoice request integration. The parameter should be named 'S4CEBuyer_Receiver_cleanupHeaders_4' and must be of boolean type to allow administrators to enable or disable automatic cleanup of HTTP headers before sending invoice requests to the S/4HANA Cloud system. This parameter should be optional (not required) so that existing configurations continue to work without modification. The parameter will be used by the message processing logic to determine whether to remove unnecessary or sensitive headers from the outbound HTTP request to improve security and compliance with S/4HANA Cloud requirements.",
    "We need to implement an invoice request integration flow from OP Supplier to S/4HANA Cloud eBuyer system. The integration requires comprehensive parameter configuration including: email notification settings for CPI errors with configurable sender address, debugging capabilities with EnableLogging toggle, basic authentication configuration for OP Supplier sender system, S/4HANA user credentials management, timeout settings for various operations, retry mechanisms for failed transmissions, data mapping configurations, business partner validation parameters, invoice validation rules, tax calculation settings, currency conversion parameters, document numbering schemes, approval workflow configurations, archiving settings, monitoring thresholds, connection pool settings for performance optimization, SSL certificate configurations, proxy settings for network routing, batch processing parameters for bulk invoice handling, error queue management settings, audit trail configurations, and environment-specific endpoint URLs. All parameters should be externalized to support different deployment environments (DEV, QAS, PRD) without code changes. The parameter file should follow SAP CPI standards and be part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package structure.",
    "We need to implement a message mapping component for our procurement integration scenario where external suppliers send invoice requests in EDI INVOIC.INVOIC02 format that must be transformed to SAP S4/HANA Cloud's INVOICEREQUEST_IN format. The mapping should be part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package. Source structure: EDI INVOIC.INVOIC02 from INVOIC.INVOIC02.wsdl located in src/main/resources/wsdl with namespace http://sap.com/xi/EDI. Target structure: InvoiceRequest from INVOICEREQUEST_IN.wsdl in the same directory with namespace http://sap.com/xi/EDI. The mapping should handle standard invoice fields including vendor information, line items, amounts, tax details, and reference documents. Ensure proper error handling and validation for mandatory fields during the transformation process.",
    "We need a reusable Groovy function in the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package that:\n\n1. Accepts a Message object as input parameter\n2. Reads the 'EnableLogging' property from the message properties\n3. Sets the SAP_IsIgnoreProperties header to true to prevent property propagation issues\n4. When EnableLogging is set to 'TRUE' (case-insensitive), captures the message payload and logs it as an attachment named 'Payload' with content type 'text/plain' using the message log factory\n5. Returns the processed message object\n\nThis function will be used in our invoice processing flow to provide configurable debug logging capabilities without impacting performance when logging is disabled. The logging should help troubleshoot payload transformation issues during invoice data exchange between the supplier and buyer systems.",
    "Requirements:\n- Package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest\n- Script name: Log_payload.gsh\n- Function: processData that accepts and returns a Message object\n- Check for 'EnableLogging' property from message properties\n- Set SAP_IsIgnoreProperties header to true to prevent property propagation\n- Only log payload when EnableLogging property is set to 'TRUE' (case-insensitive)\n- When logging is enabled, extract message body as string and add it as a plain text attachment named 'Payload' to the message log\n- Import required modules: Message utility and HashMap\n- Ensure the script handles the conditional logging without impacting message flow performance when logging is disabled",
    "Requirements:\n- Function must accept a Message object as parameter and return a Message object\n- Read the 'EnableLogging' property from message properties to determine if logging is enabled\n- Set the SAP_IsIgnoreProperties header to true to prevent property propagation issues\n- When logging is enabled (property value equals 'TRUE' case-insensitive), capture the message body as string\n- Log the S4HANA response body as a message attachment named 'S4Response' in plain text format\n- Use the standard SAP CPI messageLogFactory for creating log entries\n- Handle the logging check with proper string comparison using toUpperCase() for case insensitivity\n- Package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest\n- This is part of the invoice request flow from OP Supplier to S4C E-Buyer system integration",
    "We need a Groovy script named 'Log_S4response.gsh' in the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package that:\n\n1. Reads the 'EnableLogging' property from the message properties to determine if logging should be performed\n2. Sets the SAP_IsIgnoreProperties header to true to prevent property propagation issues\n3. When logging is enabled (EnableLogging = 'TRUE'), captures the complete S4HANA response body as a string\n4. Attaches the response payload to the message log with attachment name 'S4Response' in plain text format for troubleshooting\n5. Only performs the logging operation when explicitly enabled to avoid performance impact in production\n6. Returns the message unchanged to continue normal processing flow\n\nThis script will be used after receiving responses from S4HANA Cloud in the invoice request scenario to help with debugging integration issues and maintaining audit trails when required.",
    "We need to process invoice line item descriptions and comments from our OP Supplier system before sending them to S/4HANA Cloud. The supplier system allows unlimited text length, but S/4HANA has field restrictions (typically 40-50 characters for item descriptions). Requirements: 1) Accept an array of text lines from the invoice payload, 2) Accept a configurable chunk size parameter to define maximum field length, 3) Split each text line into smaller chunks that fit S/4HANA field constraints, 4) Preserve all text content by creating multiple output values, 5) Use the Output parameter to add each split chunk as a separate value for downstream mapping to multiple S/4HANA text fields or line items. The function should handle edge cases where the last chunk is shorter than the specified size and ensure no text is lost during the splitting process.",
    "We need to implement invoice validation logic in our OpSupplier to S/4HANA Cloud eBuyer integration flow. The function should:\n\n1. Accept an array of incoming invoice line item purchase order numbers (inputValues)\n2. Accept an array containing the valid purchase order reference to check against (checkString)\n3. Use the CPI Output object to return a boolean result\n4. Return true if any of the input invoice line items matches the first element of the checkString array\n5. Return false if no matches are found\n6. This validation is part of the three-way matching process where we verify that invoice line items reference valid purchase orders before processing payment requests\n7. The function will be called from a message mapping step in the integration flow to filter out invalid invoice line items\n8. Package should be com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest to align with our integration package structure\n9. Include necessary imports for String array handling and CPI Output object manipulation",
    "We need to implement a lookup function in our OPSupplier to S/4HANA Central Procurement integration for invoice request processing. The function should:\n\n- Accept an array of input values (supplier codes from OPSupplier system)\n- Accept a check string array containing the lookup key (incoming supplier code to match)\n- Accept an output value array containing corresponding S/4HANA vendor codes\n- Use the Output parameter to add the matched vendor code to the message payload\n- Perform exact string matching between input values and the first element of checkString array\n- Return immediately after finding the first match to optimize performance\n- Handle the scenario where supplier codes need to be translated to internal vendor master data codes before posting invoices to S/4HANA\n\nThis function will be used in the message mapping step of our invoice request iFlow to ensure proper vendor code translation during the procurement process. The function should be part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package and follow SAP CPI best practices for array processing.",
    "We need a reusable Groovy function named 'stringContains' in package com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest that processes invoice request data. The function should take an array of invoice line item text descriptions (textLine) and check each one against a specific pattern (checkPattern[0]) to determine if prohibited or restricted terms are present. For each text line, output a boolean result indicating whether the pattern was found. This validation is required for compliance checking before invoice data is sent to S/4HANA Cloud. The function parameters should be: String[] textLine (invoice line descriptions), String[] checkPattern (validation patterns), and Output output (for collecting boolean results). The function needs to iterate through all text lines and use the contains() method to check against the first pattern in the checkPattern array.",
    "In the opsupplier2s4cebuyer invoice request integration scenario, we need to process related objects arrays that contain multiple relationship types (CUAN_INTER, CUAN_SALES, etc.) with corresponding object keys. The business requirement is to identify and extract only the Customer Interaction object key from these arrays for downstream S/4HANA processing. The function should: 1) Accept two parallel arrays - relobj_type containing relationship object types and relobj_objkey containing corresponding object keys, 2) Iterate through the relationship types to find 'CUAN_INTER' entries, 3) Return the corresponding object key for the first CUAN_INTER match found, 4) Return a single space character if no CUAN_INTER relationship is found, 5) Use the Output parameter to set the result value for further iFlow processing. This filtering is critical for proper invoice-to-customer interaction linkage in the buyer system.",
    "We need a reusable Groovy function in our SAP CPI integration flow (package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest) that can dynamically fetch property values during message processing. The function should:\n\n1. Accept a property name as string parameter and the mapping context\n2. Attempt to retrieve the property value from the integration flow context\n3. If the property exists and has a value, return that value\n4. If the property is null or doesn't exist, return the original property name as fallback\n5. This will be used for dynamic field mapping where some properties might not be set depending on the invoice type\n6. Function should be named 'get_property' and handle the MappingContext properly\n7. Ensure proper null checking to avoid runtime exceptions during invoice processing\n\nThis function will be called from message mapping transformations where we need to conditionally use property values or default identifiers when processing supplier invoices being sent to S/4HANA Cloud.",
    "We need a utility function for our invoice request iFlow that can safely extract header values from the message context during message mapping. The function should:\n\n1. Accept a header name as String parameter\n2. Accept MappingContext as parameter to access message headers\n3. Return the actual header value if it exists in the message context\n4. Return the header name itself as fallback if the header is null or doesn't exist\n5. Be usable in message mapping for extracting routing information, correlation IDs, and business partner details\n6. Handle the common scenario where we reference headers that might not always be present in incoming invoice messages from the supplier system\n\nThis will be used in our procurement integration where we need to map supplier invoice headers to S/4HANA Cloud fields, and sometimes need to use default values when headers are missing.",
    "Requirements:\n- Function name: generateUUID\n- Package: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest\n- Input parameter: String input (for potential future extensibility)\n- Return: String containing a UUID without hyphens in uppercase format\n- Purpose: Generate unique tracking identifiers for invoice requests flowing from OPSupplier to S/4HANA Cloud\n- The UUID will be used in message headers and audit logs for end-to-end traceability\n- Must be thread-safe for concurrent invoice processing\n- Should use standard Java UUID generation for uniqueness guarantee\n- Format requirement: Remove all hyphens and convert to uppercase for system compatibility",
    "We need to implement a utility function 'getOffset' in the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package that takes a string input and an integer offset parameter. The function should handle invoice reference numbers and document IDs where we need to extract meaningful data starting from a specific character position. Requirements: 1) If input string is empty, return the original empty string unchanged, 2) For non-empty strings, return substring starting from the offset position to the end of the string, 3) This will be used to parse supplier invoice numbers where the first N characters are system prefixes that need to be removed before mapping to S/4HANA fields, 4) Function should handle cases where invoice documents have variable-length prefixes that need to be stripped during the integration mapping process.",
    "In the OPSupplier to S/4CE Buyer invoice request integration scenario, we need to process incoming invoice data that contains multiple text lines with delimited values (such as line items, cost centers, or GL accounts separated by pipes, commas, or semicolons). The function should accept an array of text lines and a delimiter parameter, then split each line using the specified delimiter and add all resulting values to the output for further processing by subsequent iFlow steps. This is required for the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package where invoice line items are transmitted as concatenated strings that need to be parsed into individual components before mapping to S/4HANA IDoc or REST API format. The delimiter should be configurable to handle different supplier data formats.",
    "We need to implement a timezone conversion utility for our procurement integration between OpSupplier and S/4HANA Cloud. The function requirements are:\n\n1. Function name: DateTime2NewTimeZone\n2. Parameters:\n   - sdatetime: Source datetime string in format 'yyyyMMddHHmmss'\n   - stzone: Source timezone (supports both 'UTC+/-xx' format and standard timezone IDs like 'EST', 'PST')\n   - ttzone: Target timezone (standard timezone ID)\n\n3. Business logic:\n   - Convert UTC+/-xx format to GMT+/-xx for Java compatibility\n   - Parse the input datetime using the source timezone\n   - Convert to target timezone maintaining the same moment in time\n   - Return formatted datetime string in 'yyyyMMddHHmmss' format\n\n4. Use case: Invoice timestamps from suppliers come in various timezones and need to be converted to the buyer's local timezone for proper processing in S/4HANA\n\n5. Required imports: SimpleDateFormat, Date, Calendar, TimeZone classes\n\nThis function will be used in the message mapping to ensure all invoice timestamps are consistently represented in the target system's timezone.",
    "We need to implement custom text processing logic in our invoice request integration flow (com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest) to handle the following requirements:\n\n1. **Text Splitting Function**: Create a function 'splitText' that takes an array of text lines and splits each line into smaller chunks based on a configurable chunk size. This is needed because SAP S/4HANA Cloud has field length limitations (typically 40-80 characters) for certain invoice line item description fields, but supplier systems may send longer text descriptions.\n\n2. **Array Validation Function**: Create a function 'existsInArray' that validates input values against predefined lookup arrays. This is required to check if supplier-provided values (like tax codes, currency codes, or material groups) exist in the allowed values list from the buyer system.\n\n3. **Technical Requirements**:\n   - Use SAP CPI Output object to return processed values\n   - Handle variable-length input arrays\n   - Ensure the last chunk captures remaining characters even if shorter than chunk size\n   - Process multiple text lines in a single call\n   - Support dynamic chunk sizing through parameter array\n\n4. **Integration Context**: This script will be used in the message mapping step where we transform supplier invoice request XML to S/4HANA Cloud invoice creation format, ensuring field length compliance and data validation.",
    "We need to implement UserDefinedFunctions.gsh with the following requirements:\n\n1. **Text Processing**: Function to split long invoice line item descriptions into chunks of specified character length to comply with S4C field limitations\n\n2. **Array Utilities**: \n   - Check if a value exists in an array (for validation of tax codes, currency codes)\n   - Retrieve specific values from arrays by index\n\n3. **String Operations**:\n   - Check if a string contains specific substrings (for identifying invoice types)\n   - Split strings using custom delimiters (for parsing concatenated vendor data)\n\n4. **Data Validation**: Function to check relationship object types in invoice hierarchies\n\n5. **Message Context Access**:\n   - Retrieve message properties (trading partner IDs, routing keys)\n   - Access message headers (correlation IDs, timestamps)\n\n6. **Utility Functions**:\n   - Generate UUIDs for unique invoice reference numbers\n   - Calculate time zone offsets for invoice date/time conversions\n   - Convert DateTime values between different time zones (OpSupplier UTC to S4C local time)\n\nThe script should import necessary Java utilities, SAP mapping APIs, and message processing libraries. All functions must handle null values gracefully and support the invoice request transformation from OpSupplier format to S4C eBuyer expected structure.",
    "We need to establish the foundational WSDL structure for our supplier-to-buyer invoice integration scenario in the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package. The WSDL must define the INVOIC02 IDoc structure with proper namespacing (urn:sap-com:document:sap:idoc:messages) and include the standard IDoc control record EDI_DC40 for external system interface handling. This is part of our B2B integration where operational suppliers will send invoice requests to S/4HANA Cloud. The WSDL should follow SAP's standard IDoc message format with proper XML schema definitions, but we don't need service bindings or port types defined yet as this will be used as a message definition reference in our integration flows. Ensure the root element INVOIC02 is properly documented as 'Invoice/Billing document' and the EDI_DC40 segment includes documentation referencing it as the IDoc control record for external system interface.",
    "We need to establish a web service endpoint for the invoice request integration between our operational supplier system and S/4HANA Cloud buyer tenant. The service should be named 'service' and must support both SOAP 1.1 and SOAP 1.2 protocols for maximum compatibility with different client systems. The endpoint should connect to the SAP SRT framework at path '/sap/bc/srt/scs_ext/sap/invoicerequest_in' for processing incoming invoice requests. This is part of the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package for B2B invoice processing workflow. Configure two separate port bindings - one for standard SOAP (binding) and another for SOAP 1.2 (binding_soap12) to ensure backward compatibility with legacy systems while supporting modern SOAP implementations.",
    "We need to implement the InvoiceRequest_In port type for the com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest package as part of our supplier integration project. Requirements: 1) Port type name must be 'InvoiceRequest_In' with single operation for invoice submission 2) Include SAP documentation reference to MM-IV-GF-ES application component (Materials Management - Invoice Verification - General Functions - Enterprise Services) 3) Apply WS-Policy references for both interface level (#IF__InvoiceRequest_In) and operation level (#OP__InvoiceRequest_In) security policies 4) Define input message as 'InvoiceRequest' type from target namespace 5) Support one-way message pattern for asynchronous invoice processing 6) Ensure compliance with SAP Cloud Integration standards for supplier invoice automation",
    "We need to establish a web service interface for our OPSupplier to S4C eBuyer invoice request integration scenario. Requirements: 1) Target namespace should be 'http://sap.com/xi/EDI/Buyer' to align with our EDI buyer domain, 2) Include standard WSDL namespace declarations for SOAP 1.1/1.2, HTTP, MIME, and WS-Policy support, 3) Reference SAP XI EDI namespaces (http://sap.com/xi/EDI, http://sap.com/xi/SAPGlobal/Global, http://sap.com/xi/EDI/Global2) for message type definitions, 4) Package location: com.sap.opsupplier.opsupplier2s4cebuyer.invoicerequest, 5) The service should support invoice request processing with 1 service and 1 port type definition, 6) Include proper SIDL documentation structure for SAP integration compliance, 7) Ensure UTF-8 encoding for international character support in invoice data",
    "We need to implement a Business Partner Relationship replication integration from SAP S/4HANA to our target system. The integration should be part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' package. Requirements: 1) Set transaction timeout to 30 seconds to handle potential network latency, 2) Use component version 1.2 for compatibility with our current SAP CPI tenant, 3) Configure transactional handling as 'Not Required' since we're dealing with confirmation messages that don't need rollback capabilities, 4) The process should be the main integration process that will orchestrate the entire flow from receiving S/4HANA business partner relationship data to confirming successful replication to downstream systems, 5) Ensure the process follows BPMN 2.0 standards and uses the latest IntegrationProcess variant (1.2.1) for optimal performance.",
    "We need to implement message tracking capabilities in our business partner relationship replication integration flow. The requirement is to add a unique monitoring identifier to each message that gets processed through the iFlow 'confirm_business_partner_relationship_replication_from_sap_s4hana'. This monitoring ID should be derived from the SAP Message ID and set as a header property to enable end-to-end message tracking and monitoring in our SAP Integration Suite. The content enricher should be named 'Set Monitoring ID' and should use expression-based body type configuration. This will allow our operations team to trace messages across the integration landscape and provide better support for business partner data synchronization issues between S/4HANA and our target systems.",
    "We need to implement a Business Partner Relationship confirmation process as part of our S/4HANA to cloud replication scenario. The requirement is to:\n\n1. Create a content enricher activity named 'S4_CNS_BusinessPartnerRelationshipSUITEBulkConfirmation'\n2. This activity should be part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' integration package\n3. Use message mapping transformation type to convert incoming Business Partner Relationship data\n4. The mapping file should be located at 'src/main/resources/mapping/S4_CSN_BusinessPartnerRelationshipConfirmation.mmap'\n5. The mapping name should be 'S4_CSN_BusinessPartnerRelationshipConfirmation'\n6. This is for bulk confirmation processing of Business Partner Relationships replicated from S/4HANA\n7. The activity should handle SUITE bulk confirmation message format\n8. Ensure proper BPMN2 call activity structure with appropriate extension elements for SAP CPI",
    "We need to implement a SOAP sender adapter for the 'confirm_business_partner_relationship_replication_from_sap_s4hana' integration package. The adapter should be configured as follows:\n\n- Component Type: SOAP sender adapter\n- Adapter Name: SOAP\n- Address: Use externalized parameter {{Sender_Address}} to support different endpoint URLs across DEV/QAS/PROD landscapes\n- Maximum Body Size: Set to 40 MB to handle large business partner relationship data payloads\n- Message Flow: Connect from Participant_1 (sender) to StartEvent_2 (integration flow start)\n- Message Flow ID: MessageFlow_6\n- Package Context: This is part of the business partner master data replication scenario from S/4HANA to target systems\n- Security: Standard SOAP security configurations will be applied\n- Error Handling: Default SOAP fault handling should be enabled\n\nThe adapter will receive BusinessPartnerRelationshipConfirmation messages from the S/4HANA system and trigger the integration flow for further processing and routing to downstream systems.",
    "We need to implement the final step of our Business Partner Relationship replication scenario where confirmed relationship data needs to be sent from S/4HANA to our external CRM system via HTTP POST. The integration flow should: 1) Use HTTP adapter for outbound communication, 2) Implement private key authentication using the configured alias from our security artifacts, 3) Connect from the EndEvent_2 to the receiver participant (Participant_2), 4) Be part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' package, 5) Support dynamic HTTP method configuration if needed, 6) Handle the message flow with proper BPMN2 structure. The target system expects JSON payload with confirmed business partner relationship data and will return acknowledgment responses that need to be processed.",
    "We need to establish a sender endpoint for our S/4HANA system (S4) in the business partner relationship confirmation replication flow. This endpoint will be the entry point for business partner relationship data coming from our on-premise S/4HANA system. Requirements: 1) Name the endpoint 'S4' to clearly identify the source system, 2) Set up as EndpointSender type since S/4HANA will be pushing data to Cloud Integration, 3) Disable basic authentication as we're implementing certificate-based authentication for enhanced security in our production environment, 4) This is part of the confirm_business_partner_relationship_replication_from_sap_s4hana package for master data management integration with our downstream systems.",
    "We need to establish an endpoint receiver participant named 'CNS' as part of our business partner relationship replication integration package. This endpoint will serve as the target system for receiving confirmed business partner relationship data replicated from SAP S/4HANA. The component should be configured as an EndpointReceiver type with proper BPMN2 participant structure and include the necessary extension elements to define the iFlow type property. This is required for our master data synchronization process where S/4HANA business partner relationships need to be confirmed and sent to the Cloud Notification Service for downstream processing and notifications to relevant business users.",
    "We need to implement a business partner relationship replication confirmation process from SAP S/4HANA to our target system. The integration flow should begin with a message start event that will be triggered when S/4HANA sends business partner relationship change notifications. Requirements: 1) Use BPMN 2.0 standard message start event, 2) Configure it as part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' package, 3) Set component version to 1.0, 4) Use the standard MessageStartEvent variant, 5) Ensure the event connects to the next flow step via SequenceFlow_3, 6) The event should handle asynchronous message processing for business partner master data changes including creation, updates, and relationship modifications coming from S/4HANA system.",
    "We need to implement the termination point for our Business Partner Relationship replication confirmation iFlow that processes confirmations from SAP S/4HANA Cloud. The end event should be named 'End' and must be configured as a message end event to properly handle the final message state. This end event will be triggered after the confirmation processing is complete (incoming from SequenceFlow_5). The component should use the standard MessageEndEvent variant version 1.1.0 to ensure compatibility with our SAP Cloud Integration tenant. This is part of the confirm_business_partner_relationship_replication_from_sap_s4hana package and needs to follow our enterprise integration patterns for proper flow completion and monitoring.",
    "We need to set up a new integration project for replicating business partner relationship confirmations from SAP S/4HANA to external systems. The project should be configured as:\n\n- Project name: com.sap.s4c2cns.businesspartnerrelationship.confirmation\n- Package context: confirm_business_partner_relationship_replication_from_sap_s4hana\n- Development environment: Eclipse-based SAP Cloud Integration Tools\n- Project type: Java-based integration flow project with SAP CPI capabilities\n- Required natures: Java development, SAP Integration Flow project support, and SAP Business Services\n- Build requirements: Standard Java compilation support\n\nThis project will contain iFlows for processing business partner relationship data changes and sending confirmation messages back to source systems. The Eclipse project structure should support both Java development and SAP-specific integration flow artifacts.",
    "We need to implement data integrity validation for the business partner relationship replication process from SAP S/4HANA. The requirement is to create a generic file component that generates a cryptographic hash of the business partner relationship payload before sending the confirmation back to S/4HANA. This hash will be used by the receiving system to validate that the data hasn't been corrupted during transmission. The hash should be stored as a binary file within the integration flow and should use SHA-256 algorithm. The component should be part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' package and should handle the hash generation for each business partner relationship record being processed. The hash file should be accessible for comparison during the confirmation acknowledgment process.",
    "We need to implement a confirmation flow for Business Partner Relationship replication between SAP S/4HANA Public Cloud and SAP Sales Cloud/Service Cloud Version 2. The properties group should be named 'GENERAL' and contain 4 essential properties: 1) A comprehensive description explaining this is a confirmation integration flow for Business Partner Relationship Replication from S/4HANA Public Cloud to Sales Cloud and Service Cloud V2, 2) A marker property indicating this is an SAP-to-SAP integration pattern, 3) Source system identifier as 'SAPS4HANACloud', and 4) Target system identifier as 'SAPSalesCloudandSAPServiceCloudVersion2'. This configuration will be used by the integration monitoring and governance tools to properly categorize and track this B2B replication scenario.",
    "We need to set up the properties configuration for the 'confirm_business_partner_relationship_replication_from_sap_s4hana' integration package. The iFlow should be configured with the following requirements: 1) Set the description to clearly indicate this handles Business Partner Relationship Replication confirmation from SAP S/4HANA Public Cloud to both SAP Sales Cloud and SAP Service Cloud Version 2, 2) Mark this as an SAP-to-SAP integration using the appropriate SAP marker property, 3) Define the source system as SAP S/4HANA Cloud, 4) Define the target systems as SAP Sales Cloud and SAP Service Cloud Version 2. This is part of our master data synchronization project where we need to confirm successful replication of business partner relationships across our cloud landscape.",
    "We need to implement secure certificate-based authentication for the business partner replication integration between SAP S/4HANA and external systems. The integration package 'confirm_business_partner_relationship_replication_from_sap_s4hana' requires a public signing certificate file named 'publicsign.crt' to validate digital signatures on incoming business partner data. The certificate should be a DigiCert Trusted G4 Code Signing RSA4096 SHA384 certificate issued to SAP SE (Walldorf, Baden-Württemberg, Germany) with validity from February 17, 2022 to February 17, 2023. This certificate will be used by the message processing pipeline to verify the authenticity and integrity of business partner relationship data during replication operations. The file should be stored as a generic file resource within the integration flow to be accessible during runtime for cryptographic operations.",
    "We need to configure the Business Partner Relationship replication integration from SAP S/4HANA to SAP Sales Cloud. The integration requires SSL certificate-based authentication with the following specifications: 1) Private key alias should be left empty for runtime configuration, 2) Connection timeout must be set to 60 seconds (60000ms) for reliable network communication, 3) SSL certificate subject must use 'cn=subject' format for certificate validation, 4) Target host pattern should accept all Sales Cloud instances using wildcard '*.cxm-salescloud.com', 5) Certificate issuer must be configured as 'cn=issuer' for proper certificate chain validation. This configuration will be part of the confirm_business_partner_relationship_replication_from_sap_s4hana package and should be grouped under GENERAL properties for easy maintenance.",
    "We need to configure the sender adapter for our Business Partner Relationship replication confirmation scenario. The integration should receive bulk confirmation messages from S/4HANA system when business partner relationships are successfully replicated. Requirements: 1) Use role-based authentication for secure access, 2) Assign ESBMessaging.send role to the sender system for proper authorization, 3) Configure the endpoint address to match S/4HANA's outbound service path '/S4/CNS/BusinessPartnerRelationshipSUITEBulkConfirmation_Out', 4) Group these three sender properties together for easier maintenance and deployment. This is part of the master data integration package for confirming business partner relationship replication from SAP S/4HANA to downstream systems.",
    "We need to establish secure communication with the Cloud Notification Service for our business partner relationship replication scenario. The integration requires: 1) Authentication method should be set to 'Client Certificate' for enhanced security as per our enterprise security policy, 2) Credential reference should be left empty initially as the certificate will be configured separately in the security material section, 3) This configuration is part of the standard SAP content package 'confirm_business_partner_relationship_replication_from_sap_s4hana' and must maintain compatibility with the predefined message processing flow, 4) The properties group should be named 'Configuration group: CNS with 2 properties' to align with SAP naming conventions.",
    "Requirements: Set up configuration for confirming business partner relationship replication from S/4HANA. Use role-based authentication for sender with ESBMessaging.send role. Configure sender address as /S4/CNS/BusinessPartnerRelationshipSUITEBulkConfirmation_Out. Set up client certificate authentication for CNS connection to Sales Cloud (*.cxm-salescloud.com). Configure timeout to 60 seconds. Leave private key alias and CNS credentials empty for runtime configuration. Set certificate subject as 'cn=subject' and issuer as 'cn=issuer'. Group properties into: Authentication (3 properties), Connection Settings (4 properties), and Certificate Configuration (3 properties).",
    "We need to add a configurable parameter to our business partner relationship replication integration flow that allows administrators to specify which private key alias from the tenant keystore should be used for secure message signing and encryption when communicating with SAP S/4HANA. The parameter should be named 'PrivateKeyAlias', be of string type, and should be optional since we may have a default key configured at the tenant level. This will provide flexibility for different deployment environments (DEV, QAS, PROD) where different certificates might be used for secure communication channels.",
    "We need to add a configurable timeout parameter to the confirm_business_partner_relationship_replication_from_sap_s4hana integration flow. The parameter should be named 'Timeout' and accept integer values representing milliseconds. This parameter will be used to set the HTTP timeout when calling S/4HANA APIs for business partner relationship confirmations. The parameter should be optional (not required) since we have a default timeout configured in the adapter. No specific constraints or validation rules are needed at this time, and no additional metadata is required. The parameter will be consumed by the HTTP receiver adapter to prevent timeouts during high-volume business partner data synchronization.",
    "We need to configure a parameter called 'Sender_Auth' for our business partner relationship replication integration flow. This parameter should allow administrators to select from different authentication methods when setting up the sender system connection. Requirements: Parameter name should be 'Sender_Auth', data type string, make it optional (not required) since we have default authentication configured, implement as a dropdown/combobox for easy selection of authentication types like Basic, OAuth, Certificate, etc. No specific validation constraints needed as the authentication types will be predefined in the dropdown. Leave description empty for now as it will be added during documentation phase.",
    "We need to add flexibility to our SAP S/4HANA business partner relationship replication process. Currently, when we replicate business partner relationships and send confirmation notifications, we're using hardcoded subject lines. The business users want the ability to customize the email subject line based on different scenarios (new relationships, updates, deletions). Please create an optional string parameter called 'subject' that can be configured at runtime or deployment time. This parameter should not be mandatory since we have a default subject line fallback mechanism in place. The parameter will be used in the message mapping step to populate the email notification template.",
    "We need to add a configuration parameter for the Cloud Network Services (CNS) authentication mechanism in our business partner relationship replication integration flow. The parameter should be named 'CNS_Authentication' and must meet the following requirements: 1) Data type should be string to accommodate various authentication method identifiers, 2) Parameter should be optional (not required) to allow for default authentication fallback, 3) Must be implemented as a combobox/dropdown for easy selection of predefined authentication methods, 4) No specific validation constraints needed as the authentication methods will be validated at runtime, 5) Description can be left empty as it will be populated later by the business team, 6) This parameter will be used to determine which authentication protocol to use when connecting to the target system during business partner data synchronization.",
    "We need to configure an optional parameter for our business partner relationship replication integration flow that will store the Cloud Notification Service credential. The parameter should be named 'CNS_Credential' and defined as a string data type. Since this is for notification purposes and not critical to the main replication process, make it optional (isRequired=false). The credential will be used to authenticate with the notification service when sending alerts about replication status. No additional constraints or validation rules are needed at this time, and no description is required as this is an internal parameter.",
    "We need to configure a parameter in our S/4HANA business partner relationship replication integration flow that captures the sender role information. The parameter should be named 'Sender_Role', accept string values, and be optional since not all sender systems may have role-based identification. This will be used to identify which system or role is initiating the business partner relationship replication request, enabling conditional processing logic based on the sender's role in our landscape. The parameter should follow standard SAP integration patterns for optional string parameters without additional constraints or metadata requirements.",
    "We need to add a configurable parameter for the confirm business partner relationship replication integration flow from SAP S/4HANA. The parameter should be named 'Sender_Address' and must meet the following requirements: 1) Data type should be string to accommodate various address formats, 2) Parameter should be optional (not required) to maintain flexibility in different deployment scenarios, 3) No specific validation constraints are needed at this time, 4) This will be used to identify the sending system in the replication process when multiple S/4HANA systems are involved in the landscape",
    "We need to add a new optional parameter to our existing business partner relationship replication integration flow from SAP S/4HANA. The parameter should be named 'CNS-Host' and will be used to configure the Cloud Notification Service endpoint URL. Requirements: 1) Parameter name must be 'CNS-Host' 2) Data type should be string to accommodate various host URL formats 3) Must be optional (not required) to maintain backward compatibility with existing deployments that may not use CNS 4) No specific validation constraints needed at parameter level 5) Will be used in subsequent message processing steps to determine notification routing",
    "We need to add an optional string parameter called 'issuer' to the confirm_business_partner_relationship_replication_from_sap_s4hana integration flow. This parameter will store the OAuth2 token issuer URL for authentication purposes when connecting to the S/4HANA backend system. The parameter should be of type string, not mandatory (since we have default issuer configuration), and doesn't require any specific constraints or validation rules. This will allow flexibility in deployment across different landscapes where the OAuth2 issuer might vary between development, test, and production environments.",
    "We need to configure the confirm_business_partner_relationship_replication_from_sap_s4hana integration package with the following parameters: 1) PrivateKeyAlias (string, optional) for certificate-based authentication, 2) Timeout (integer, optional) for connection timeout in milliseconds, 3) Sender_Auth (string, optional, dropdown) with values like 'Basic', 'OAuth', 'Certificate' for sender authentication method, 4) subject (string, optional) for certificate subject identification, 5) Additional parameters should include receiver system credentials, batch size configuration, error handling options, and logging level settings. All parameters should be optional to allow flexible deployment across different landscapes. The parameter file should follow standard SAP CPI XML schema structure and be compatible with the business partner replication scenario from S/4HANA to target systems.",
    "We need to implement the confirm_business_partner_relationship_replication_from_sap_s4hana integration package. The JSON document should contain an OpenAPI 3.0.3 specification with the following requirements: 1) Title should be 'Open Api Specification for SAP CRM' with version 0.1, 2) Define a POST endpoint at '/sap/c4c/api/v1/inbound-data-connector-service/messages/sap.crm.md.integrationmetadataservice.entity.businessPartnerRelationshipS4ConfirmationIn', 3) Include required x-sap-crm-token header parameter of type string, 4) Set operationId as 'createmd.integrationmetadataservice_businessPartnerRelationshipS4ConfirmationIn', 5) Define request body schema for businessPartnerRelationshipS4ConfirmationMessageIn with messageHeader property structure, 6) Use application/json content type for the request body. This endpoint will be used by S/4HANA to send confirmation messages back to CRM when business partner relationship data has been successfully processed.",
    "We need to implement a flexible message mapping in our SAP CPI integration flow for confirming Business Partner Relationship replication from SAP S/4HANA to SAP C4C. The mapping should be configured to handle dynamic JSON structures where:\n\n- Package: confirm_business_partner_relationship_replication_from_sap_s4hana\n- Target message type: businessPartnerRelationshipS4ConfirmationIn.json (version 1.1)\n- Target endpoint: /sap/c4c/api/v1/inbound-data-connector-service/messages/sap.crm.md.integrationmetadataservice.entity.businessPartnerRelationshipS4ConfirmationIn with POST method\n- The mapping should be initialized with 0 source and 0 target structures to allow for runtime structure determination\n- Include proper XI framework configuration with LOCAL version control\n- Set up the transformation with appropriate role linkages for TARGET_IFR_MESS\n- Ensure the mapping supports JSON format handling for C4C API integration\n- Version should be set to 1.0 for initial deployment\n- The implementation should be ready for modification timestamp tracking and owner assignment",
    "We need to implement message tracking for the business partner relationship replication iFlow from SAP S/4HANA. The function should be named 'getMessageId' and must extract the SAP-specific message identifier from the exchange headers using the 'SapMessageIdEx' header field. This message ID will be used for correlation and monitoring purposes in our integration monitoring dashboard. The function should accept a String parameter (not used in this case) and the MappingContext to access header information. Ensure the function returns the extracted message ID as a String that can be mapped to target payload fields for audit trail requirements.",
    "We need to implement a reusable function library 'MappingFunctionLibrary.groovy' in our S/4HANA business partner relationship confirmation package. The library should contain a getMessageId function that retrieves the SAP message ID from the exchange context headers. This message ID will be used for end-to-end message tracking and correlation in our business partner replication scenarios. The function should accept a string parameter and mapping context, then return the SapMessageIdEx header value which contains the unique message identifier generated by the SAP system. This will ensure proper message traceability when confirming business partner relationship replications between systems.",
    "We need to implement the confirmation leg of our business partner relationship replication integration. This is part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' package. Requirements: 1) Create an outbound port type named 'BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out' that can handle confirmation messages when business partner relationships are successfully replicated from S/4HANA. 2) The port type should have one operation for processing bulk confirmation messages. 3) Include SAP documentation reference to the CA-MDG-APP-BP application component (Master Data Governance for Business Partners). 4) Apply appropriate WS-Policy references for both interface and operation levels following SAP naming conventions. 5) The operation should accept input messages of type 'BusinessPartnerRelationshipSUITEBulkReplicateConfirmation' to confirm successful replication batches. This will be used by external systems to acknowledge receipt and processing of business partner relationship master data changes.",
    "We need to establish an integration point for confirming business partner relationship replications from our SAP S/4HANA system as part of our Master Data Governance (MDG) initiative. The requirements are:\n\n- Target namespace should be 'http://sap.com/xi/SAP_BS_FND/MDG/Global2' following SAP naming conventions\n- Include standard WSDL imports for SOAP, HTTP, and MIME bindings\n- Reference SAP Global 2.0 schema namespace 'http://sap.com/xi/SAPGlobal20/Global'\n- Include WS-Policy support for future security requirements\n- The WSDL should define 1 port type for BusinessPartnerRelationshipConfirmation operations\n- Do not include service definitions as the actual service endpoints will be configured in the Cloud Integration iFlow\n- Include proper SIDL documentation structure for SAP tooling compatibility\n- This is part of the 'confirm_business_partner_relationship_replication_from_sap_s4hana' integration package",
    "We need to implement a business partner relationship confirmation flow that replicates data to SAP S/4HANA Cloud. The integration process should be configured with the following requirements:\n\n- Process Name: 'Integration Process' (as the main entry point)\n- Package: confirm_business_partner_relationship_replication_to_sap_s4hana\n- Transaction timeout: 30 seconds to handle potential network latency\n- Component version: 1.1 to align with our current integration standards\n- Transactional handling: Not required since we're dealing with confirmation messages that don't need rollback capabilities\n- Use the latest IntegrationProcess variant (1.1.3) for enhanced error handling features\n- Process ID should be 'Process_1' for consistency with naming conventions\n- Include proper BPMN2 namespace declarations for SAP Cloud Integration compatibility\n- Ensure the process supports the standard iFlow property extensions for monitoring and logging",
    "We need to implement message tracking for our business partner relationship replication process to SAP S/4HANA. Add a content enricher step that creates a monitoring ID header using the SAP message ID extended property (SapMessageIdEx) to ensure proper correlation and monitoring of processed messages. This should be positioned after the initial message processing but before sending to S/4HANA. The monitoring ID will be used by our operations team to track message flow status and troubleshoot any replication issues. Configure it as a header-type property with 'Create' action to ensure each message gets a unique tracking identifier.",
    "We need to implement a message mapping component for the business partner relationship replication confirmation flow from CNS (Customer Namespace System) to SAP S/4HANA. The requirements are:\n\n- Activity Name: CNS_S4_BusinessPartnerRelationShipConfirmation\n- Package: confirm_business_partner_relationship_replication_to_sap_s4hana\n- Function: Transform incoming business partner relationship data from CNS format to S/4HANA-compatible confirmation message format\n- Implementation: Use message mapping (.mmap) file located in src/main/resources/mapping/ directory\n- The mapping should handle field transformations for business partner IDs, relationship types, validity dates, and confirmation status codes\n- Ensure proper error handling for invalid relationship data\n- The enricher should add S/4HANA specific fields like confirmation timestamp, processing status, and system identifiers\n- Output should conform to S/4HANA Business Partner Relationship API structure for confirmation processing",
    "We need to establish an HTTPS endpoint for our confirm_business_partner_relationship_replication_to_sap_s4hana integration package. The external CRM system will send POST requests containing business partner relationship confirmation data in JSON format. Requirements: 1) Configure HTTPS sender adapter with maximum body size of 40MB to handle bulk confirmations, 2) Set up message flow from external participant to start event, 3) Use standard SAP namespace configuration, 4) Ensure the adapter can handle high-volume confirmation messages during business partner master data synchronization, 5) The endpoint should be accessible for both real-time and batch confirmation scenarios from upstream systems.",
    "We need to implement the final step of our Business Partner Relationship confirmation process that replicates data to SAP S/4HANA. The SOAP adapter should be configured on the message flow from EndEvent_2 to Participant_2 (SAP S/4HANA system). Requirements: 1) Enable header cleanup to remove unnecessary headers before sending to S/4HANA, 2) Configure security using a parameterized private key alias that can be set via configuration parameters, 3) Set the component namespace to 'sap' for proper SAP system integration, 4) The message flow should be named MessageFlow_8 following our naming convention, 5) Include extension elements for iFlow properties to support dynamic configuration in different environments (DEV/QAS/PRD), 6) Ensure the adapter can handle the business partner relationship confirmation response from the target S/4HANA system.",
    "We need to implement a sender endpoint for our business partner relationship replication scenario where SAP S/4HANA will send confirmation messages back to the CNS system. The endpoint should be configured as follows: 1) Name the endpoint 'CNS' to identify it as the Central Notification Service receiver, 2) Configure it as an EndpointSender type since CNS will be sending the confirmation responses, 3) Disable basic authentication as we will be using certificate-based authentication for this B2B communication, 4) This endpoint is part of the confirm_business_partner_relationship_replication_to_sap_s4hana package and should handle the acknowledgment flow when business partner relationships are successfully replicated to S/4HANA",
    "We need to establish an endpoint receiver for our business partner relationship replication integration flow that will handle the confirmation of business partner relationships from external systems and replicate them to our SAP S/4HANA backend. The endpoint should be named 'S4' to clearly identify it as the SAP S/4HANA target system. This is part of the master data management initiative where we're synchronizing business partner relationships across multiple systems. The endpoint needs to be configured as an EndpointReceiver type participant in the BPMN2 model structure, following SAP Cloud Integration Framework (ifl) standards. This endpoint will be the final destination in our integration flow after all data transformations and validations are completed for the business partner relationship confirmation process.",
    "We need to implement the initial trigger point for our SAP S/4HANA business partner relationship replication confirmation flow. The start event should be configured as a message event handler that can receive inbound business partner relationship change notifications from upstream systems. This component will be part of the 'confirm_business_partner_relationship_replication_to_sap_s4hana' integration package and should use the standard message start event variant. The event should be named 'Start' and configured to initiate the downstream processing flow when business partner relationship replication confirmations need to be sent to SAP S/4HANA. Ensure the component uses version 1.0 of the FlowstepVariant MessageStartEvent and properly connects to the next processing step in the integration flow sequence.",
    "We need to implement the final step in our 'confirm_business_partner_relationship_replication_to_sap_s4hana' integration package. Requirements: 1) Create an End Event named 'End' that receives input from SequenceFlow_10 coming from the previous confirmation step, 2) Configure it as a Message End Event to notify calling systems about completion, 3) Use component version 1.1 with the standard MessageEndEvent variant 1.1.0, 4) Ensure proper BPMN2 compliance for our S/4HANA Cloud integration scenario, 5) The event should cleanly terminate the flow after business partner relationship data has been successfully replicated and confirmed in the target S/4HANA system.",
    "We need to implement data integrity validation in our business partner relationship replication process from cloud systems to SAP S/4HANA. The requirement is to generate MD5 hash checksums for each business partner relationship payload before transmission to S/4HANA. This hash file should be created as a generic file component that can be referenced by the main iFlow for validation purposes. The hash should cover the entire business partner relationship data structure including partner IDs, relationship types, validity dates, and organizational assignments. The component should be part of the 'confirm_business_partner_relationship_replication_to_sap_s4hana' package and generate a binary hash file that can be used for downstream validation processes. The hash generation should be performed after data transformation but before the actual S/4HANA API call to ensure payload integrity.",
    "We need to implement a confirmation mechanism for Business Partner Relationship data replication as part of our cloud-to-cloud integration project. The integration flow should be configured with the following requirements: 1) Source system is SAP Sales Cloud and SAP Service Cloud Version 2, 2) Target system is SAP S/4HANA Public Cloud, 3) This is a standard SAP-to-SAP integration pattern that should be marked accordingly for governance purposes, 4) The integration description should clearly indicate this handles confirmation of Business Partner Relationship replication between the specified cloud systems, 5) Package structure should follow SAP naming conventions for business partner relationship replication scenarios.",
    "We need to set up the properties configuration for the 'confirm_business_partner_relationship_replication_to_sap_s4hana' integration package. This iFlow will process confirmation messages for business partner relationship data that has been replicated from SAP Sales Cloud and SAP Service Cloud Version 2 to SAP S/4HANA Public Cloud. The configuration must include: 1) A clear description explaining the integration purpose and source/target systems, 2) Proper SAP-to-SAP integration marking for compliance and governance, 3) Source system identification as 'SAPSalesCloudandSAPServiceCloudVersion2', 4) Target system identification as 'SAPS4HANACloud'. This is part of our master data management strategy to ensure data consistency across our cloud landscape.",
    "We need to implement secure communication for our business partner master data replication from SAP Ariba to SAP S/4HANA. The integration requires digital signature verification using SAP's official public certificate (publicsign.crt) issued by DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA1. The certificate should be embedded as a generic file resource in the confirm_business_partner_relationship_replication_to_sap_s4hana package to validate incoming signed messages. The certificate is valid from February 17, 2022 to February 17, 2023 and contains SAP SE's public key information for Walldorf, Baden-Württemberg, Germany location. This will be used by the Message Security component to verify the authenticity of business partner data before processing the replication request.",
    "We need to establish the integration flow for confirming business partner relationship replication to our SAP S/4HANA system. The configuration requirements are: 1) Set up certificate-based authentication with subject 'cn=subject' and issuer 'cn=issuer' but leave the private key alias empty for now pending security team approval, 2) Configure a 60-second timeout (60000ms) for HTTP connections to handle potential network latency, 3) Assign the ESBMessaging.send user role for proper authorization to send messages to the target system. This is part of our master data synchronization project where we need to ensure business partner relationships created in the source system are properly replicated and confirmed in S/4HANA.",
    "We need to establish a secure integration endpoint for our C4C to S/4HANA business partner relationship replication scenario. The sender system (SAP S/4HANA) will send confirmation messages back to acknowledge successful processing of business partner relationship data. Requirements: 1) Implement role-based authentication to ensure only authorized S/4HANA systems can send confirmations, 2) Set up the endpoint address following our standard naming convention for C4C-S4HANA integrations using the path '/c4c/s4/businessPartnerRelationShipS4ConfirmationOut', 3) Group these sender-related properties together for better maintainability in the integration package 'confirm_business_partner_relationship_replication_to_sap_s4hana'. This is part of our master data synchronization project where we need bidirectional confirmation of business partner relationship updates between the two systems.",
    "We need to establish connectivity to our SAP S/4HANA Cloud system for confirming business partner relationship replications. The integration requires: 1) Connection to S/4HANA Cloud endpoint at *.s4hana.ondemand.com using the BusinessPartnerRelationshipSUITEBulkReplicateConfirmation service, 2) Client Certificate authentication method for secure communication, 3) Default proxy configuration, 4) Placeholder fields for LocationID and Credential to be configured per environment, 5) The service endpoint path should be /sap/bc/srt/scs_ext/sap/businesspartnerrelationshipsu1. This configuration will be used in the confirm_business_partner_relationship_replication_to_sap_s4hana package to enable successful confirmation of replicated business partner relationships from source systems to S/4HANA.",
    "Requirements: 1) Configure sender authentication using role-based security with ESBMessaging.send role and address /c4c/s4/businessPartnerRelationShipS4ConfirmationOut. 2) Set up receiver connection to S/4HANA using client certificate authentication pointing to BusinessPartnerRelationshipSUITEBulkReplicateConfirmation service at https://*.s4hana.ondemand.com/sap/bc/srt/scs_ext/sap/businesspartnerrelationshipsu1. 3) Configure certificate details with subject 'cn=subject' and issuer 'cn=issuer'. 4) Set connection timeout to 60 seconds, disable CSRF token handling, and use default proxy settings. 5) Leave credential alias, private key alias, and location ID fields empty for runtime configuration. This is part of the master data synchronization process where C4C needs to send confirmation messages back to S/4HANA after processing business partner relationship data.",
    "We need to add a configurable parameter for the private key alias in our business partner relationship replication integration flow. The parameter should be named 'PrivateKeyAlias', have string data type, and be optional since some environments may use default certificate configurations. This will allow different tenants and environments to specify their own private key aliases for secure communication with SAP S/4HANA systems during business partner data replication. The parameter should not have any validation constraints as alias names can vary significantly across different landscapes.",
    "We need to add a configurable timeout parameter for the HTTP calls in our business partner relationship replication integration flow to SAP S/4HANA. The parameter should be named 'TimeOut', be of integer data type to store milliseconds, and should be optional since we have default timeout values configured at the adapter level. This will allow operations teams to adjust timeout values during deployment without modifying the iFlow design. The parameter will be used in the HTTP receiver adapter configuration to override default timeout settings when connecting to the S/4HANA system for business partner relationship confirmations.",
    "We need to configure a flexible authentication parameter for our SAP S/4HANA business partner relationship replication integration. The parameter should be named 'Sender_Auth' and must support multiple authentication options that can be selected at runtime through a combobox interface. This parameter will be used to dynamically configure how the sender system authenticates when sending business partner relationship data to SAP S/4HANA. The parameter should be optional (not mandatory) to allow for default authentication fallback mechanisms, accept string values to accommodate various authentication method identifiers, and not have any specific validation constraints since the authentication methods may vary across different deployment environments. This flexibility is required because our integration landscape includes multiple sender systems with different authentication capabilities including Basic Auth, OAuth2, and certificate-based authentication.",
    "We need to add a flexible parameter to our business partner relationship replication integration flow that allows users to optionally specify a subject line for notifications or processing context. The parameter should be named 'subject', have a string data type, and be optional (not required) since not all replication scenarios will need this field. This will be used in the confirm_business_partner_relationship_replication_to_sap_s4hana package for scenarios where we need to send confirmation emails or categorize the replication requests. No specific validation constraints are needed at this time, and no additional metadata is required for this parameter.",
    "We need to add flexibility to our business partner relationship replication process to SAP S/4HANA by allowing users to optionally specify which S4HANA system location the data should be replicated to. The parameter should be named 'S4_LocationID', accept string values, and be optional since we have a default location configured. This will support our multi-tenant S4HANA landscape where business partners may need to be replicated to different system instances based on geographical or organizational requirements. The parameter will be used in the message mapping to determine the correct target endpoint and system configuration.",
    "We need to add a configuration parameter for the SAP S/4HANA connectivity proxy type in our business partner relationship replication integration flow. The parameter should be named 'S4_ProxyType', have a string data type, and be presented as a combo box/dropdown in the iFlow configuration UI. This parameter is optional since some environments may not require proxy configuration. The parameter will be used to determine the proxy settings when connecting to the target S/4HANA system during business partner relationship replication processes. No specific validation rules or description text are required at this time.",
    "We need to add a parameter to track which user role is executing the business partner relationship replication process. This parameter should be named 'User Role' and will contain string values representing different user roles like 'BP_ADMIN', 'DATA_STEWARD', or 'SYSTEM_USER'. The parameter should be optional since some automated processes may not have an associated user role. This will help us with audit trails and potentially apply role-based processing logic in the integration flow. The parameter doesn't need validation constraints as we want flexibility in the role naming convention across different source systems.",
    "We need to add support for OAuth 2.0 authentication in our business partner relationship replication integration to SAP S/4HANA. The integration should accept an optional 'issuer' parameter that contains the OAuth provider's issuer URL (e.g., 'https://accounts.google.com' or 'https://login.microsoftonline.com/tenant-id/v2.0'). This parameter will be used during token validation to verify the authenticity of incoming JWT tokens. The parameter should be of string type, not mandatory since some authentication scenarios might not require issuer validation, and should be configurable at deployment time without requiring code changes.",
    "We need to add a deployment parameter for the S4HANA system credential name in our business partner relationship replication integration flow. The parameter should be named 'S4_Credential' and accept string values. It should be optional since we may have a default credential configured at the tenant level. This parameter will be used to dynamically reference the appropriate credential artifact when connecting to the target S4HANA system during business partner relationship confirmation processes. The integration needs to support multiple S4HANA landscapes, so the credential reference must be configurable per deployment.",
    "We need to define a configuration parameter for our business partner relationship replication confirmation iFlow that will store the target S/4HANA system endpoint address. This parameter should be named 'S4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address' to align with our naming conventions for S/4HANA SUITE bulk operations. The parameter should be of string type to accommodate various endpoint URL formats, and it should be optional (not required) since we may have default routing configured at the integration suite level. This will be used in the confirm_business_partner_relationship_replication_to_sap_s4hana package to dynamically configure the destination address for confirmation messages when business partner relationships are successfully replicated from source systems to S/4HANA.",
    "We need to add a configuration parameter for our business partner relationship replication integration flow that connects to SAP S4HANA. The parameter should be named 'S4_Authentication' and configured as follows: data type should be string, it should not be required (optional parameter), implement it as a combobox/dropdown for easier selection by administrators, no specific validation constraints needed at parameter level, and no description text required as this will be documented separately. This parameter will be used later in the flow to determine which authentication artifact to use when connecting to the target S4HANA system.",
    "We need to add a configuration parameter to our business partner relationship replication integration flow that controls CSRF (Cross-Site Request Forgery) token handling. The parameter should be named 'CSRF' and must be of boolean type to allow true/false values. This parameter should be optional (not required) since some S/4HANA systems may not require CSRF tokens for certain API endpoints. The parameter will be used in the integration logic to conditionally fetch and include CSRF tokens in HTTP headers when making calls to the S/4HANA business partner relationship APIs. Do not add any description or constraints as this is an internal technical parameter.",
    "We need to add a configurable parameter to capture the sender's address/identifier for the business partner relationship replication integration flow. This parameter should be named 'Sender_Address', have a string data type, and be optional since some scenarios may not require explicit sender identification. The parameter will be used for routing and auditing purposes when multiple source systems are replicating business partner relationship data to our S/4HANA system. Please ensure it follows the standard parameter definition structure for our confirm_business_partner_relationship_replication_to_sap_s4hana package.",
    "We need to implement the 'confirm_business_partner_relationship_replication_to_sap_s4hana' integration package for our HR-Finance integration project. The iFlow requires the following 13 parameters to be defined:\n\n1. PrivateKeyAlias (string, optional) - For certificate-based authentication\n2. TimeOut (integer, optional) - HTTP connection timeout in milliseconds\n3. Sender_Auth (string, optional, dropdown) - Authentication method for sender system\n4. subject (string, optional) - Certificate subject for authentication\n5. Sender_Address (string, optional) - Source system endpoint URL\n6. cn (string, optional) - Common name for certificate authentication\n7. Receiver_Address (string, required) - SAP S/4HANA target system URL\n8. Credential_Name (string, optional) - Name of deployed credential for authentication\n9. Receiver_Auth (string, optional, dropdown) - Authentication method for receiver\n10. Private_Key_Alias (string, optional) - Alternative private key alias\n11. Address (string, optional) - Generic address parameter for flexibility\n12. Authentication (string, optional, dropdown) - General authentication type\n13. ProxyType (string, optional, dropdown) - Proxy configuration type\n\nThe parameter file should follow SAP CPI standards with proper XML structure, data types, and metadata for UI rendering. Some parameters should be configured as dropdown/combobox fields for better user experience.",
    "We need to implement a confirmation mechanism for business partner relationship data that has been replicated from SAP CRM (C4C) to S/4HANA. The integration requires:\n\n1. API Endpoint: /sap/c4c/api/v1/http/c4c/s4/businessPartnerRelationshipS4ConfirmationOut\n2. HTTP Method: POST operation for sending confirmation messages\n3. Authentication: Mandatory x-sap-crm-token header for security\n4. Request payload structure with:\n   - messageHeader containing UUID, sender/receiver communication system details\n   - Business partner relationship confirmation data\n   - Standard SAP integration metadata\n5. OpenAPI 3.0.3 specification format\n6. Operation ID: createmd.integrationmetadataservice_businessPartnerRelationshipS4ConfirmationOut\n7. Content-Type: application/json\n8. This is part of the confirm_business_partner_relationship_replication_to_sap_s4hana integration package\n\nThe API will be consumed by S/4HANA to send confirmation messages back to CRM when business partner relationship data has been successfully processed.",
    "We need to implement a message mapping in the 'confirm_business_partner_relationship_replication_to_sap_s4hana' package that will process confirmation messages from external systems. The mapping should:\n\n- Handle dynamic JSON input structure from source systems\n- Transform to BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_In WSDL format\n- Support flexible message structures without fixed schemas\n- Use namespace http://sap.com/xi/SAPGlobal20/Global\n- Allow runtime determination of field mappings\n- Process bulk confirmation messages for business partner relationship replication\n- Ensure compatibility with SAP S/4HANA target system\n- Include proper error handling for malformed input structures\n- Support both create and update confirmation scenarios\n\nThe mapping will be used in an integration flow that receives confirmation responses after business partner relationship data has been successfully replicated to S/4HANA, and needs to transform these confirmations back to the requesting system's expected format.",
    "We need a custom mapping function named 'customFunc1' that takes two string parameters representing a header name and property name, along with the mapping context. The function should retrieve the actual value from the integration flow header using the first parameter as the header key, get the property value using the second parameter as the property key, and return the concatenated result. This will be used to create composite business partner relationship identifiers by combining dynamic header information (like sender system ID) with configuration properties (like target system prefix) during the replication process to SAP S/4HANA.",
    "We need a custom mapping function in our SAP S/4HANA business partner relationship replication integration that can access both message headers and exchange properties during message transformation. The function should take two string arrays as parameters - one containing header names and another containing property names. It should retrieve the first header value from the message context using the header name provided in the first input array, get the first property value using the property name from the second parameter array, and add both retrieved values to the output for further processing in the message mapping. This is required for the confirm_business_partner_relationship_replication_to_sap_s4hana package where we need to combine context information with payload data during the mapping transformation.",
    "We need to implement message tracking for our business partner relationship replication interface to SAP S/4HANA. The requirement is to create a Groovy function named 'setSOAPMessageID' that accepts a message ID string parameter and the mapping context. The function should set the SAP extended message ID header 'SapMessageIdEx' with the provided message ID value to enable proper message correlation and monitoring in the SAP system. This is part of the confirm_business_partner_relationship_replication_to_sap_s4hana integration package. The function should return the original message ID value after setting the header to maintain the message flow continuity.",
    "We need a MappingUtility.groovy script in the confirm_business_partner_relationship_replication_to_sap_s4hana package with the following requirements:\n\n1. Import the SAP CPI mapping API module for context handling\n2. Create a setSOAPMessageID function that:\n   - Takes a string argument for the message ID value\n   - Accepts MappingContext to access message properties\n   - Sets the 'SapMessageIdEx' header with the provided ID value\n   - Returns the message ID for potential chaining\n3. Include commented template functions (customFunc1 and custFunc2) that demonstrate:\n   - How to read headers and properties from MappingContext\n   - String concatenation patterns for future enhancements\n   - Output parameter usage for multi-value returns\n4. The script should be ready for use in message mapping transformations during Business Partner relationship data replication from source systems to SAP S/4HANA\n5. Ensure proper SAP message correlation by setting the SapMessageIdEx header for downstream processing and error handling",
    "We need to establish a web service connection to confirm business partner relationship replication to our SAP S/4HANA system. The target system is the development server ldciqw9.wdf.sap.corp on port 50000, using client 300. The service should connect to the Business Partner Relationship Service (businesspartnerrelationshipsu1) via the SAP Communication Server (scs) endpoint. Configure the WSDL service with appropriate SOAP binding to handle the confirmation responses from S/4HANA when business partner relationships are successfully replicated from the source system. This is part of the master data synchronization process for our multi-system landscape integration project.",
    "We need to implement the confirmation service for our Business Partner Relationship replication process. The requirements are:\n\n- Port type name: BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_In\n- This is part of the confirm_business_partner_relationship_replication_to_sap_s4hana package\n- Must support one operation: BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_In\n- Input message should be: BusinessPartnerRelationshipSUITEBulkReplicateConfirmation\n- Include SAP documentation reference to application component CA-MDG-APP-BP for Master Data Governance Business Partner module\n- This will be used to receive confirmation messages when business partner relationships are successfully replicated to S/4HANA, allowing the source system to update the replication status\n- Follow SAP standard naming conventions for SUITE bulk operations\n- Ensure proper WSDL namespace handling with 'tns' prefix for message references",
    "We need to implement a confirmation mechanism for our Business Partner Relationship replication process from SAP Master Data Governance (MDG) to SAP S/4HANA. The WSDL should be configured with the following specifications:\n\n- Target namespace: http://sap.com/xi/SAP_BS_FND/MDG/Global2\n- Package context: confirm_business_partner_relationship_replication_to_sap_s4hana\n- Should contain exactly 1 service definition and 1 port type\n- Must support SOAP 1.1 and SOAP 1.2 protocols\n- Include proper SAP Global schema references (SAPGlobal20/Global)\n- The service should handle confirmation messages for business partner relationship data that has been successfully replicated from the central MDG system to the target S/4HANA system\n- Include standard WSDL bindings for HTTP transport\n- Ensure compatibility with SAP Process Integration/Process Orchestration standards\n- The WSDL should be ready for deployment in SAP Cloud Integration environment"
  ],
  "output": [
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><projectDescription>\n\t<name>com.sap.OPSupplier.OPsupplier2S4CEbuyer.InvoiceRequest</name>\n\t<comment/>\n\t<projects>\n\t</projects>\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>\n\t<natures>\n\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n\t\t<nature>com.sap.ide.ifl.project.support.project.nature</nature>\n\t\t<nature>com.sap.ide.ifl.bsn</nature>\n\t</natures>\n</projectDescription>",
    "bin.includes = META-INF/,\\\n               .\nbin.excludes = src/*,\n\t\t\t   .\nsource.. = src/main/resources/scenarioflows/integrationflow/new_file.bpmn\noutput.. = bin/",
    "A\u0014#¶5\u0010ïóS½ô½Î1J9±Eädë\nMqÃf@ª+GÇ\u0004&¦ár3\u0001\u001aãw²­¼PXæÃo¯¶¶¿ff\u0001â\fJg:ßæ\u0003ýí>ÔúÛH\u0006\u0002\u0005-$Ú<\u0016\u001bæ\u0013õÄ§Ió|u-Bö°O¹²û\\:Ö\u0011dþW\bi\bc¸Q'w\u0007IºrÊ°_%ØcÙú\u0002­E¤9ïÎ&\u000e$\u000b\u000fÏE\u0018öC\u0002ÈÅ\u0011¢âB?ÅIä½L\u0004Ö\u0014yHWÍéÏ\u001aÃ(n¿4>û]\u001fk\u0001hí`¢3gM0DFqz\u000böÚ\u0007èf\u0005zß*Gâ_Ø]4\u000eØ6ü\u0011¤ç¾D\u0000¯Ö\nòÏ\u0015¢~kÙ-\u000fÄb\u0012:S&\u0001w_\u0003h\u0011lA÷%F£2â¿OäéAõ&a^|E#¤³¸\u000fZÂ¿½R.Ó{\b\u001c'yÂJWèE3^ý\u001fÐö[8&R¨T»Ê¡ïÂûslúÊ¼»»|´´\u000fÚ\b¹<\u00191ôï´Ç\u000ehÖv<ÙF¼ccbH2ØZ×\u0016ÚS,\u000fHb$ÍÌ\u0011³XÑ\u0000ôTG\u0017© \n\u0013þ\u000fý¸A^×®O\u00112§tÂ*NS8»kÔ\u001bß0o«\n]võ \\üBèéÙzL\u0010ç\u001eËÚaÄ¸v9Tuï5\u001bÂz~HA\u0007_ç\u0013e/j\u000eqL÷  J<Q×ã$4",
    "description=Send supplier invoice back to the purchasing system\nSAP-MarkedSAP2SAP=SAP_TO_SAP_INTEGRATION\nsource=SAPERP,SAPS4HANA\ntarget=SAPS4HANACloud",
    "#Store metainfo properties\n#Wed Jul 23 06:57:10 UTC 2025\ndescription=Send supplier invoice back to the purchasing system\nSAP-MarkedSAP2SAP=SAP_TO_SAP_INTEGRATION\nsource=SAPERP,SAPS4HANA\ntarget=SAPS4HANACloud",
    "0\u0007Z0\u0005B \u0003\u0002\u0001\u0002\u0002\u0010\n¢¬ð\u0013á\u0007þ\u0003ª\"\"óî0\n\u0006\t*H÷\n\u0001\u0001\u000b\u0005\u00000i1\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002US1\u00170\u0015\u0006\u0003U\u0004\n\u0013\u000eDigiCert, Inc.1A0?\u0006\u0003U\u0004\u0003\u00138DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA10\u001e\u0017\n220217000000Z\u0017\n230217235959Z0_1\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002DE1\u001b0\u0019\u0006\u0003U\u0004\b\f\u0012Baden-WÃ¼rttemberg1\u00110\u000f\u0006\u0003U\u0004\u0007\u0013\bWalldorf1\u000f0\n\u0006\u0003U\u0004\n\u0013\u0006SAP SE1\u000f0\n\u0006\u0003U\u0004\u0003\u0013\u0006SAP SE0\u0002\"0\n\u0006\t*H÷\n\u0001\u0001\u0001\u0005\u0000\u0003\u0002\u000f\u00000\u0002\n\u0002\u0002\u0001\u0000²HY÷«¯HªBÚN\u0003ÿ¼;]|¹o)Þqã\u0016\u000eE¬9·1wÿM\u0010ë\"!E\u0017Âd©ó²VHR2B7]ÏSTí\u001c\u0002£°L®\u0003|Îz\u0010Bï:í#lø !G£I²\u0002¿óv\u001aÃk\u001a³Ý0²9o*É-ËB+Ã¶ÉÍë<ÍÙfÌÄÌÈA¾ý¬97·ÆÂ¢ðø=6n\u0004ÚmòämD@$\u000b«Æ.+\n¤\u0016\u0012¦ r'îWCôh\u000eõ¿\fªdói¶<Û*\u001dÎ#$¼)ðããÄ!©\u0013\u0011àñRØ#¿ùk-\u000eûÛ'ù\u001emtv@\u0014TcLÍ¡®¦¯\u001fQt#Cê\u0003¹\u000f6÷aýw»5f×Î©mb¹ÏMLÆs\f4ÇÑ2M$µu6ïbR\u0013RÑ/§W[©\"TïYÖ'v*æbê`÷Í)\nq\u0005&8á¿ãþu\u001b\bÒÏr´=RE¹De¶>æ\u000fH­¾9r0\u0019s\u0011Ó3\u0018ÏXgdàæ²\u0002Uùôìô<)D\b§\u0004~Ó1¸-«`õ\\Ûè\u000fÆ~¤Wu\u0018â#Ó\u0018ÝÅlgOØLÏ-X:%â+\u001d´jýtÉ\u001f/uñ¨u®\nP§VQÂ<ÏÙ}ö\u000f¤ýÈ§±Ù³ºÞÅ²Kl5}GÊòPU +øAÞ\u000bê§ÿ¹\u0007MWVXÿk]Ìï¡\u0018Å§kÐ©\u0002\u0003\u0001\u0000\u0001£\u0002\u00060\u0002\u00020\u001f\u0006\u0003U\u001d#\u0004\u00180\u0016\u0014h7àë¶;ø_\u0011ûþa{\beôNB0\u001d\u0006\u0003U\u001d\u000e\u0004\u0016\u0004\u0014ÛÐ\u0002=jbsµÞÚÌ\u0004¨vb0\u000e\u0006\u0003U\u001d\u000f\u0001\u0001ÿ\u0004\u0004\u0003\u0002\u00070\u0013\u0006\u0003U\u001d%\u0004\f0\n\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0003\u00030µ\u0006\u0003U\u001d\u001f\u0004­0ª0S Q OMhttp://crl3.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0S Q OMhttp://crl4.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0>\u0006\u0003U\u001d \u000470503\u0006\u0006g\f\u0001\u0004\u00010)0'\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0002\u0001\u0016\u001bhttp://www.digicert.com/CPS0\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0001\u0001\u000400$\u0006\b+\u0006\u0001\u0005\u0005\u00070\u0001\u0018http://ocsp.digicert.com0\\\u0006\b+\u0006\u0001\u0005\u0005\u00070\u0002Phttp://cacerts.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt0\f\u0006\u0003U\u001d\u0013\u0001\u0001ÿ\u0004\u00020\u00000\n\u0006\t*H÷\n\u0001\u0001\u000b\u0005\u0000\u0003\u0002\u0001\u0000é²º×óÙ7ËÇ½§³Ê\u0007¾àé:F\\\u0014h%`ËyîÍAAM9\u0017¼2\u0003\u000f ±kÂx\u0005U!:{\u0018Ú@1¸+¨·\u00078\u0000ä1Ï}~Þ e\u0019éÈ©\bó\u001c\\è\u0018hÃò7¡BM\nÍa7a\u0014á®Q%g v,'Òð×û¹ÑÂ4 Ã¹À}é*s\u0019Xûþõ0±\u000b\u000e6m\tÆQñ¿õá9ph\f²ÖrqôÂÛÇ\u000fÙBÃ.\u0010\u0012¯Ç<¯sj²\u0000\u0006í)½÷\u001aõË÷ÕÞ:åÿò{\u001dð°yÏ5R\u000bãCûÁ\u001d@«]üý\u001bÚ¨7wK¯T°\\Ýñ\u001e\nJàêekÖÄæ\u001aåµÍF\u0002\u0017Cèô§²\u0007lÓÎÈ\u0017\u001b`âÄ¯ÆóøÉ\u0017G\u0010Ý\u001c=6=n\u0005äöüí\u0014Ái¥;V?´þ!!póüªÄ\u0011Y\u0017à,Û7\u001f±§ ÊÒÑlÛ-Ôeö(t9löÙìqfTCÖã}èÌûL«v²7[\u0017]À6q§P1g[zËZÛ+c\u0010í\u000fó\t¼½\u001fÒY¸\u001f©h\u001ckgmàó ³\u0002\u000ef\u001dÚéo\u0005º\u0007½ÎxN\n¿ ½Í\u0010æùë¯ãÚÕêÝÑ¼d{»-?w\u0003ÀÜ®`S\u000bàTºÍ¿ÈÚ%H\u000bx°\u0019Ú¬'ôËJ7'Îác\u0006ûõ(²\u001b³UT­û¬\u001b\u001f\u000bÁ\u000eâ\u000e]¿?}O\u0001B=",
    "OPSupplier_Sender_issuerDN=cn\\=<issuer>\nOPSupplier_Sender_enableBasicAuthentication_13=true\nOPSupplier_Sender_subjectDN=cn\\=<sub>\nOPSupplier_Sender_address=/EDI/InvoiceRequest/INVOIC02",
    "S4CEBuyer_Receiver_proxyType_3=sapcc\nS4CEBuyer_Receiver_CompressMessage_7=0\nS4CEBuyer_Receiver_allowChunking_5=1\nS4CEBuyer_Receiver_LocationID=\nS4CEBuyer_Receiver_cleanupHeaders_4=1\nS4CEBuyer_Receiver_authentication_6=Basic",
    "S4_host_URL=http\\://<S4_Host>\\:<S4_Port/sap/bc/srt/scs_ext/sap/invoicerequest_in\nS4_SOAP_Timeout=6000\nS4_user_credential=<S4_Credentials>",
    "HCP_Integration_Service_Error_auth_5=none\nHCP_Integration_Service_Error_ssl_6=off",
    "ExtensionRequired=false\nMailNotification=false\nEnableLogging=false",
    "Mail_From_CPI_Error=mailfrom@mail.com\nMail_Subject_CPI_Error=SAP CPI process error\nMail_Body_CPI_Error=${in.body}\nMail_To_CPI_Error=mailto@mail.com",
    "CPI_Error_content_type_8=text/plain\nCPI_Error_timeout_11=3000\nCPI_Error_content_encoding_9=UTF-8\nCPI_Error_keep_attachments_10=0",
    "IDoc2SOA_InvoiceCustomMapping_iFlow_address_9=/EDI/INVOIC_INVOIC02_CustomMap",
    "#Thu Feb 01 21:10:33 UTC 2024\nOPSupplier_Sender_issuerDN=cn\\=<issuer>\nOPSupplier_Sender_enableBasicAuthentication_13=true\nS4CEBuyer_Receiver_proxyType_3=sapcc\nS4CEBuyer_Receiver_CompressMessage_7=0\nS4_host_URL=http\\://<S4_Host>\\:<S4_Port/sap/bc/srt/scs_ext/sap/invoicerequest_in\nHCP_Integration_Service_Error_auth_5=none\nExtensionRequired=false\nMailUser_HCI_Error=\nS4CEBuyer_Receiver_allowChunking_5=1\nMail_From_CPI_Error=mailfrom@mail.com\nCPI_Error_content_type_8=text/plain\nHCP_Integration_Service_Error_ssl_6=off\nCPI_Error_timeout_11=3000\nS4CEBuyer_Receiver_LocationID=\nMail_Subject_CPI_Error=SAP CPI process error\nS4CEBuyer_Receiver_cleanupHeaders_4=1\nMail_Body_CPI_Error=${in.body}\nCPI_Error_content_encoding_9=UTF-8\nS4_SOAP_Timeout=6000\nMailNotification=false\nS4CEBuyer_Receiver_authentication_6=Basic\nCPI_Error_keep_attachments_10=0\nMail_To_CPI_Error=mailto@mail.com\nEnableLogging=false\nOPSupplier_Sender_subjectDN=cn\\=<sub>\nSMPT_Server_CPI_Error=mail.com\\:587\nIDoc2SOA_InvoiceCustomMapping_iFlow_address_9=/EDI/INVOIC_INVOIC02_CustomMap\nS4_user_credential=<S4_Credentials>\nOPSupplier_Sender_address=/EDI/InvoiceRequest/INVOIC02",
    "<parameter>\n<key/>\n<name>Mail_From_CPI_Error</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>EnableLogging</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>OPSupplier_Sender_enableBasicAuthentication_13</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_user_credential</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4CEBuyer_Receiver_allowChunking_5</name>\n<type>xsd:boolean</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>IDoc2SOA_InvoiceCustomMapping_iFlow_address_9</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4CEBuyer_Receiver_authentication_6</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4CEBuyer_Receiver_LocationID</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>MailUser_HCI_Error</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Mail_Body_CPI_Error</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>SMPT_Server_CPI_Error</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4CEBuyer_Receiver_proxyType_3</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>HCP_Integration_Service_Error_auth_5</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>HCP_Integration_Service_Error_ssl_6</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4CEBuyer_Receiver_CompressMessage_7</name>\n<type>xsd:boolean</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>MailNotification</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Mail_To_CPI_Error</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_host_URL</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>CPI_Error_content_type_8</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>OPSupplier_Sender_subjectDN</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>CPI_Error_keep_attachments_10</name>\n<type>xsd:boolean</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_SOAP_Timeout</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>OPSupplier_Sender_address</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>OPSupplier_Sender_issuerDN</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>ExtensionRequired</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>CPI_Error_content_encoding_9</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>CPI_Error_timeout_11</name>\n<type>xsd:integer</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Mail_Subject_CPI_Error</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4CEBuyer_Receiver_cleanupHeaders_4</name>\n<type>xsd:boolean</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><parameters><parameter>\n    <key/>\n    <name>Mail_From_CPI_Error</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>EnableLogging</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>OPSupplier_Sender_enableBasicAuthentication_13</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_user_credential</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4CEBuyer_Receiver_allowChunking_5</name>\n    <type>xsd:boolean</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>IDoc2SOA_InvoiceCustomMapping_iFlow_address_9</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4CEBuyer_Receiver_authentication_6</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4CEBuyer_Receiver_LocationID</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>MailUser_HCI_Error</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Mail_Body_CPI_Error</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>SMPT_Server_CPI_Error</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4CEBuyer_Receiver_proxyType_3</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>HCP_Integration_Service_Error_auth_5</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>HCP_Integration_Service_Error_ssl_6</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4CEBuyer_Receiver_CompressMessage_7</name>\n    <type>xsd:boolean</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>MailNotification</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Mail_To_CPI_Error</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_host_URL</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>CPI_Error_content_type_8</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>OPSupplier_Sender_subjectDN</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>CPI_Error_keep_attachments_10</name>\n    <type>xsd:boolean</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_SOAP_Timeout</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>OPSupplier_Sender_address</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>OPSupplier_Sender_issuerDN</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>ExtensionRequired</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>CPI_Error_content_encoding_9</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>CPI_Error_timeout_11</name>\n    <type>xsd:integer</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Mail_Subject_CPI_Error</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4CEBuyer_Receiver_cleanupHeaders_4</name>\n    <type>xsd:boolean</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><param_references><reference attribute_category=\"OPSupplier_Sender.Receiver.System\" attribute_id=\"ctype::AdapterVariant/cname::IDOC/tp::HTTP/mp::IDoc SOAP/direction::Receiver/version::1.0.5/attrId::address\" attribute_uilabel=\"Address\" param_key=\"OPSupplier_Sender_address\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::cleanupHeaders\" attribute_uilabel=\"Clean-up Request Headers\" param_key=\"S4CEBuyer_Receiver_cleanupHeaders_4\"/><reference attribute_category=\"S4CEBuyer_Receiver.Receiver.System\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::address\" attribute_uilabel=\"Address\" param_key=\"S4_host_URL\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::CompressMessage\" attribute_uilabel=\"Compress Message\" param_key=\"S4CEBuyer_Receiver_CompressMessage_7\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::allowChunking\" attribute_uilabel=\"Allow Chunking\" param_key=\"S4CEBuyer_Receiver_allowChunking_5\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::proxyType\" attribute_uilabel=\"Proxy Type\" param_key=\"S4CEBuyer_Receiver_proxyType_3\"/><reference attribute_category=\"S4CEBuyer_Receiver.Receiver.Auth\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::credentialName\" attribute_uilabel=\"Credential Name\" param_key=\"S4_user_credential\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::location_id\" attribute_uilabel=\"Location ID\" param_key=\"S4CEBuyer_Receiver_LocationID\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::requestTimeout\" attribute_uilabel=\"Timeout (in ms)\" param_key=\"S4_SOAP_Timeout\"/><reference attribute_category=\"S4CEBuyer_Receiver\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.5.1/attrId::authentication\" attribute_uilabel=\"Authentication\" param_key=\"S4CEBuyer_Receiver_authentication_6\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::server\" attribute_uilabel=\"Address\" param_key=\"SMPT_Server_CPI_Error\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::content_type\" attribute_uilabel=\"Body Mime-Type\" param_key=\"CPI_Error_content_type_8\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::auth\" attribute_uilabel=\"Authentication\" param_key=\"HCP_Integration_Service_Error_auth_5\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::subject\" attribute_uilabel=\"Subject\" param_key=\"Mail_Subject_CPI_Error\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::content_encoding\" attribute_uilabel=\"Body Encoding\" param_key=\"CPI_Error_content_encoding_9\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::keep_attachments\" attribute_uilabel=\"Add Message Attachments\" param_key=\"CPI_Error_keep_attachments_10\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::from\" attribute_uilabel=\"From\" param_key=\"Mail_From_CPI_Error\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::to\" attribute_uilabel=\"To\" param_key=\"Mail_To_CPI_Error\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::body\" attribute_uilabel=\"Mail Body\" param_key=\"Mail_Body_CPI_Error\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::ssl\" attribute_uilabel=\"Protection\" param_key=\"HCP_Integration_Service_Error_ssl_6\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::user\" attribute_uilabel=\"Credential Name\" param_key=\"MailUser_HCI_Error\"/><reference attribute_category=\"CPI_Error\" attribute_id=\"ctype::AdapterVariant/cname::Mail/tp::SMTP/mp::None/direction::Receiver/version::1.0.4/attrId::timeout\" attribute_uilabel=\"Timeout (in ms)\" param_key=\"CPI_Error_timeout_11\"/><reference attribute_category=\"IDoc2SOA_InvoiceCustomMapping_iFlow\" attribute_id=\"ctype::Adapter/cname::ProcessDirect/vendor::SAP/version::1.1.2/attrId::address\" attribute_uilabel=\"Address\" param_key=\"IDoc2SOA_InvoiceCustomMapping_iFlow_address_9\"/><reference attribute_category=\"OPSupplier_Sender.Sender.Auth\" attribute_id=\"/attrId::issuer0\" attribute_uilabel=\"Issuer DN\" param_key=\"OPSupplier_Sender_issuerDN\"/><reference attribute_category=\"OPSupplier_Sender.Sender.Auth\" attribute_id=\"/attrId::subject0\" attribute_uilabel=\"Subject DN\" param_key=\"OPSupplier_Sender_subjectDN\"/><reference attribute_category=\"OPSupplier_Sender.Sender.Auth\" attribute_id=\"/attrId::enableBasicAuthentication\" attribute_uilabel=\"Authentication Mode\" param_key=\"OPSupplier_Sender_enableBasicAuthentication_13\"/></param_references></parameters>",
    "<xiObj xmlns=\"urn:sap-com:xi\"><idInfo VID=\"01\"><vc caption=\"LOCAL\" sp=\"-1\" swcGuid=\"00000000000000000000000000000000\" vcType=\"S\"><clCxt consider=\"A\"/></vc><key typeID=\"XI_TRAFO\" version=\"\"/><version>1.0</version></idInfo><documentation><description>MM_InvoiceRequest_OPSupplier_2_S4CEBuyer</description></documentation><generic><admInf><modifBy></modifBy><modifAt></modifAt><modifAtLong>1701431610877</modifAtLong><owner/></admInf><lnks><lnkRole kpos=\"1\" role=\"TARGET_IFR_MESS\"><lnk rMode=\"R\"><key typeID=\"wsdl\" version=\"1.1\"><elem>INVOICEREQUEST_IN.wsdl</elem><elem>src/main/resources/wsdl</elem><elem>InvoiceRequest</elem><elem>http://sap.com/xi/EDI</elem></key></lnk></lnkRole><lnkRole kpos=\"1\" role=\"SOURCE_IFR_MESS\"><lnk rMode=\"R\"><key typeID=\"wsdl\" version=\"1.1\"><elem>INVOIC.INVOIC02.wsdl</elem><elem>src/main/resources/wsdl</elem><elem>INVOIC02</elem></key></lnk></lnkRole><lnkRole kpos=\"1\" role=\"UsedFuncLib\"><lnk rMode=\"R\"><key typeID=\"gsh\" version=\"1.1\"><elem>UserDefinedFunctions.gsh</elem><elem>src/main/resources/script</elem></key></lnk></lnkRole></lnks><textInfo loadedL=\"EN\"><textObj id=\"ff7cb904dc5c41c5b593004ef2703453\" masterL=\"EN\" type=\"0\"><texts lang=\"EN\"><text label=\"\">MM_InvoiceRequest_OPSupplier_2_S4CEBuyer</text><text label=\"21327ec998d3248b3333da4cbe20b699\"></text></texts></textObj></textInfo></generic><content><tr:XiTrafo xmlns:tr=\"urn:sap-com:xi:mapping:xitrafo\"><tr:MetaData><mappingtool version=\"XI7.1\"><project version=\"XI7.1\"><libstorage><entry name=\"usernamespac...",
    "def Message processData(Message message) {\n\tmap = message.getProperties();\n\tproperty_ENABLE_LOGGING = map.get(\"EnableLogging\");\n\tmessage.setHeader(\"SAP_IsIgnoreProperties\",new Boolean(true));\n\t\n\tif (property_ENABLE_LOGGING.toUpperCase().equals(\"TRUE\")) {\t\n\t\tdef body = message.getBody(java.lang.String) as String;\n\t\tdef messageLog = messageLogFactory.getMessageLog(message);\n\t\tmessageLog.addAttachmentAsString(\"Payload\", body, \"text/plain\");\n\t}\t\n\n\treturn message;\n}",
    "import com.sap.gateway.ip.core.customdev.util.Message;\nimport java.util.HashMap;\n\ndef Message processData(Message message) {\n\tmap = message.getProperties();\n\tproperty_ENABLE_LOGGING = map.get(\"EnableLogging\");\n\tmessage.setHeader(\"SAP_IsIgnoreProperties\",new Boolean(true));\n\t\n\tif (property_ENABLE_LOGGING.toUpperCase().equals(\"TRUE\")) {\t\n\t\tdef body = message.getBody(java.lang.String) as String;\n\t\tdef messageLog = messageLogFactory.getMessageLog(message);\n\t\tmessageLog.addAttachmentAsString(\"Payload\", body, \"text/plain\");\n\t}\t\n\n\treturn message;\n}",
    "def Message processData(Message message) {\n\tmap = message.getProperties();\n\tproperty_ENABLE_LOGGING = map.get(\"EnableLogging\");\n\tmessage.setHeader(\"SAP_IsIgnoreProperties\",new Boolean(true));\n\t\n\tif (property_ENABLE_LOGGING.toUpperCase().equals(\"TRUE\")) {\t\n\t\tdef body = message.getBody(java.lang.String) as String;\n\t\tdef messageLog = messageLogFactory.getMessageLog(message);\n\t\tmessageLog.addAttachmentAsString(\"S4Response\", body, \"text/plain\");\n\t}\t\n\n\treturn message;\n}",
    "import com.sap.gateway.ip.core.customdev.util.Message;\nimport java.util.HashMap;\n\ndef Message processData(Message message) {\n\tmap = message.getProperties();\n\tproperty_ENABLE_LOGGING = map.get(\"EnableLogging\");\n\tmessage.setHeader(\"SAP_IsIgnoreProperties\",new Boolean(true));\n\t\n\tif (property_ENABLE_LOGGING.toUpperCase().equals(\"TRUE\")) {\t\n\t\tdef body = message.getBody(java.lang.String) as String;\n\t\tdef messageLog = messageLogFactory.getMessageLog(message);\n\t\tmessageLog.addAttachmentAsString(\"S4Response\", body, \"text/plain\");\n\t}\t\n\n\treturn message;\n}",
    "void splitText(String[] textLines, int[] chunkSize, Output output){\n\n\tfor(String textLine: textLines){\n       \n        int arraySize = (int) Math.ceil(textLine.length() / chunkSize[0]);\n \n    \tString[] returnArray = new String[arraySize];\n \n    \tint index = 0;\n    \tfor(int i = 0; i < textLine.length(); i = i+chunkSize[0])\n    \t{\n        \tif(textLine.length() - i < chunkSize[0])\n        \t{\n            returnArray[index++] = textLine.substring(i);\n        \t} \n        \telse\n        \t{\n            returnArray[index++] = textLine.substring(i, i+chunkSize[0]);\n        \t}\n    \t}\n\n\n        for(String value: returnArray)\n        {\n        \toutput.addValue(value);\n        }        \n\t} \n}",
    "void existsInArray(String[] inputValues, String[] checkString, Output output){\n\tfor(int i=0;i<inputValues.length;i++){\n\t\tif(inputValues[i].equals(checkString[0]))\n\t\t{\n\t\toutput.addValue(true);\n\t\tbreak;\n\t}       \n} \noutput.addValue(false);\n}",
    "void getArrayValue(String[] inputValues, String[] checkString, String[] outputValue, Output output){\n\tfor(int i=0;i<inputValues.length;i++){\n\t\tif(inputValues[i].equals(checkString[0])){\n\t\toutput.addValue(outputValue[i]);\n\t\treturn;\n\t\t}\n\t}\n}",
    "void stringContains(String[] textLine, String[] checkPattern, Output output){\n\n for(int i=0;i<textLine.length;i++){  \n\tif(textLine[i].contains(checkPattern[0])){\n\t\toutput.addValue(true);\n\t\t} else {       \n\t\toutput.addValue(false);\n\t\t}\n\t}\n}",
    "void checkRelObjType(String[] relobj_type, String[] relobj_objkey, Output output){\n\tfor(int i=0;i<relobj_type.length;i++){\n\t\tif(relobj_type[i].equals(\"CUAN_INTER\")){\n\t\toutput.addValue(relobj_objkey[i]);\n\t\treturn;\n\t\t}\n\t}\n\t\toutput.addValue(\" \");\n}",
    "def String get_property(String prop_name,MappingContext context) {\n\n    def prop = context.getProperty(prop_name);\n    \n    if(prop !=null ){\n\n        return prop;\n\n    }\n\n    return prop_name;\n\n}",
    "def String get_header(String header_name,MappingContext context) {\n\n    def header = context.getHeader(header_name);\n    \n    if(header !=null ){\n\n        return header;\n\n    }\n\n    return header_name;\n\n}",
    "def String generateUUID(String input) {\n\n    String uuid = UUID.randomUUID().toString().replaceAll(\"-\",\"\").toUpperCase();\n\n    return uuid;\n\n}",
    "def String getOffset(String input, int offset) {\n    if(input.equals(\"\"))\n    return input;\n    else\n    def string_offset = input.substring(offset,input.length);\n    return string_offset;\n\n}",
    "void splitStringOnDelimiter(String[] textLines, String[] delimiter, Output output){\n def delimiter_char = delimiter[0];\n        for(String textLine: textLines){\n                String[] values = textLine.split(delimiter_char);\n                for(String value: values){\n        \toutput.addValue(value);\n                }\n        }      \n}",
    "def String DateTime2NewTimeZone(String sdatetime, String stzone, String ttzone) {\n\n\t\n\t//For Timezone given as UTC+/-xx\n\tif( (stzone.length() > 3)  && (stzone.contains(\"-\") || stzone.contains(\"+\") ) )\n\t{\n\t   stzone = \"GMT\" + stzone.substring(3); //GMT + offset as stzone\n\t}\n\t\n\tSimpleDateFormat sourceDateFormatLocal = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n\tsourceDateFormatLocal.setTimeZone(TimeZone.getTimeZone(stzone));\n     \n\tDate date = sourceDateFormatLocal.parse(sdatetime);\n    \n\tCalendar targetCalendar = Calendar.getInstance(TimeZone.getTimeZone(ttzone));\n\ttargetCalendar.setTimeInMillis(date.getTime());    \n\n\tSimpleDateFormat targetDateFormatLocal = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n\ttargetDateFormatLocal.setTimeZone(targetCalendar.getTimeZone());\n    \n\treturn targetDateFormatLocal.format(date.getTime());\n}",
    "public void splitText(String[] textLines, int[] chunkSize, Output output){\n\tfor(String textLine: textLines){\n        int arraySize = (int) Math.ceil(textLine.length() / chunkSize[0]);\n    \tString[] returnArray = new String[arraySize];\n    \tint index = 0;\n    \tfor(int i = 0; i < textLine.length(); i = i+chunkSize[0])\n    \t{\n        \tif(textLine.length() - i < chunkSize[0])\n        \t{\n            returnArray[index++] = textLine.substring(i);\n        \t} \n        \telse\n        \t{\n            returnArray[index++] = textLine.substring(i, i+chunkSize[0]);\n        \t}\n    \t}\n        for(String value: returnArray)\n        {\n        \toutput.addValue(value);\n        }        \n\t} \n}\npublic void existsInArray(String[] inputValues, String[] checkString, Output output){\n\tfor(int i=0;i<inputValues.length;i++){\n\t\tif(inputValues[i].equals(checkString[0]))\n\t\t{\n\t\toutput.addValue(true);\n\t\tbreak;\n\t}       \n} \noutput.addValue(false);\n}\npublic void getArrayValue(String[] inputValues, String[] checkString, String[] outputValue, Output output){\n\tfor(int i=0;i<inputValues.length;i++){\n\t\tif(inputValues[i].equals(checkString[0])){\n\t\toutput.addValue(outputValue[i]);\n\t\treturn;\n\t\t}\n\t}\n}\npublic void stringContains(String[] textLine, String[] checkPattern, Output output){\n for(int i=0;i<textLine.length;i++){  \n\tif(textLine[i].contains(checkPattern[0])){\n\t\toutput.addValue(true);\n\t\t} else {       \n\t\toutput.addValue(false);\n\t\t}\n\t}\n}\npublic void checkRelObjType(String[] relobj_type, String[] relobj_objkey, Output output){\n\tfor(int i=0;i<relobj_type.length;i++){\n\t\tif(relobj_type[i].equals(\"CUAN_INTER\")){\n\t\toutput.addValue(relobj_objkey[i]);\n\t\treturn;\n\t\t}\n\t}\n\t\toutput.addValue(\" \");\n}\npublic void splitStringOnDelimiter(String[] textLines, String[] delimiter, Output output){\n def delimiter_char = delimiter[0];\n        for(String textLine: textLines){\n                String[] values = textLine.split(delimiter_char);\n                for(String value: values){\n        \toutput.addValue(value);\n                }\n        }      \n}",
    "import java.util.*;\nimport java.text.*;\nimport com.sap.it.api.mapping.*;\nimport com.sap.it.api.mapping.MappingContext;\nimport com.sap.gateway.ip.core.customdev.util.Message;\n\n\n//This method splits a string based on character length, expects two input parameters: Source field which needs to be split(textLines) \n//and number of characters after which it has to be split(chunkSize)\n\npublic void splitText(String[] textLines, int[] chunkSize, Output output){\n\n\tfor(String textLine: textLines){\n       \n        int arraySize = (int) Math.ceil(textLine.length() / chunkSize[0]);\n \n    \tString[] returnArray = new String[arraySize];\n \n    \tint index = 0;\n    \tfor(int i = 0; i < textLine.length(); i = i+chunkSize[0])\n    \t{\n        \tif(textLine.length() - i < chunkSize[0])\n        \t{\n            returnArray[index++] = textLine.substring(i);\n        \t} \n        \telse\n        \t{\n            returnArray[index++] = textLine.substring(i, i+chunkSize[0]);\n        \t}\n    \t}\n\n\n        for(String value: retu...",
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<wsdl:definitions xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns=\"\" name=\"INVOIC.INVOIC02\" targetNamespace=\"urn:sap-com:document:sap:idoc:messages\">\n\t<wsdl:types>\n\t\t<xsd:schema version=\"1.0\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n\t\t\t<xsd:element name=\"INVOIC02\">\n\t\t\t\t<xsd:annotation>\n\t\t\t\t\t<xsd:documentation>Invoice/Billing document</xsd:documentation>\n\t\t\t\t</xsd:annotation>\n\t\t\t\t<xsd:complexType>\n\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t<xsd:element name=\"IDOC\">\n\t\t\t\t\t\t\t<xsd:complexType>\n\t\t\t\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t\t\t\t<xsd:element name=\"EDI_DC40\">\n\t\t\t\t\t\t\t\t\t\t<xsd:annotation>\n\t\t\t\t\t\t\t\t\t\t\t<xsd:documentation>IDoc control record for the interface to the external system</xsd:documentation>\n\t\t\t\t\t\t\t\t\t\t</xsd:annotation>\n\t\t\t\t\t\t\t\t\t\t<xsd:complexType>\n\t\t\t\t\t\t\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsd:element name=\"TABNAM\" type=\"xsd:string\" fixed=\"EDI_DC40\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:annotation>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:documentation>Name of Table Structure</xsd:documentation>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</xsd:annotation>\n\t\t\t\t\t\t\t\t\t\t\t\t</xsd:element>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsd:element name=\"MANDT\" minOccurs=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:annotation>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:documentation>Client</xsd:documentation>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</xsd:annotation>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:simpleType>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:restriction base=\"xsd:string\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<xsd:maxLength value=\"3\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</xsd:restriction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</xsd:simpleType>\n\t\t\t\t\t\t\t\t\t\t\t\t</xsd:element>\n\t\t\t\t\t\t\t\t\t\t\t\t<xsd:element name=\"DOCNUM\" minOccurs=\"0\">\n\t\t\t\t\t\t\t\t\t\t\t\t...",
    "<wsdl:service name=\"service\">\n<wsdl:port binding=\"tns:binding\" name=\"binding\">\n<soap:address location=\"https://host:port/sap/bc/srt/scs_ext/sap/invoicerequest_in\"/>\n</wsdl:port>\n<wsdl:port binding=\"tns:binding_soap12\" name=\"binding_soap12\">\n<wsoap12:address location=\"https://host:port/sap/bc/srt/scs_ext/sap/invoicerequest_in\"/>\n</wsdl:port>\n</wsdl:service>",
    "<wsdl:portType name=\"InvoiceRequest_In\">\n<wsdl:documentation>\n<sapdoc:sapdoc xmlns:sapdoc=\"urn:sap:esi:documentation\">\n<sapdoc:docitem applicationComponent=\"MM-IV-GF-ES\"/>\n</sapdoc:sapdoc>\n</wsdl:documentation>\n<wsp:Policy>\n<wsp:PolicyReference URI=\"#IF__InvoiceRequest_In\"/>\n</wsp:Policy>\n<wsdl:operation name=\"InvoiceRequest_In\">\n<wsp:Policy>\n<wsp:PolicyReference URI=\"#OP__InvoiceRequest_In\"/>\n</wsp:Policy>\n<wsdl:input message=\"tns:InvoiceRequest\"/>\n</wsdl:operation>\n</wsdl:portType>",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<wsdl:definitions targetNamespace=\"http://sap.com/xi/EDI/Buyer\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:wsoap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns=\"http://sap.com/xi/EDI/Buyer\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\" xmlns:n1=\"http://sap.com/xi/EDI\" xmlns:n2=\"http://sap.com/xi/SAPGlobal/Global\" xmlns:n3=\"http://sap.com/xi/EDI/Global2\">\n <wsdl:documentation>\n  <sidl:sidl xmlns:sidl=\"http://www.sap.com/2007/03/sidl\"/>\n </wsdl:documentation>\n <wsp:UsingPolicy wsdl:required=\"true\"/>\n <wsp:Policy wsu:Id=\"BN__binding\">\n  <wsp:ExactlyOne>\n   <wsp:All>\n    <saptrnbnd:OptimizedMimeSerialization xmlns:saptrnbnd=\"http://schemas.xmlsoap.org/ws/2004/09/policy/optimizedmimeserialization\" wsp:Optional=\"true\"/>\n    <wsrmp:RMAssertion xmlns:wsrmp=\"http://docs.oasis-open.org/ws-rx/wsrmp/200702\">\n     <wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"/>\n    </wsrmp:RMAssertion>\n    <wsaw:UsingAddressing xmlns:wsaw=\"http://www.w3.org/2006/05/addressing/wsdl\"/>\n    <wsp:All xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\">\n     <sp:TransportBinding xmlns:sp=\"http://docs.oasis-open.org/ws-sx/ws-securi...",
    "<bpmn2:process xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"Process_1\" name=\"Integration Process\">\n        <bpmn2:extensionElements>\n            <ifl:property>\n                <key>transactionTimeout</key>\n                <value>30</value>\n            </ifl:property>\n            <ifl:property>\n                <key>componentVersion</key>\n                <value>1.2</value>\n            </ifl:property>\n            <ifl:property>\n                <key>cmdVariantUri</key>\n                <value>ctype::FlowElementVariant/cname::IntegrationProcess/version::1.2.1</value>\n            </ifl:property>\n            <ifl:property>\n                <key>transactionalHandling</key>\n                <value>Not Required</value>\n            </ifl:property>\n        </bpmn2:extensionElements>\n        <bpmn2:startEvent id=\"StartEvent_2\" name=\"Start\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageStartEvent/version::1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:outgoing>SequenceFlow_3</bpmn2:outgoing>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:startEvent>\n        <bpmn2:endEvent id=\"EndEvent_2\" name=\"End\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageEndEvent/version::1.1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_5</bpmn2:incoming>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:endEvent>\n        <bpmn2:callActivity id=\"CallActivity_8\" name=\"Set Monitoring ID\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>bodyType</key>\n                    <value>expression</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>propertyTable</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>headerTable</key>\n                    <value>&lt;row&gt;&lt;cell id='Action'&gt;Create&lt;/cell&gt;&lt;cell id='Type'&gt;header&lt;/cell&gt;&lt;cell id='Value'&gt;SapMessageId&lt;/cell&gt;&lt;cell id='Default'&gt;&lt;/cell&gt;&lt;cell id='Name'&gt;SAP_ApplicationID&lt;/cell&gt;&lt;cell id='Datatype'&gt;&lt;/cell&gt;&lt;/row&gt;</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>wrapContent</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.5</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Enricher</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::Enricher/version::1.5.1</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_3</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_9</bpmn2:outgoing>\n        </bpmn2:callActivity>\n        <bpmn2:callActivity id=\"CallActivity_4\" name=\"S4_CNS_BusinessPartnerRelationshipSUITEBulkConfirmation\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>mappinguri</key>\n                    <value>dir://mmap/src/main/resources/mapping/S4_CSN_BusinessPartnerRelationshipConfirmation.mmap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingname</key>\n                    <value>S4_CSN_BusinessPartnerRelationshipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingType</key>\n                    <value>MessageMapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingpath</key>\n                    <value>src/main/resources/mapping/S4_CSN_BusinessPartnerRelationshipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.2</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Mapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageMapping/version::1.2.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>messageMappingBundleId</key>\n                    <value />\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_9</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_5</bpmn2:outgoing>\n        </bpmn2:callActivity>\n        <bpmn2:sequenceFlow id=\"SequenceFlow_3\" sourceRef=\"StartEvent_2\" targetRef=\"CallActivity_8\" />\n        <bpmn2:sequenceFlow id=\"SequenceFlow_9\" sourceRef=\"CallActivity_8\" targetRef=\"CallActivity_4\" />\n        <bpmn2:sequenceFlow id=\"SequenceFlow_5\" sourceRef=\"CallActivity_4\" targetRef=\"EndEvent_2\" />\n    </bpmn2:process>",
    "<bpmn2:callActivity xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"CallActivity_8\" name=\"Set Monitoring ID\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>bodyType</key>\n                    <value>expression</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>propertyTable</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>headerTable</key>\n                    <value>&lt;row&gt;&lt;cell id='Action'&gt;Create&lt;/cell&gt;&lt;cell id='Type'&gt;header&lt;/cell&gt;&lt;cell id='Value'&gt;SapMessageId&lt;/cell&gt;&lt;cell id='Default'&gt;&lt;/cell&gt;&lt;cell id='Name'&gt;SAP_ApplicationID&lt;/cell&gt;&lt;cell id='Datatype'&gt;&lt;/cell&gt;&lt;/row&gt;</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>wrapContent</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.5</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Enricher</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::Enricher/version::1.5.1</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_3</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_9</bpmn2:outgoing>\n        </bpmn2:callActivity>",
    "<bpmn2:callActivity xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"CallActivity_4\" name=\"S4_CNS_BusinessPartnerRelationshipSUITEBulkConfirmation\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>mappinguri</key>\n                    <value>dir://mmap/src/main/resources/mapping/S4_CSN_BusinessPartnerRelationshipConfirmation.mmap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingname</key>\n                    <value>S4_CSN_BusinessPartnerRelationshipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingType</key>\n                    <value>MessageMapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingpath</key>\n                    <value>src/main/resources/mapping/S4_CSN_BusinessPartnerRelationshipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.2</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Mapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageMapping/version::1.2.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>messageMappingBundleId</key>\n                    <value />\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_9</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_5</bpmn2:outgoing>\n        </bpmn2:callActivity>",
    "<bpmn2:messageFlow xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"MessageFlow_6\" name=\"SOAP\" sourceRef=\"Participant_1\" targetRef=\"StartEvent_2\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>ComponentType</key>\n                    <value>SOAP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Description</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>address</key>\n                    <value>{{Sender_Address}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>maximumBodySize</key>\n                    <value>40</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentNS</key>\n                    <value>sap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>maximumAttachmentSize</key>\n                    <value>100</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.4</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Name</key>\n                    <value>SOAP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocolVersion</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVName</key>\n                    <value>external</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>system</key>\n                    <value>S4</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocol</key>\n                    <value>HTTP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::AdapterVariant/cname::sap:SOAP/tp::HTTP/mp::Plain SOAP/direction::Sender/version::1.4.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>userRole</key>\n                    <value>{{Sender_Role}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>wsdlURL</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>senderAuthType</key>\n                    <value>{{Sender_Auth}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocol</key>\n                    <value>Plain SOAP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocolVersion</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVId</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>direction</key>\n                    <value>Sender</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>clientCertificates</key>\n                    <value>&lt;row&gt;&lt;cell id='clientCertificate.subjectDN'&gt;{{subject}}&lt;/cell&gt;&lt;cell id='clientCertificate.issuerDN'&gt;{{issuer}}&lt;/cell&gt;&lt;/row&gt;</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:messageFlow>",
    "<bpmn2:messageFlow xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"MessageFlow_7\" name=\"HTTP\" sourceRef=\"EndEvent_2\" targetRef=\"Participant_2\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>Description</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>methodSourceExpression</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentNS</key>\n                    <value>sap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>privateKeyAlias</key>\n                    <value>{{PrivateKeyAlias}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>httpMethod</key>\n                    <value>POST</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>allowedResponseHeaders</key>\n                    <value>*</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Name</key>\n                    <value>HTTP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocolVersion</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVName</key>\n                    <value>external</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>proxyPort</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>httpAddressQuery</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>httpRequestTimeout</key>\n                    <value>{{Timeout}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocol</key>\n                    <value>None</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVId</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>allowedRequestHeaders</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>direction</key>\n                    <value>Receiver</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentType</key>\n                    <value>HTTP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>httpShouldSendBody</key>\n                    <value>false</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>throwExceptionOnFailure</key>\n                    <value>true</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>proxyType</key>\n                    <value>default</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.10</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>proxyHost</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>system</key>\n                    <value>CNS</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>authenticationMethod</key>\n                    <value>{{CNS_Authentication}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>locationID</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocol</key>\n                    <value>HTTP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::AdapterVariant/cname::sap:HTTP/tp::HTTP/mp::None/direction::Receiver/version::1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>credentialName</key>\n                    <value>{{CNS_Credential}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocolVersion</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>httpAddressWithoutQuery</key>\n                    <value>https://{{CNS-Host}}/sap/c4c/api/v1/inbound-data-connector-service/messages/sap.crm.md.integrationmetadataservice.entity.businessPartnerRelationshipS4ConfirmationMessageIn</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:messageFlow>",
    "<bpmn2:participant xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"Participant_1\" ifl:type=\"EndpointSender\" name=\"S4\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>enableBasicAuthentication</key>\n                    <value>false</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ifl:type</key>\n                    <value>EndpointSender</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:participant>",
    "<bpmn2:participant xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"Participant_2\" ifl:type=\"EndpointRecevier\" name=\"CNS\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>ifl:type</key>\n                    <value>EndpointRecevier</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:participant>",
    "<bpmn2:startEvent xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"StartEvent_2\" name=\"Start\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageStartEvent/version::1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:outgoing>SequenceFlow_3</bpmn2:outgoing>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:startEvent>",
    "<bpmn2:endEvent xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"EndEvent_2\" name=\"End\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageEndEvent/version::1.1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_5</bpmn2:incoming>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:endEvent>",
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?><projectDescription>\n <name>com.sap.s4c2cns.businesspartnerrelationship.confirmation</name>\n <comment/>\n <projects/>\n <buildSpec>\n  <buildCommand>\n   <name>org.eclipse.jdt.core.javabuilder</name>\n   <arguments/>\n  </buildCommand>\n </buildSpec>\n <natures>\n  <nature>org.eclipse.jdt.core.javanature</nature>\n  <nature>com.sap.ide.ifl.project.support.project.nature</nature>\n  <nature>com.sap.ide.ifl.bsn</nature>\n </natures>\n</projectDescription>",
    "«7U~¯âË_»êslü¨ÔJdÊ\b\u0017W¸´\u00119ý\u0018Ì\u0016°{0{Æ\u0011Ä\u0013)±\u001bSý$ÃJ\u0017´4\u0019ÂÓþ[À\u0002dq\u001fuzS}Ée¨v·5j¯\u0010_óÓR\u000exaÝo&GêZL u\n\f\u0018lxd¶JÝ¼Vü\u001dìâf¼Ø¡3OaÏ´o¨@Ð\u0000¢Òzü48ØØwh\u0006\bHÌ\u0015$KöÐhúµAä\u0000à_~rÑ®\nLjt+ÿ\u0001lÆ\u0019\u0014´\ncï \u000f\u0019æ/)|`\u001d?ÑC[Òwäé0ÜGõäí\u0018#iköê7Q§S®øg\u0013Ã\u000bßôßu\u0011UºÃ{T£qÅÜ~N÷ÙùMyñ\u0004}­D[¨Ïo©,é/f°ó\u0004ç%\nÚ9\u0002³Y\u001b*Ý@xÃFãXÂvyÈw¥|?)öW8m\u001bôåì\u000blÁjCÊ#Z¢\u000e\u001e»÷²X?äüýÀ\u001c«ãR¸\u0014~¶ó77°Ï`2ì\u000fSP»<º¾\u0003#H(É]\náå­£×¹\"\u0010Ã ¬èoZÑ¦/\u0006ÙÆ \u0019\u0007ë\u0011@KÉ\u0018z\u0007\n¿÷Ök.ª\u001bß\\!½ø3ËéÛ\u0002<\n@¥tô×\u0012xÕÞÌ®Ü¥Ï²\u0001ÕÎxÐýS936\u0010ê\nnÓ{´E)ü«\u0004rW\u0016Wáà\u0016\u0003dhÈFïQ\u0006ò\u0000fÍ9NK\u0019ß\u0014\u001b8:",
    "description=This integration flow confirms Business Partner Relationship Replication from SAP S/4HANA Public Cloud to SAP Sales Cloud and SAP Service Cloud Version 2\nSAP-MarkedSAP2SAP=SAP_TO_SAP_INTEGRATION\nsource=SAPS4HANACloud\ntarget=SAPSalesCloudandSAPServiceCloudVersion2",
    "#Store metainfo properties\n#Tue Jul 22 15:44:08 UTC 2025\ndescription=This integration flow confirms Business Partner Relationship Replication from SAP S/4HANA Public Cloud to SAP Sales Cloud and SAP Service Cloud Version 2\nSAP-MarkedSAP2SAP=SAP_TO_SAP_INTEGRATION\nsource=SAPS4HANACloud\ntarget=SAPSalesCloudandSAPServiceCloudVersion2",
    "0\u0007Z0\u0005B \u0003\u0002\u0001\u0002\u0002\u0010\n¢¬ð\u0013á\u0007þ\u0003ª\"\"óî0\n\u0006\t*H÷\n\u0001\u0001\u000b\u0005\u00000i1\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002US1\u00170\u0015\u0006\u0003U\u0004\n\u0013\u000eDigiCert, Inc.1A0?\u0006\u0003U\u0004\u0003\u00138DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA10\u001e\u0017\n220217000000Z\u0017\n230217235959Z0_1\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002DE1\u001b0\u0019\u0006\u0003U\u0004\b\f\u0012Baden-WÃ¼rttemberg1\u00110\u000f\u0006\u0003U\u0004\u0007\u0013\bWalldorf1\u000f0\n\u0006\u0003U\u0004\n\u0013\u0006SAP SE1\u000f0\n\u0006\u0003U\u0004\u0003\u0013\u0006SAP SE0\u0002\"0\n\u0006\t*H÷\n\u0001\u0001\u0001\u0005\u0000\u0003\u0002\u000f\u00000\u0002\n\u0002\u0002\u0001\u0000²HY÷«¯HªBÚN\u0003ÿ¼;]|¹o)Þqã\u0016\u000eE¬9·1wÿM\u0010ë\"!E\u0017Âd©ó²VHR2B7]ÏSTí\u001c\u0002£°L®\u0003|Îz\u0010Bï:í#lø !G£I²\u0002¿óv\u001aÃk\u001a³Ý0²9o*É-ËB+Ã¶ÉÍë<ÍÙfÌÄÌÈA¾ý¬97·ÆÂ¢ðø=6n\u0004ÚmòämD@$\u000b«Æ.+\n¤\u0016\u0012¦ r'îWCôh\u000eõ¿\fªdói¶<Û*\u001dÎ#$¼)ðããÄ!©\u0013\u0011àñRØ#¿ùk-\u000eûÛ'ù\u001emtv@\u0014TcLÍ¡®¦¯\u001fQt#Cê\u0003¹\u000f6÷aýw»5f×Î©mb¹ÏMLÆs\f4ÇÑ2M$µu6ïbR\u0013RÑ/§W[©\"TïYÖ'v*æbê`÷Í)\nq\u0005&8á¿ãþu\u001b\bÒÏr´=RE¹De¶>æ\u000fH­¾9r0\u0019s\u0011Ó3\u0018ÏXgdàæ²\u0002Uùôìô<)D\b§\u0004~Ó1¸-«`õ\\Ûè\u000fÆ~¤Wu\u0018â#Ó\u0018ÝÅlgOØLÏ-X:%â+\u001d´jýtÉ\u001f/uñ¨u®\nP§VQÂ<ÏÙ}ö\u000f¤ýÈ§±Ù³ºÞÅ²Kl5}GÊòPU +øAÞ\u000bê§ÿ¹\u0007MWVXÿk]Ìï¡\u0018Å§kÐ©\u0002\u0003\u0001\u0000\u0001£\u0002\u00060\u0002\u00020\u001f\u0006\u0003U\u001d#\u0004\u00180\u0016\u0014h7àë¶;ø_\u0011ûþa{\beôNB0\u001d\u0006\u0003U\u001d\u000e\u0004\u0016\u0004\u0014ÛÐ\u0002=jbsµÞÚÌ\u0004¨vb0\u000e\u0006\u0003U\u001d\u000f\u0001\u0001ÿ\u0004\u0004\u0003\u0002\u00070\u0013\u0006\u0003U\u001d%\u0004\f0\n\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0003\u00030µ\u0006\u0003U\u001d\u001f\u0004­0ª0S Q OMhttp://crl3.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0S Q OMhttp://crl4.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0>\u0006\u0003U\u001d \u000470503\u0006\u0006g\f\u0001\u0004\u00010)0'\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0002\u0001\u0016\u001bhttp://www.digicert.com/CPS0\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0001\u0001\u000400$\u0006\b+\u0006\u0001\u0005\u0005\u00070\u0001\u0018http://ocsp.digicert.com0\\\u0006\b+\u0006\u0001\u0005\u0005\u00070\u0002Phttp://cacerts.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt0\f\u0006\u0003U\u001d\u0013\u0001\u0001ÿ\u0004\u00020\u00000\n\u0006\t*H÷\n\u0001\u0001\u000b\u0005\u0000\u0003\u0002\u0001\u0000é²º×óÙ7ËÇ½§³Ê\u0007¾àé:F\\\u0014h%`ËyîÍAAM9\u0017¼2\u0003\u000f ±kÂx\u0005U!:{\u0018Ú@1¸+¨·\u00078\u0000ä1Ï}~Þ e\u0019éÈ©\bó\u001c\\è\u0018hÃò7¡BM\nÍa7a\u0014á®Q%g v,'Òð×û¹ÑÂ4 Ã¹À}é*s\u0019Xûþõ0±\u000b\u000e6m\tÆQñ¿õá9ph\f²ÖrqôÂÛÇ\u000fÙBÃ.\u0010\u0012¯Ç<¯sj²\u0000\u0006í)½÷\u001aõË÷ÕÞ:åÿò{\u001dð°yÏ5R\u000bãCûÁ\u001d@«]üý\u001bÚ¨7wK¯T°\\Ýñ\u001e\nJàêekÖÄæ\u001aåµÍF\u0002\u0017Cèô§²\u0007lÓÎÈ\u0017\u001b`âÄ¯ÆóøÉ\u0017G\u0010Ý\u001c=6=n\u0005äöüí\u0014Ái¥;V?´þ!!póüªÄ\u0011Y\u0017à,Û7\u001f±§ ÊÒÑlÛ-Ôeö(t9löÙìqfTCÖã}èÌûL«v²7[\u0017]À6q§P1g[zËZÛ+c\u0010í\u000fó\t¼½\u001fÒY¸\u001f©h\u001ckgmàó ³\u0002\u000ef\u001dÚéo\u0005º\u0007½ÎxN\n¿ ½Í\u0010æùë¯ãÚÕêÝÑ¼d{»-?w\u0003ÀÜ®`S\u000bàTºÍ¿ÈÚ%H\u000bx°\u0019Ú¬'ôËJ7'Îác\u0006ûõ(²\u001b³UT­û¬\u001b\u001f\u000bÁ\u000eâ\u000e]¿?}O\u0001B=",
    "PrivateKeyAlias=\nTimeout=60000\nsubject=cn\\=subject\nCNS-Host=*.cxm-salescloud.com\nissuer=cn\\=issuer",
    "Sender_Auth=RoleBased\nSender_Role=ESBMessaging.send\nSender_Address=/S4/CNS/BusinessPartnerRelationshipSUITEBulkConfirmation_Out",
    "CNS_Authentication=Client Certificate\nCNS_Credential=",
    "#Wed Aug 28 15:30:07 UTC 2024\nPrivateKeyAlias=\nTimeout=60000\nSender_Auth=RoleBased\nsubject=cn\\=subject\nCNS_Authentication=Client Certificate\nCNS_Credential=\nSender_Role=ESBMessaging.send\nSender_Address=/S4/CNS/BusinessPartnerRelationshipSUITEBulkConfirmation_Out\nCNS-Host=*.cxm-salescloud.com\nissuer=cn\\=issuer",
    "<parameter>\n<key/>\n<name>PrivateKeyAlias</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Timeout</name>\n<type>xsd:integer</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Sender_Auth</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata>\n<isCombobox>true</isCombobox>\n</additionalMetadata>\n</parameter>",
    "<parameter>\n<key/>\n<name>subject</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>CNS_Authentication</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata>\n<isCombobox>true</isCombobox>\n</additionalMetadata>\n</parameter>",
    "<parameter>\n<key/>\n<name>CNS_Credential</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Sender_Role</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Sender_Address</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>CNS-Host</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>issuer</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><parameters><parameter>\n    <key/>\n    <name>PrivateKeyAlias</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Timeout</name>\n    <type>xsd:integer</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Sender_Auth</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata>\n      <isCombobox>true</isCombobox>\n    </additionalMetadata>\n  </parameter><parameter>\n    <key/>\n    <name>subject</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>CNS_Authentication</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata>\n      <isCombobox>true</isCombobox>\n    </additionalMetadata>\n  </parameter><parameter>\n    <key/>\n    <name>CNS_Credential</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Sender_Role</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Sender_Address</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>CNS-Host</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>issuer</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><param_references><reference attribute_category=\"S4.Receiver.System\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.4.3/attrId::address\" attribute_uilabel=\"Address\" param_key=\"Sender_Address\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.4.3/attrId::userRole\" attribute_uilabel=\"\" param_key=\"Sender_Role\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.4.3/attrId::senderAuthType\" attribute_uilabel=\"\" param_key=\"Sender_Auth\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.4.3/attrId::clientCertificates\" attribute_uilabel=\"subject\" param_key=\"subject\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.4.3/attrId::clientCertificates\" attribute_uilabel=\"issuer\" param_key=\"issuer\"/><reference attribute_category=\"CNS.Receiver.Auth\" attribute_id=\"ctype::AdapterVariant/cname::HTTP/tp::HTTP/mp::None/direction::Receiver/version::1.10.0/attrId::authenticationMethod\" attribute_uilabel=\"Authentication\" param_key=\"CNS_Authentication\"/><reference attribute_category=\"CNS.Receiver.Auth\" attribute_id=\"ctype::AdapterVariant/cname::HTTP/tp::HTTP/mp::None/direction::Receiver/version::1.10.0/attrId::privateKeyAlias\" attribute_uilabel=\"Private Key Alias\" param_key=\"PrivateKeyAlias\"/><reference attribute_category=\"CNS.Receiver.Auth\" attribute_id=\"ctype::AdapterVariant/cname::HTTP/tp::HTTP/mp::None/direction::Receiver/version::1.10.0/attrId::credentialName\" attribute_uilabel=\"Credential Name\" param_key=\"CNS_Credential\"/><reference attribute_category=\"CNS\" attribute_id=\"ctype::AdapterVariant/cname::HTTP/tp::HTTP/mp::None/direction::Receiver/version::1.10.0/attrId::httpRequestTimeout\" attribute_uilabel=\"Timeout (in ms)\" param_key=\"Timeout\"/><reference attribute_category=\"CNS\" attribute_id=\"ctype::AdapterVariant/cname::HTTP/tp::HTTP/mp::None/direction::Receiver/version::1.10.0/attrId::httpAddressWithoutQuery\" attribute_uilabel=\"Address\" param_key=\"CNS-Host\"/></param_references></parameters>",
    "{\"openapi\":\"3.0.3\",\"info\":{\"title\":\"Open Api Specification for SAP CRM\",\"version\":\"0.1\"},\"paths\":{\"/sap/c4c/api/v1/inbound-data-connector-service/messages/sap.crm.md.integrationmetadataservice.entity.businessPartnerRelationshipS4ConfirmationIn\":{\"parameters\":[{\"name\":\"x-sap-crm-token\",\"in\":\"header\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"post\":{\"operationId\":\"createmd.integrationmetadataservice_businessPartnerRelationshipS4ConfirmationIn\",\"tags\":[\"/sap/c4c/api/v1/inbound-data-connector-service/messages/sap.crm.md.integrationmetadataservice.entity.businessPartnerRelationshipS4ConfirmationIn\"],\"parameters\":[],\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"title\":\"businessPartnerRelationshipS4ConfirmationMessageIn_createrequest\",\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"senderCommunicationSystemDisplayId\":{\"type\":\"string\"},\"receiverCommunicationSystemDisplayId\":{\"type\":\"string\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"}}},\"messageRequests\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"messageEntityName\":{\"type\":\"string\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"},\"actionCode\":{\"type\":\"string\"},\"referenceMessageRequestId\":{\"type\":\"string\"}}},\"body\":{\"type\":\"object\",\"properties\":{\"firstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"firstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverFirstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverFirstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"secondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"secondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverSecondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverSecondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"relationshipRole\":{\"type\":\"string\"},\"contactPerson\":{\"type\":\"object\",\"properties\":{\"customerContactPerson\":{\"type\":\"object\",\"properties\":{\"displayId\":{\"type\":\"string\"}}}}},\"logs\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"severity\":{\"type\":\"string\"},\"note\":{\"type\":\"string\"}}}}}}}}}}}}}},\"responses\":{\"201\":{\"description\":\"201 CREATED\",\"content\":{\"application/json\":{\"schema\":{\"title\":\"businessPartnerRelationshipS4ConfirmationMessageIn_postresponse\",\"type\":\"object\",\"properties\":{\"value\":{\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"senderCommunicationSystemDisplayId\":{\"type\":\"string\"},\"receiverCommunicationSystemDisplayId\":{\"type\":\"string\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"}}},\"messageRequests\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"messageEntityName\":{\"type\":\"string\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"},\"actionCode\":{\"type\":\"string\"},\"referenceMessageRequestId\":{\"type\":\"string\"}}},\"body\":{\"type\":\"object\",\"properties\":{\"firstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"firstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverFirstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverFirstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"secondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"secondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverSecondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverSecondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"relationshipRole\":{\"type\":\"string\"},\"contactPerson\":{\"type\":\"object\",\"properties\":{\"customerContactPerson\":{\"type\":\"object\",\"properties\":{\"displayId\":{\"type\":\"string\"}}}}},\"logs\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"severity\":{\"type\":\"string\"},\"note\":{\"type\":\"string\"}}}}}}}}}}},\"info\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"details\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"},\"code\":{\"type\":\"string\"}}}},\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}}}}}},\"400\":{\"description\":\"400 BAD_REQUEST\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"error\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"details\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"code\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}},\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}}}}}},\"401\":{\"description\":\"401 UNAUTHORIZED\"},\"403\":{\"description\":\"403 FORBIDDEN\"},\"404\":{\"description\":\"404 NOT_FOUND\"},\"500\":{\"description\":\"500 INTERNAL_SERVER_ERROR\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"error\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"details\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"code\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}},\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}}}}}}}}}}}",
    "<xiObj xmlns=\"urn:sap-com:xi\"><idInfo VID=\"01\"><vc caption=\"LOCAL\" sp=\"-1\" swcGuid=\"00000000000000000000000000000000\" vcType=\"S\"><clCxt consider=\"A\"/></vc><key typeID=\"XI_TRAFO\" version=\"\"/><version>1.0</version></idInfo><documentation><description/></documentation><generic><admInf><modifBy/><modifAt/><modifAtLong>1656339229006</modifAtLong><owner/></admInf><lnks><lnkRole kpos=\"1\" role=\"TARGET_IFR_MESS\"><lnk rMode=\"R\"><key typeID=\"json\" version=\"1.1\"><elem>businessPartnerRelationshipS4ConfirmationIn.json</elem><elem>src/main/resources/json</elem><elem>/sap/c4c/api/v1/inbound-data-connector-service/messages/sap.crm.md.integrationmetadataservice.entity.businessPartnerRelationshipS4ConfirmationIn__$delim$__POST__$delim$__Request</elem><elem/></key></lnk></lnkRole><lnkRole kpos=\"1\" role=\"SOURCE_IFR_MESS\"><lnk rMode=\"R\"><key typeID=\"wsdl\" version=\"1.1\"><elem>BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out.WSDL</elem><elem>src/main/resources/wsdl</elem><elem>BusinessPartnerRelationshipSUITEBulkReplicateConfirmation</elem><elem>http://sap.com/xi/SAPGlobal20/Global</elem></key></lnk></lnkRole><lnkRole kpos=\"1\" role=\"UsedFuncLib\"><lnk rMode=\"R\"><key typeID=\"gsh\" version=\"1.1\"><elem>MappingFunctionLibrary.groovy</elem><elem>src/main/resources/script</elem></key></lnk></lnkRole></lnks><textInfo loadedL=\"EN\"><textObj id=\"128e20961c6e446d921e44829988ec40\" masterL=\"EN\" type=\"0\"><texts lang=\"EN\"><text label=\"\"/><text label=\"21327ec998d3248b3333da4cbe20b699\"/></texts></textObj>...",
    "def String getMessageId(String p1, MappingContext context){\n    String messageId = context.getHeader(\"SapMessageIdEx\")\n    return messageId\n}",
    "import com.sap.it.api.mapping.*;\n\ndef String getMessageId(String p1, MappingContext context){\n    String messageId = context.getHeader(\"SapMessageIdEx\")\n    return messageId\n}",
    "<wsdl:portType name=\"BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out\">\n<wsdl:documentation>\n<sapdoc:sapdoc xmlns:sapdoc=\"urn:sap:esi:documentation\">\n<sapdoc:docitem applicationComponent=\"CA-MDG-APP-BP\"/>\n</sapdoc:sapdoc>\n</wsdl:documentation>\n<wsp:Policy>\n<wsp:PolicyReference URI=\"#IF_IF_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out\"/>\n</wsp:Policy>\n<wsdl:operation name=\"BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out\">\n<wsp:Policy>\n<wsp:PolicyReference URI=\"#OP_IF_OP_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out\"/>\n</wsp:Policy>\n<wsdl:input message=\"tns:BusinessPartnerRelationshipSUITEBulkReplicateConfirmation\"/>\n</wsdl:operation>\n</wsdl:portType>",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<wsdl:definitions targetNamespace=\"http://sap.com/xi/SAP_BS_FND/MDG/Global2\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:wsoap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns=\"http://sap.com/xi/SAP_BS_FND/MDG/Global2\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\" xmlns:n1=\"http://sap.com/xi/SAPGlobal20/Global\">\n <wsdl:documentation>\n  <sidl:sidl xmlns:sidl=\"http://www.sap.com/2007/03/sidl\"/>\n </wsdl:documentation>\n <wsp:UsingPolicy wsdl:required=\"true\"/>\n <wsp:Policy wsu:Id=\"IF_IF_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out\">\n  <sapsession:Session xmlns:sapsession=\"http://www.sap.com/webas/630/soap/features/session/\">\n   <sapsession:enableSession>false</sapsession:enableSession>\n  </sapsession:Session>\n </wsp:Policy>\n <wsp:Policy wsu:Id=\"OP_IF_OP_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Out\">\n  <sapcomhnd:enableCommit xmlns:sapcomhnd=\"http://www.sap.com/NW05/soap/features/commit/\">true</sapcomhnd:enableCommit>\n  <sapblock:enableBlocking xmlns:sapblock=\"http://www.sap.com/NW05/soap/features/blocking/\">false</sapblock:enableBlocking>\n  <saptrhnw05:required xmlns:saptrhnw05=\"http://www.sap.com/...",
    "<bpmn2:process xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"Process_1\" name=\"Integration Process\">\n        <bpmn2:extensionElements>\n            <ifl:property>\n                <key>transactionTimeout</key>\n                <value>30</value>\n            </ifl:property>\n            <ifl:property>\n                <key>componentVersion</key>\n                <value>1.1</value>\n            </ifl:property>\n            <ifl:property>\n                <key>cmdVariantUri</key>\n                <value>ctype::FlowElementVariant/cname::IntegrationProcess/version::1.1.3</value>\n            </ifl:property>\n            <ifl:property>\n                <key>transactionalHandling</key>\n                <value>Not Required</value>\n            </ifl:property>\n        </bpmn2:extensionElements>\n        <bpmn2:startEvent id=\"StartEvent_2\" name=\"Start\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageStartEvent/version::1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:outgoing>SequenceFlow_6</bpmn2:outgoing>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:startEvent>\n        <bpmn2:endEvent id=\"EndEvent_2\" name=\"End\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageEndEvent/version::1.1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_10</bpmn2:incoming>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:endEvent>\n        <bpmn2:callActivity id=\"CallActivity_9\" name=\"Set Monitoring ID\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>bodyType</key>\n                    <value>expression</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>propertyTable</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>headerTable</key>\n                    <value>&lt;row&gt;&lt;cell id='Action'&gt;Create&lt;/cell&gt;&lt;cell id='Type'&gt;header&lt;/cell&gt;&lt;cell id='Value'&gt;SapMessageIdEx&lt;/cell&gt;&lt;cell id='Default'&gt;&lt;/cell&gt;&lt;cell id='Name'&gt;SAP_ApplicationID&lt;/cell&gt;&lt;cell id='Datatype'&gt;&lt;/cell&gt;&lt;/row&gt;</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>wrapContent</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.5</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Enricher</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::Enricher/version::1.5.1</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_7</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_10</bpmn2:outgoing>\n        </bpmn2:callActivity>\n        <bpmn2:callActivity id=\"CallActivity_4\" name=\"CNS_S4_BusinessPartnerRelationShipConfirmation\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>mappinguri</key>\n                    <value>dir://mmap/src/main/resources/mapping/CNS_S4_BusinessPartnerRelationShipConfirmation.mmap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingname</key>\n                    <value>CNS_S4_BusinessPartnerRelationShipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingType</key>\n                    <value>MessageMapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingpath</key>\n                    <value>src/main/resources/mapping/CNS_S4_BusinessPartnerRelationShipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.2</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Mapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageMapping/version::1.2.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>messageMappingBundleId</key>\n                    <value />\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_6</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_7</bpmn2:outgoing>\n        </bpmn2:callActivity>\n        <bpmn2:sequenceFlow id=\"SequenceFlow_6\" sourceRef=\"StartEvent_2\" targetRef=\"CallActivity_4\" />\n        <bpmn2:sequenceFlow id=\"SequenceFlow_10\" sourceRef=\"CallActivity_9\" targetRef=\"EndEvent_2\" />\n        <bpmn2:sequenceFlow id=\"SequenceFlow_7\" sourceRef=\"CallActivity_4\" targetRef=\"CallActivity_9\" />\n    </bpmn2:process>",
    "<bpmn2:callActivity xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"CallActivity_9\" name=\"Set Monitoring ID\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>bodyType</key>\n                    <value>expression</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>propertyTable</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>headerTable</key>\n                    <value>&lt;row&gt;&lt;cell id='Action'&gt;Create&lt;/cell&gt;&lt;cell id='Type'&gt;header&lt;/cell&gt;&lt;cell id='Value'&gt;SapMessageIdEx&lt;/cell&gt;&lt;cell id='Default'&gt;&lt;/cell&gt;&lt;cell id='Name'&gt;SAP_ApplicationID&lt;/cell&gt;&lt;cell id='Datatype'&gt;&lt;/cell&gt;&lt;/row&gt;</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>wrapContent</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.5</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Enricher</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::Enricher/version::1.5.1</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_7</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_10</bpmn2:outgoing>\n        </bpmn2:callActivity>",
    "<bpmn2:callActivity xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"CallActivity_4\" name=\"CNS_S4_BusinessPartnerRelationShipConfirmation\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>mappinguri</key>\n                    <value>dir://mmap/src/main/resources/mapping/CNS_S4_BusinessPartnerRelationShipConfirmation.mmap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingname</key>\n                    <value>CNS_S4_BusinessPartnerRelationShipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingType</key>\n                    <value>MessageMapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>mappingpath</key>\n                    <value>src/main/resources/mapping/CNS_S4_BusinessPartnerRelationShipConfirmation</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.2</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>activityType</key>\n                    <value>Mapping</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageMapping/version::1.2.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>messageMappingBundleId</key>\n                    <value />\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_6</bpmn2:incoming>\n            <bpmn2:outgoing>SequenceFlow_7</bpmn2:outgoing>\n        </bpmn2:callActivity>",
    "<bpmn2:messageFlow xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"MessageFlow_5\" name=\"HTTPS\" sourceRef=\"Participant_1\" targetRef=\"StartEvent_2\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>ComponentType</key>\n                    <value>HTTPS</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Description</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>maximumBodySize</key>\n                    <value>40</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentNS</key>\n                    <value>sap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.4</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>urlPath</key>\n                    <value>{{Sender_Address}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Name</key>\n                    <value>HTTPS</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocolVersion</key>\n                    <value>1.4.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVName</key>\n                    <value>external</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>system</key>\n                    <value>CNS</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>xsrfProtection</key>\n                    <value>{{CSRF}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocol</key>\n                    <value>HTTPS</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::AdapterVariant/cname::sap:HTTPS/tp::HTTPS/mp::None/direction::Sender/version::1.4.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>userRole</key>\n                    <value>{{User Role}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>senderAuthType</key>\n                    <value>{{Sender_Auth}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocol</key>\n                    <value>None</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocolVersion</key>\n                    <value>1.4.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVId</key>\n                    <value>1.4.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>direction</key>\n                    <value>Sender</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>clientCertificates</key>\n                    <value>&lt;row&gt;&lt;cell id='clientCertificate.subjectDN'&gt;{{subject}}&lt;/cell&gt;&lt;cell id='clientCertificate.issuerDN'&gt;{{issuer}}&lt;/cell&gt;&lt;/row&gt;</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:messageFlow>",
    "<bpmn2:messageFlow xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"MessageFlow_8\" name=\"\" sourceRef=\"EndEvent_2\" targetRef=\"Participant_2\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>cleanupHeaders</key>\n                    <value>1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Description</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentNS</key>\n                    <value>sap</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>privateKeyAlias</key>\n                    <value>{{PrivateKeyAlias}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>location_id</key>\n                    <value>{{S4_LocationID}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>Name</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocolVersion</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVName</key>\n                    <value>external</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>proxyPort</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>soapWsdlURL</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>CompressMessage</key>\n                    <value>0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>sendHttpResponseCode</key>\n                    <value>0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>soapServiceName</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocol</key>\n                    <value>Plain SOAP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentSWCVId</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>requestTimeout</key>\n                    <value>{{TimeOut}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>direction</key>\n                    <value>Receiver</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>authentication</key>\n                    <value>{{S4_Authentication}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ComponentType</key>\n                    <value>SOAP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>address</key>\n                    <value>{{S4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>allowChunking</key>\n                    <value>1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>SapRmMessageIdDetermination</key>\n                    <value>Reuse</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>proxyType</key>\n                    <value>{{S4_ProxyType}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>soapWsdlPortName</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>operationName</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.9</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>proxyHost</key>\n                    <value />\n                </ifl:property>\n                <ifl:property>\n                    <key>system</key>\n                    <value>S4</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>TransportProtocol</key>\n                    <value>HTTP</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::AdapterVariant/cname::sap:SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>credentialName</key>\n                    <value>{{S4_Credential}}</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>MessageProtocolVersion</key>\n                    <value>1.10.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>SourceForSapRmMessageId</key>\n                    <value />\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:messageFlow>",
    "<bpmn2:participant xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"Participant_1\" ifl:type=\"EndpointSender\" name=\"CNS\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>enableBasicAuthentication</key>\n                    <value>false</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>ifl:type</key>\n                    <value>EndpointSender</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:participant>",
    "<bpmn2:participant xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"Participant_2\" ifl:type=\"EndpointRecevier\" name=\"S4\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>ifl:type</key>\n                    <value>EndpointRecevier</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n        </bpmn2:participant>",
    "<bpmn2:startEvent xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"StartEvent_2\" name=\"Start\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.0</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageStartEvent/version::1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:outgoing>SequenceFlow_6</bpmn2:outgoing>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:startEvent>",
    "<bpmn2:endEvent xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:ifl=\"http:///com.sap.ifl.model/Ifl.xsd\" id=\"EndEvent_2\" name=\"End\">\n            <bpmn2:extensionElements>\n                <ifl:property>\n                    <key>componentVersion</key>\n                    <value>1.1</value>\n                </ifl:property>\n                <ifl:property>\n                    <key>cmdVariantUri</key>\n                    <value>ctype::FlowstepVariant/cname::MessageEndEvent/version::1.1.0</value>\n                </ifl:property>\n            </bpmn2:extensionElements>\n            <bpmn2:incoming>SequenceFlow_10</bpmn2:incoming>\n            <bpmn2:messageEventDefinition />\n        </bpmn2:endEvent>",
    "w\nÖÈ¥M\u00187mÿé\u0011É¥(Ã_,Á\u0013§%Å«GX?!ªÄn]KÏ²°wÜç¹æ cà¨ECñg\u0011\u000eã'Ø·\u0010Ð\\{ÿøêß¡1tRîíc\u001b¼íòe# Ï/PÚ[ô\u0006ÊM¾î'ªwüå¬\u000e¿ý±hÕçb©ó]ÞaÉ«\\U.CgÐÎ\tøãh©^8¸+¹°:nB³lH´ÖVO²£î\u0016>§O4|Õ\u0012·rÒ½$?yþ«\"_á\u0002\u0013æµ\tD\nðbaò\u0010WAd0¢WÙÊ\u001c|0\u0007LØ´\u000fÀÏ2HBSÐÉáÛcsdQÙòî\u001e\u001a¹±\nøAá|Ó\u0015²\u0011\u001f¦3x@H1ê¼fX©¸N9DqªpÒÛ×ñª( Ab\u001aÉïL#åG{\u0010ÿ\u0005v\u0016\tDØÚ(Û\u000bÇîO;ª\u0003º³!\u0016¤\n\u0011R\nF*ãV¸s×6°W0\u0000Ô[hê\u001f\u0010Û@LËinö¢OQ¥\få`ê\u0007cêðj\u0003ó·nkºQ}\u000bÒlØC\u0006£,AdþNäçÔñ\u0002»©,½tuÄªwSd/\u0014'¥ð¨\"Ã@TÝ.¿\u0014¸\u0019áW{\"¼²h\u001e)h\u000b%à$ôÕ¤H\u001efÙÈ R*Ã\"\u001c\u0003¸Wª\u0014w¦×)ømø[aö|%+ü\u001cúÑ\u0013có\u0005e=\u0000\u000edË",
    "description=This integration flow confirms Business Partner Relationship Replication from SAP Sales Cloud and SAP Service Cloud Version 2 to SAP S/4HANA Public Cloud\nSAP-MarkedSAP2SAP=SAP_TO_SAP_INTEGRATION\nsource=SAPSalesCloudandSAPServiceCloudVersion2\ntarget=SAPS4HANACloud",
    "#Store metainfo properties\n#Tue Jul 22 15:44:19 UTC 2025\ndescription=This integration flow confirms Business Partner Relationship Replication from SAP Sales Cloud and SAP Service Cloud Version 2 to SAP S/4HANA Public Cloud\nSAP-MarkedSAP2SAP=SAP_TO_SAP_INTEGRATION\nsource=SAPSalesCloudandSAPServiceCloudVersion2\ntarget=SAPS4HANACloud",
    "0\u0007Z0\u0005B \u0003\u0002\u0001\u0002\u0002\u0010\n¢¬ð\u0013á\u0007þ\u0003ª\"\"óî0\n\u0006\t*H÷\n\u0001\u0001\u000b\u0005\u00000i1\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002US1\u00170\u0015\u0006\u0003U\u0004\n\u0013\u000eDigiCert, Inc.1A0?\u0006\u0003U\u0004\u0003\u00138DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA10\u001e\u0017\n220217000000Z\u0017\n230217235959Z0_1\u000b0\t\u0006\u0003U\u0004\u0006\u0013\u0002DE1\u001b0\u0019\u0006\u0003U\u0004\b\f\u0012Baden-WÃ¼rttemberg1\u00110\u000f\u0006\u0003U\u0004\u0007\u0013\bWalldorf1\u000f0\n\u0006\u0003U\u0004\n\u0013\u0006SAP SE1\u000f0\n\u0006\u0003U\u0004\u0003\u0013\u0006SAP SE0\u0002\"0\n\u0006\t*H÷\n\u0001\u0001\u0001\u0005\u0000\u0003\u0002\u000f\u00000\u0002\n\u0002\u0002\u0001\u0000²HY÷«¯HªBÚN\u0003ÿ¼;]|¹o)Þqã\u0016\u000eE¬9·1wÿM\u0010ë\"!E\u0017Âd©ó²VHR2B7]ÏSTí\u001c\u0002£°L®\u0003|Îz\u0010Bï:í#lø !G£I²\u0002¿óv\u001aÃk\u001a³Ý0²9o*É-ËB+Ã¶ÉÍë<ÍÙfÌÄÌÈA¾ý¬97·ÆÂ¢ðø=6n\u0004ÚmòämD@$\u000b«Æ.+\n¤\u0016\u0012¦ r'îWCôh\u000eõ¿\fªdói¶<Û*\u001dÎ#$¼)ðããÄ!©\u0013\u0011àñRØ#¿ùk-\u000eûÛ'ù\u001emtv@\u0014TcLÍ¡®¦¯\u001fQt#Cê\u0003¹\u000f6÷aýw»5f×Î©mb¹ÏMLÆs\f4ÇÑ2M$µu6ïbR\u0013RÑ/§W[©\"TïYÖ'v*æbê`÷Í)\nq\u0005&8á¿ãþu\u001b\bÒÏr´=RE¹De¶>æ\u000fH­¾9r0\u0019s\u0011Ó3\u0018ÏXgdàæ²\u0002Uùôìô<)D\b§\u0004~Ó1¸-«`õ\\Ûè\u000fÆ~¤Wu\u0018â#Ó\u0018ÝÅlgOØLÏ-X:%â+\u001d´jýtÉ\u001f/uñ¨u®\nP§VQÂ<ÏÙ}ö\u000f¤ýÈ§±Ù³ºÞÅ²Kl5}GÊòPU +øAÞ\u000bê§ÿ¹\u0007MWVXÿk]Ìï¡\u0018Å§kÐ©\u0002\u0003\u0001\u0000\u0001£\u0002\u00060\u0002\u00020\u001f\u0006\u0003U\u001d#\u0004\u00180\u0016\u0014h7àë¶;ø_\u0011ûþa{\beôNB0\u001d\u0006\u0003U\u001d\u000e\u0004\u0016\u0004\u0014ÛÐ\u0002=jbsµÞÚÌ\u0004¨vb0\u000e\u0006\u0003U\u001d\u000f\u0001\u0001ÿ\u0004\u0004\u0003\u0002\u00070\u0013\u0006\u0003U\u001d%\u0004\f0\n\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0003\u00030µ\u0006\u0003U\u001d\u001f\u0004­0ª0S Q OMhttp://crl3.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0S Q OMhttp://crl4.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crl0>\u0006\u0003U\u001d \u000470503\u0006\u0006g\f\u0001\u0004\u00010)0'\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0002\u0001\u0016\u001bhttp://www.digicert.com/CPS0\u0006\b+\u0006\u0001\u0005\u0005\u0007\u0001\u0001\u000400$\u0006\b+\u0006\u0001\u0005\u0005\u00070\u0001\u0018http://ocsp.digicert.com0\\\u0006\b+\u0006\u0001\u0005\u0005\u00070\u0002Phttp://cacerts.digicert.com/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt0\f\u0006\u0003U\u001d\u0013\u0001\u0001ÿ\u0004\u00020\u00000\n\u0006\t*H÷\n\u0001\u0001\u000b\u0005\u0000\u0003\u0002\u0001\u0000é²º×óÙ7ËÇ½§³Ê\u0007¾àé:F\\\u0014h%`ËyîÍAAM9\u0017¼2\u0003\u000f ±kÂx\u0005U!:{\u0018Ú@1¸+¨·\u00078\u0000ä1Ï}~Þ e\u0019éÈ©\bó\u001c\\è\u0018hÃò7¡BM\nÍa7a\u0014á®Q%g v,'Òð×û¹ÑÂ4 Ã¹À}é*s\u0019Xûþõ0±\u000b\u000e6m\tÆQñ¿õá9ph\f²ÖrqôÂÛÇ\u000fÙBÃ.\u0010\u0012¯Ç<¯sj²\u0000\u0006í)½÷\u001aõË÷ÕÞ:åÿò{\u001dð°yÏ5R\u000bãCûÁ\u001d@«]üý\u001bÚ¨7wK¯T°\\Ýñ\u001e\nJàêekÖÄæ\u001aåµÍF\u0002\u0017Cèô§²\u0007lÓÎÈ\u0017\u001b`âÄ¯ÆóøÉ\u0017G\u0010Ý\u001c=6=n\u0005äöüí\u0014Ái¥;V?´þ!!póüªÄ\u0011Y\u0017à,Û7\u001f±§ ÊÒÑlÛ-Ôeö(t9löÙìqfTCÖã}èÌûL«v²7[\u0017]À6q§P1g[zËZÛ+c\u0010í\u000fó\t¼½\u001fÒY¸\u001f©h\u001ckgmàó ³\u0002\u000ef\u001dÚéo\u0005º\u0007½ÎxN\n¿ ½Í\u0010æùë¯ãÚÕêÝÑ¼d{»-?w\u0003ÀÜ®`S\u000bàTºÍ¿ÈÚ%H\u000bx°\u0019Ú¬'ôËJ7'Îác\u0006ûõ(²\u001b³UT­û¬\u001b\u001f\u000bÁ\u000eâ\u000e]¿?}O\u0001B=",
    "PrivateKeyAlias=\nTimeOut=60000\nsubject=cn\\=subject\nUser\\ Role=ESBMessaging.send\nissuer=cn\\=issuer",
    "Sender_Auth=RoleBased\nSender_Address=/c4c/s4/businessPartnerRelationShipS4ConfirmationOut",
    "S4_LocationID=\nS4_ProxyType=default\nS4_Credential=\nS4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address=https\\://*.s4hana.ondemand.com/sap/bc/srt/scs_ext/sap/businesspartnerrelationshipsu1\nS4_Authentication=Client Certificate",
    "#Wed Aug 28 15:39:41 UTC 2024\nPrivateKeyAlias=\nTimeOut=60000\nSender_Auth=RoleBased\nsubject=cn\\=subject\nS4_LocationID=\nS4_ProxyType=default\nUser\\ Role=ESBMessaging.send\nissuer=cn\\=issuer\nS4_Credential=\nS4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address=https\\://*.s4hana.ondemand.com/sap/bc/srt/scs_ext/sap/businesspartnerrelationshipsu1\nS4_Authentication=Client Certificate\nCSRF=0\nSender_Address=/c4c/s4/businessPartnerRelationShipS4ConfirmationOut",
    "<parameter>\n<key/>\n<name>PrivateKeyAlias</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>TimeOut</name>\n<type>xsd:integer</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>Sender_Auth</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata>\n<isCombobox>true</isCombobox>\n</additionalMetadata>\n</parameter>",
    "<parameter>\n<key/>\n<name>subject</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_LocationID</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_ProxyType</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata>\n<isCombobox>true</isCombobox>\n</additionalMetadata>\n</parameter>",
    "<parameter>\n<key/>\n<name>User Role</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>issuer</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_Credential</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<parameter>\n<key/>\n<name>S4_Authentication</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata>\n<isCombobox>true</isCombobox>\n</additionalMetadata>\n</parameter>",
    "<parameter>\n<key/>\n<name>CSRF</name>\n<type>xsd:boolean</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata>\n<isCombobox>false</isCombobox>\n</additionalMetadata>\n</parameter>",
    "<parameter>\n<key/>\n<name>Sender_Address</name>\n<type>xsd:string</type>\n<isRequired>false</isRequired>\n<constraint/>\n<description/>\n<additionalMetadata/>\n</parameter>",
    "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><parameters><parameter>\n    <key/>\n    <name>PrivateKeyAlias</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>TimeOut</name>\n    <type>xsd:integer</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>Sender_Auth</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata>\n      <isCombobox>true</isCombobox>\n    </additionalMetadata>\n  </parameter><parameter>\n    <key/>\n    <name>subject</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_LocationID</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_ProxyType</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata>\n      <isCombobox>true</isCombobox>\n    </additionalMetadata>\n  </parameter><parameter>\n    <key/>\n    <name>User Role</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>issuer</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_Credential</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><parameter>\n    <key/>\n    <name>S4_Authentication</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata>\n      <isCombobox>true</isCombobox>\n    </additionalMetadata>\n  </parameter><parameter>\n    <key/>\n    <name>CSRF</name>\n    <type>xsd:boolean</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata>\n      <isCombobox>false</isCombobox>\n    </additionalMetadata>\n  </parameter><parameter>\n    <key/>\n    <name>Sender_Address</name>\n    <type>xsd:string</type>\n    <isRequired>false</isRequired>\n    <constraint/>\n    <description/>\n    <additionalMetadata/>\n  </parameter><param_references><reference attribute_category=\"CNS\" attribute_id=\"/attrId::xsrfProtection\" attribute_uilabel=\"\" param_key=\"CSRF\"/><reference attribute_category=\"CNS\" attribute_id=\"/attrId::userRole\" attribute_uilabel=\"\" param_key=\"User Role\"/><reference attribute_category=\"CNS\" attribute_id=\"/attrId::urlPath\" attribute_uilabel=\"\" param_key=\"Sender_Address\"/><reference attribute_category=\"CNS\" attribute_id=\"/attrId::senderAuthType\" attribute_uilabel=\"\" param_key=\"Sender_Auth\"/><reference attribute_category=\"CNS\" attribute_id=\"/attrId::clientCertificates\" attribute_uilabel=\"subject\" param_key=\"subject\"/><reference attribute_category=\"CNS\" attribute_id=\"/attrId::clientCertificates\" attribute_uilabel=\"issuer\" param_key=\"issuer\"/><reference attribute_category=\"S4.Receiver.System\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::address\" attribute_uilabel=\"Address\" param_key=\"S4_BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_Address\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::proxyType\" attribute_uilabel=\"Proxy Type\" param_key=\"S4_ProxyType\"/><reference attribute_category=\"S4.Receiver.Auth\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::privateKeyAlias\" attribute_uilabel=\"Private Key Alias\" param_key=\"PrivateKeyAlias\"/><reference attribute_category=\"S4.Receiver.Auth\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::credentialName\" attribute_uilabel=\"Credential Name\" param_key=\"S4_Credential\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::location_id\" attribute_uilabel=\"Location ID\" param_key=\"S4_LocationID\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::requestTimeout\" attribute_uilabel=\"Timeout (in ms)\" param_key=\"TimeOut\"/><reference attribute_category=\"S4\" attribute_id=\"ctype::AdapterVariant/cname::SOAP/tp::HTTP/mp::Plain SOAP/direction::Receiver/version::1.9.0/attrId::authentication\" attribute_uilabel=\"Authentication\" param_key=\"S4_Authentication\"/></param_references></parameters>",
    "{\"openapi\":\"3.0.3\",\"info\":{\"title\":\"Open Api Specification for SAP CRM\",\"version\":\"0.1\"},\"paths\":{\"/sap/c4c/api/v1/http/c4c/s4/businessPartnerRelationshipS4ConfirmationOut\":{\"parameters\":[{\"name\":\"x-sap-crm-token\",\"in\":\"header\",\"required\":true,\"schema\":{\"type\":\"string\"}}],\"post\":{\"operationId\":\"createmd.integrationmetadataservice_businessPartnerRelationshipS4ConfirmationOut\",\"tags\":[\"/sap/c4c/api/v1/http/c4c/s4/businessPartnerRelationshipS4ConfirmationOut\"],\"parameters\":[],\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"title\":\"businessPartnerRelationshipS4ConfirmationMessageOut_createrequest\",\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"senderCommunicationSystemDisplayId\":{\"type\":\"string\"},\"receiverCommunicationSystemDisplayId\":{\"type\":\"string\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"}}},\"messageRequests\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"},\"actionCode\":{\"type\":\"string\"},\"referenceMessageRequestId\":{\"type\":\"string\"}}},\"body\":{\"type\":\"object\",\"properties\":{\"firstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"firstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverFirstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverFirstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"secondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"secondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverSecondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverSecondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"relationshipRole\":{\"type\":\"string\"}}}}}}}}}}},\"responses\":{\"201\":{\"description\":\"201 CREATED\",\"content\":{\"application/json\":{\"schema\":{\"title\":\"businessPartnerRelationshipS4ConfirmationMessageOut_postresponse\",\"type\":\"object\",\"properties\":{\"value\":{\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"senderCommunicationSystemDisplayId\":{\"type\":\"string\"},\"receiverCommunicationSystemDisplayId\":{\"type\":\"string\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"}}},\"messageRequests\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"messageHeader\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"format\":\"uuid\"},\"creationDateTime\":{\"type\":\"string\",\"format\":\"date-time\"},\"actionCode\":{\"type\":\"string\"},\"referenceMessageRequestId\":{\"type\":\"string\"}}},\"body\":{\"type\":\"object\",\"properties\":{\"firstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"firstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverFirstBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverFirstBusinessPartnerDisplayId\":{\"type\":\"string\"},\"secondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"secondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"receiverSecondBusinessPartnerId\":{\"type\":\"string\",\"format\":\"uuid\"},\"receiverSecondBusinessPartnerDisplayId\":{\"type\":\"string\"},\"relationshipRole\":{\"type\":\"string\"}}}}}}}},\"info\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"details\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"},\"code\":{\"type\":\"string\"}}}},\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}}}}}},\"400\":{\"description\":\"400 BAD_REQUEST\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"error\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"details\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"code\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}},\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}}}}}},\"401\":{\"description\":\"401 UNAUTHORIZED\"},\"403\":{\"description\":\"403 FORBIDDEN\"},\"404\":{\"description\":\"404 NOT_FOUND\"},\"500\":{\"description\":\"500 INTERNAL_SERVER_ERROR\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"error\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"string\"},\"details\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"},\"code\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}},\"message\":{\"type\":\"string\"},\"target\":{\"type\":\"string\"}}}}}}}}}}}}}",
    "<xiObj xmlns=\"urn:sap-com:xi\"><idInfo VID=\"01\"><vc caption=\"LOCAL\" sp=\"-1\" swcGuid=\"00000000000000000000000000000000\" vcType=\"S\"><clCxt consider=\"A\"/></vc><key typeID=\"XI_TRAFO\" version=\"\"/><version>1.0</version></idInfo><documentation><description/></documentation><generic><admInf><modifBy/><modifAt/><modifAtLong>1656340411761</modifAtLong><owner/></admInf><lnks><lnkRole kpos=\"1\" role=\"TARGET_IFR_MESS\"><lnk rMode=\"R\"><key typeID=\"wsdl\" version=\"1.1\"><elem>BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_In.wsdl</elem><elem>src/main/resources/wsdl</elem><elem>BusinessPartnerRelationshipSUITEBulkReplicateConfirmation</elem><elem>http://sap.com/xi/SAPGlobal20/Global</elem></key></lnk></lnkRole><lnkRole kpos=\"1\" role=\"SOURCE_IFR_MESS\"><lnk rMode=\"R\"><key typeID=\"json\" version=\"1.1\"><elem>businessPartnerRelationshipS4ConfirmationOut.json</elem><elem>src/main/resources/json</elem><elem>/sap/c4c/api/v1/http/c4c/s4/businessPartnerRelationshipS4ConfirmationOut__$delim$__POST__$delim$__Request</elem><elem/></key></lnk></lnkRole><lnkRole kpos=\"1\" role=\"UsedFuncLib\"><lnk rMode=\"R\"><key typeID=\"gsh\" version=\"1.1\"><elem>MappingUtility.groovy</elem><elem>src/main/resources/script</elem></key></lnk></lnkRole></lnks><textInfo loadedL=\"EN\"><textObj id=\"7505dbdc4edf46d6b879f928079cb157\" masterL=\"EN\" type=\"0\"><texts lang=\"EN\"><text label=\"\"/><text label=\"21327ec998d3248b3333da4cbe20b699\"/></texts></textObj></textInfo></generic><content><tr:XiTrafo xmlns:tr=\"urn:sap-com:xi:mapping:xitra...",
    "def String customFunc1(String P1,String P2,MappingContext context) {\n         String value1 = context.getHeader(P1);\n         String value2 = context.getProperty(P2);\n         return value1+value2;\n}",
    "def void custFunc2(String[] is,String[] ps, Output output, MappingContext context) {\n        String value1 = context.getHeader(is[0]);\n        String value2 = context.getProperty(ps[0]);\n        output.addValue(value1);\n        output.addValue(value2);\n}",
    "def String setSOAPMessageID(String arg1,  MappingContext context){\n    context.setHeader(\"SapMessageIdEx\", arg1)\n\treturn arg1 \n}",
    "import com.sap.it.api.mapping.*;\n\n/*Add MappingContext parameter to read or set headers and properties\ndef String customFunc1(String P1,String P2,MappingContext context) {\n         String value1 = context.getHeader(P1);\n         String value2 = context.getProperty(P2);\n         return value1+value2;\n}\n\nAdd Output parameter to assign the output value.\ndef void custFunc2(String[] is,String[] ps, Output output, MappingContext context) {\n        String value1 = context.getHeader(is[0]);\n        String value2 = context.getProperty(ps[0]);\n        output.addValue(value1);\n        output.addValue(value2);\n}*/\n\ndef String setSOAPMessageID(String arg1,  MappingContext context){\n    context.setHeader(\"SapMessageIdEx\", arg1)\n\treturn arg1 \n}",
    "<wsdl:service name=\"service\"><wsdl:port binding=\"tns:binding\" name=\"binding\"><soap:address location=\"http://ldciqw9.wdf.sap.corp:50000/sap/bc/srt/scs/sap/businesspartnerrelationshipsu1?sap-client=300\"/></wsdl:port></wsdl:service>",
    "<wsdl:portType name=\"BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_In\"><wsdl:documentation><sapdoc:sapdoc xmlns:sapdoc=\"urn:sap:esi:documentation\"><sapdoc:docitem applicationComponent=\"CA-MDG-APP-BP\"/></sapdoc:sapdoc></wsdl:documentation><wsdl:operation name=\"BusinessPartnerRelationshipSUITEBulkReplicateConfirmation_In\"><wsdl:input message=\"tns:BusinessPartnerRelationshipSUITEBulkReplicateConfirmation\"/></wsdl:operation></wsdl:portType>",
    "<?xml version=\"1.0\" encoding=\"utf-8\"?><wsdl:definitions targetNamespace=\"http://sap.com/xi/SAP_BS_FND/MDG/Global2\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:wsoap12=\"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http=\"http://schemas.xmlsoap.org/wsdl/http/\" xmlns:mime=\"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns=\"http://sap.com/xi/SAP_BS_FND/MDG/Global2\" xmlns:n1=\"http://sap.com/xi/SAPGlobal20/Global\"><wsdl:documentation><sidl:sidl xmlns:sidl=\"http://www.sap.com/2007/03/sidl\"/></wsdl:documentation><wsdl:types><xsd:schema targetNamespace=\"http://sap.com/xi/SAP_BS_FND/MDG/Global2\" xmlns=\"http://sap.com/xi/SAP_BS_FND/MDG/Global2\" xmlns:ccts=\"urn:un:unece:uncefact:documentation:standard:CoreComponentsTechnicalSpecification:3.0\" xmlns:sprx=\"urn:sap.com:abap:proxy\" xmlns:xi0=\"http://sap.com/xi/SAPGlobal20/Global\"><xsd:annotation><xsd:documentation><sprx:documentation version=\"1\" baseURL=\"https://ldciqw9.wdf.sap.corp:44300/sap/bc/esdt/docu/xsd_type?sap-client=300\"/></xsd:documentation></xsd:annotation><xsd:simpleType name=\"AgencyIdentificationCode\"><xsd:annotation><xsd:documentation xml:lang=\"EN\"><ccts:RepresentationTerm>Code</ccts:RepresentationTerm></xsd:documentation></xsd:annotation><xsd:restriction base=\"xsd:token\"><xsd:maxLength value=\"3\"/><xsd:minLength value=\"1\"/></xsd:restriction></xsd:simpleType><xsd:complexType name=\"BPRelshpSUITEBulkRplctConfMsg\"><xsd:sequence><..."
  ]
}